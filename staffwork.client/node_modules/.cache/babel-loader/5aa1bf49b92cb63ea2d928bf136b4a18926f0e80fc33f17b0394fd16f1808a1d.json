{"ast":null,"code":"import { Texture } from './Texture.js';\nimport { NearestFilter } from '../constants.js';\nclass DataTexture extends Texture {\n  constructor() {\n    let data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let format = arguments.length > 3 ? arguments[3] : undefined;\n    let type = arguments.length > 4 ? arguments[4] : undefined;\n    let mapping = arguments.length > 5 ? arguments[5] : undefined;\n    let wrapS = arguments.length > 6 ? arguments[6] : undefined;\n    let wrapT = arguments.length > 7 ? arguments[7] : undefined;\n    let magFilter = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : NearestFilter;\n    let minFilter = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : NearestFilter;\n    let anisotropy = arguments.length > 10 ? arguments[10] : undefined;\n    let encoding = arguments.length > 11 ? arguments[11] : undefined;\n    super(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.isDataTexture = true;\n    this.image = {\n      data: data,\n      width: width,\n      height: height\n    };\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n  }\n}\nexport { DataTexture };","map":{"version":3,"names":["Texture","NearestFilter","DataTexture","constructor","data","width","height","format","type","mapping","wrapS","wrapT","magFilter","minFilter","anisotropy","encoding","isDataTexture","image","generateMipmaps","flipY","unpackAlignment"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/textures/DataTexture.js"],"sourcesContent":["import { Texture } from './Texture.js';\nimport { NearestFilter } from '../constants.js';\n\nclass DataTexture extends Texture {\n\n\tconstructor( data = null, width = 1, height = 1, format, type, mapping, wrapS, wrapT, magFilter = NearestFilter, minFilter = NearestFilter, anisotropy, encoding ) {\n\n\t\tsuper( null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.isDataTexture = true;\n\n\t\tthis.image = { data: data, width: width, height: height };\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t}\n\n}\n\nexport { DataTexture };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,cAAc;AACtC,SAASC,aAAa,QAAQ,iBAAiB;AAE/C,MAAMC,WAAW,SAASF,OAAO,CAAC;EAEjCG,WAAW,GAAwJ;IAAA,IAAtJC,IAAI,uEAAG,IAAI;IAAA,IAAEC,KAAK,uEAAG,CAAC;IAAA,IAAEC,MAAM,uEAAG,CAAC;IAAA,IAAEC,MAAM;IAAA,IAAEC,IAAI;IAAA,IAAEC,OAAO;IAAA,IAAEC,KAAK;IAAA,IAAEC,KAAK;IAAA,IAAEC,SAAS,uEAAGX,aAAa;IAAA,IAAEY,SAAS,uEAAGZ,aAAa;IAAA,IAAEa,UAAU;IAAA,IAAEC,QAAQ;IAE/J,KAAK,CAAE,IAAI,EAAEN,OAAO,EAAEC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEN,MAAM,EAAEC,IAAI,EAAEM,UAAU,EAAEC,QAAQ,CAAE;IAE9F,IAAI,CAACC,aAAa,GAAG,IAAI;IAEzB,IAAI,CAACC,KAAK,GAAG;MAAEb,IAAI,EAAEA,IAAI;MAAEC,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAO,CAAC;IAEzD,IAAI,CAACY,eAAe,GAAG,KAAK;IAC5B,IAAI,CAACC,KAAK,GAAG,KAAK;IAClB,IAAI,CAACC,eAAe,GAAG,CAAC;EAEzB;AAED;AAEA,SAASlB,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}