{"ast":null,"code":"/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\nconst emptyTexture = /*@__PURE__*/new Texture();\nconst emptyArrayTexture = /*@__PURE__*/new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array(16);\nconst mat3array = new Float32Array(9);\nconst mat2array = new Float32Array(4);\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten(array, nBlocks, blockSize) {\n  const firstElem = array[0];\n  if (firstElem <= 0 || firstElem > 0) return array;\n  // unoptimized: ! isNaN( firstElem )\n  // see http://jacksondunstan.com/articles/983\n\n  const n = nBlocks * blockSize;\n  let r = arrayCacheF32[n];\n  if (r === undefined) {\n    r = new Float32Array(n);\n    arrayCacheF32[n] = r;\n  }\n  if (nBlocks !== 0) {\n    firstElem.toArray(r, 0);\n    for (let i = 1, offset = 0; i !== nBlocks; ++i) {\n      offset += blockSize;\n      array[i].toArray(r, offset);\n    }\n  }\n  return r;\n}\nfunction arraysEqual(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) return false;\n  }\n  return true;\n}\nfunction copyArray(a, b) {\n  for (let i = 0, l = b.length; i < l; i++) {\n    a[i] = b[i];\n  }\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits(textures, n) {\n  let r = arrayCacheI32[n];\n  if (r === undefined) {\n    r = new Int32Array(n);\n    arrayCacheI32[n] = r;\n  }\n  for (let i = 0; i !== n; ++i) {\n    r[i] = textures.allocateTextureUnit();\n  }\n  return r;\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f(gl, v) {\n  const cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1f(this.addr, v);\n  cache[0] = v;\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2f(this.addr, v.x, v.y);\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\nfunction setValueV3f(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3f(this.addr, v.x, v.y, v.z);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else if (v.r !== undefined) {\n    if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n      gl.uniform3f(this.addr, v.r, v.g, v.b);\n      cache[0] = v.r;\n      cache[1] = v.g;\n      cache[2] = v.b;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\nfunction setValueV4f(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n      gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4fv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix2fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat2array.set(elements);\n    gl.uniformMatrix2fv(this.addr, false, mat2array);\n    copyArray(cache, elements);\n  }\n}\nfunction setValueM3(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix3fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat3array.set(elements);\n    gl.uniformMatrix3fv(this.addr, false, mat3array);\n    copyArray(cache, elements);\n  }\n}\nfunction setValueM4(gl, v) {\n  const cache = this.cache;\n  const elements = v.elements;\n  if (elements === undefined) {\n    if (arraysEqual(cache, v)) return;\n    gl.uniformMatrix4fv(this.addr, false, v);\n    copyArray(cache, v);\n  } else {\n    if (arraysEqual(cache, elements)) return;\n    mat4array.set(elements);\n    gl.uniformMatrix4fv(this.addr, false, mat4array);\n    copyArray(cache, elements);\n  }\n}\n\n// Single integer / boolean\n\nfunction setValueV1i(gl, v) {\n  const cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1i(this.addr, v);\n  cache[0] = v;\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2i(this.addr, v.x, v.y);\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2iv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\nfunction setValueV3i(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3i(this.addr, v.x, v.y, v.z);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3iv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\nfunction setValueV4i(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n      gl.uniform4i(this.addr, v.x, v.y, v.z, v.w);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4iv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui(gl, v) {\n  const cache = this.cache;\n  if (cache[0] === v) return;\n  gl.uniform1ui(this.addr, v);\n  cache[0] = v;\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y) {\n      gl.uniform2ui(this.addr, v.x, v.y);\n      cache[0] = v.x;\n      cache[1] = v.y;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform2uiv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\nfunction setValueV3ui(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n      gl.uniform3ui(this.addr, v.x, v.y, v.z);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform3uiv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\nfunction setValueV4ui(gl, v) {\n  const cache = this.cache;\n  if (v.x !== undefined) {\n    if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n      gl.uniform4ui(this.addr, v.x, v.y, v.z, v.w);\n      cache[0] = v.x;\n      cache[1] = v.y;\n      cache[2] = v.z;\n      cache[3] = v.w;\n    }\n  } else {\n    if (arraysEqual(cache, v)) return;\n    gl.uniform4uiv(this.addr, v);\n    copyArray(cache, v);\n  }\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n  textures.setTexture2D(v || emptyTexture, unit);\n}\nfunction setValueT3D1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n  textures.setTexture3D(v || empty3dTexture, unit);\n}\nfunction setValueT6(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n  textures.setTextureCube(v || emptyCubeTexture, unit);\n}\nfunction setValueT2DArray1(gl, v, textures) {\n  const cache = this.cache;\n  const unit = textures.allocateTextureUnit();\n  if (cache[0] !== unit) {\n    gl.uniform1i(this.addr, unit);\n    cache[0] = unit;\n  }\n  textures.setTexture2DArray(v || emptyArrayTexture, unit);\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1f;\n    // FLOAT\n    case 0x8b50:\n      return setValueV2f;\n    // _VEC2\n    case 0x8b51:\n      return setValueV3f;\n    // _VEC3\n    case 0x8b52:\n      return setValueV4f;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2;\n    // _MAT2\n    case 0x8b5b:\n      return setValueM3;\n    // _MAT3\n    case 0x8b5c:\n      return setValueM4;\n    // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1i;\n    // INT, BOOL\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2i;\n    // _VEC2\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3i;\n    // _VEC3\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4i;\n    // _VEC4\n\n    case 0x1405:\n      return setValueV1ui;\n    // UINT\n    case 0x8dc6:\n      return setValueV2ui;\n    // _VEC2\n    case 0x8dc7:\n      return setValueV3ui;\n    // _VEC3\n    case 0x8dc8:\n      return setValueV4ui;\n    // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n    case 0x8dca: // INT_SAMPLER_2D\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n    case 0x8b62:\n      // SAMPLER_2D_SHADOW\n      return setValueT1;\n    case 0x8b5f: // SAMPLER_3D\n    case 0x8dcb: // INT_SAMPLER_3D\n    case 0x8dd3:\n      // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3D1;\n    case 0x8b60: // SAMPLER_CUBE\n    case 0x8dcc: // INT_SAMPLER_CUBE\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n    case 0x8dc5:\n      // SAMPLER_CUBE_SHADOW\n      return setValueT6;\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n    case 0x8dc4:\n      // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArray1;\n  }\n}\n\n// Array of scalars\n\nfunction setValueV1fArray(gl, v) {\n  gl.uniform1fv(this.addr, v);\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray(gl, v) {\n  const data = flatten(v, this.size, 2);\n  gl.uniform2fv(this.addr, data);\n}\nfunction setValueV3fArray(gl, v) {\n  const data = flatten(v, this.size, 3);\n  gl.uniform3fv(this.addr, data);\n}\nfunction setValueV4fArray(gl, v) {\n  const data = flatten(v, this.size, 4);\n  gl.uniform4fv(this.addr, data);\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array(gl, v) {\n  const data = flatten(v, this.size, 4);\n  gl.uniformMatrix2fv(this.addr, false, data);\n}\nfunction setValueM3Array(gl, v) {\n  const data = flatten(v, this.size, 9);\n  gl.uniformMatrix3fv(this.addr, false, data);\n}\nfunction setValueM4Array(gl, v) {\n  const data = flatten(v, this.size, 16);\n  gl.uniformMatrix4fv(this.addr, false, data);\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray(gl, v) {\n  gl.uniform1iv(this.addr, v);\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray(gl, v) {\n  gl.uniform2iv(this.addr, v);\n}\nfunction setValueV3iArray(gl, v) {\n  gl.uniform3iv(this.addr, v);\n}\nfunction setValueV4iArray(gl, v) {\n  gl.uniform4iv(this.addr, v);\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray(gl, v) {\n  gl.uniform1uiv(this.addr, v);\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray(gl, v) {\n  gl.uniform2uiv(this.addr, v);\n}\nfunction setValueV3uiArray(gl, v) {\n  gl.uniform3uiv(this.addr, v);\n}\nfunction setValueV4uiArray(gl, v) {\n  gl.uniform4uiv(this.addr, v);\n}\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array(gl, v, textures) {\n  const cache = this.cache;\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  if (!arraysEqual(cache, units)) {\n    gl.uniform1iv(this.addr, units);\n    copyArray(cache, units);\n  }\n  for (let i = 0; i !== n; ++i) {\n    textures.setTexture2D(v[i] || emptyTexture, units[i]);\n  }\n}\nfunction setValueT3DArray(gl, v, textures) {\n  const cache = this.cache;\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  if (!arraysEqual(cache, units)) {\n    gl.uniform1iv(this.addr, units);\n    copyArray(cache, units);\n  }\n  for (let i = 0; i !== n; ++i) {\n    textures.setTexture3D(v[i] || empty3dTexture, units[i]);\n  }\n}\nfunction setValueT6Array(gl, v, textures) {\n  const cache = this.cache;\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  if (!arraysEqual(cache, units)) {\n    gl.uniform1iv(this.addr, units);\n    copyArray(cache, units);\n  }\n  for (let i = 0; i !== n; ++i) {\n    textures.setTextureCube(v[i] || emptyCubeTexture, units[i]);\n  }\n}\nfunction setValueT2DArrayArray(gl, v, textures) {\n  const cache = this.cache;\n  const n = v.length;\n  const units = allocTexUnits(textures, n);\n  if (!arraysEqual(cache, units)) {\n    gl.uniform1iv(this.addr, units);\n    copyArray(cache, units);\n  }\n  for (let i = 0; i !== n; ++i) {\n    textures.setTexture2DArray(v[i] || emptyArrayTexture, units[i]);\n  }\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter(type) {\n  switch (type) {\n    case 0x1406:\n      return setValueV1fArray;\n    // FLOAT\n    case 0x8b50:\n      return setValueV2fArray;\n    // _VEC2\n    case 0x8b51:\n      return setValueV3fArray;\n    // _VEC3\n    case 0x8b52:\n      return setValueV4fArray;\n    // _VEC4\n\n    case 0x8b5a:\n      return setValueM2Array;\n    // _MAT2\n    case 0x8b5b:\n      return setValueM3Array;\n    // _MAT3\n    case 0x8b5c:\n      return setValueM4Array;\n    // _MAT4\n\n    case 0x1404:\n    case 0x8b56:\n      return setValueV1iArray;\n    // INT, BOOL\n    case 0x8b53:\n    case 0x8b57:\n      return setValueV2iArray;\n    // _VEC2\n    case 0x8b54:\n    case 0x8b58:\n      return setValueV3iArray;\n    // _VEC3\n    case 0x8b55:\n    case 0x8b59:\n      return setValueV4iArray;\n    // _VEC4\n\n    case 0x1405:\n      return setValueV1uiArray;\n    // UINT\n    case 0x8dc6:\n      return setValueV2uiArray;\n    // _VEC2\n    case 0x8dc7:\n      return setValueV3uiArray;\n    // _VEC3\n    case 0x8dc8:\n      return setValueV4uiArray;\n    // _VEC4\n\n    case 0x8b5e: // SAMPLER_2D\n    case 0x8d66: // SAMPLER_EXTERNAL_OES\n    case 0x8dca: // INT_SAMPLER_2D\n    case 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n    case 0x8b62:\n      // SAMPLER_2D_SHADOW\n      return setValueT1Array;\n    case 0x8b5f: // SAMPLER_3D\n    case 0x8dcb: // INT_SAMPLER_3D\n    case 0x8dd3:\n      // UNSIGNED_INT_SAMPLER_3D\n      return setValueT3DArray;\n    case 0x8b60: // SAMPLER_CUBE\n    case 0x8dcc: // INT_SAMPLER_CUBE\n    case 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n    case 0x8dc5:\n      // SAMPLER_CUBE_SHADOW\n      return setValueT6Array;\n    case 0x8dc1: // SAMPLER_2D_ARRAY\n    case 0x8dcf: // INT_SAMPLER_2D_ARRAY\n    case 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n    case 0x8dc4:\n      // SAMPLER_2D_ARRAY_SHADOW\n      return setValueT2DArrayArray;\n  }\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n  constructor(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.setValue = getSingularSetter(activeInfo.type);\n\n    // this.path = activeInfo.name; // DEBUG\n  }\n}\n\nclass PureArrayUniform {\n  constructor(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type);\n\n    // this.path = activeInfo.name; // DEBUG\n  }\n}\n\nclass StructuredUniform {\n  constructor(id) {\n    this.id = id;\n    this.seq = [];\n    this.map = {};\n  }\n  setValue(gl, value, textures) {\n    const seq = this.seq;\n    for (let i = 0, n = seq.length; i !== n; ++i) {\n      const u = seq[i];\n      u.setValue(gl, value[u.id], textures);\n    }\n  }\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform(container, uniformObject) {\n  container.seq.push(uniformObject);\n  container.map[uniformObject.id] = uniformObject;\n}\nfunction parseUniform(activeInfo, addr, container) {\n  const path = activeInfo.name,\n    pathLength = path.length;\n\n  // reset RegExp object, because of the early exit of a previous run\n  RePathPart.lastIndex = 0;\n  while (true) {\n    const match = RePathPart.exec(path),\n      matchEnd = RePathPart.lastIndex;\n    let id = match[1];\n    const idIsIndex = match[2] === ']',\n      subscript = match[3];\n    if (idIsIndex) id = id | 0; // convert to integer\n\n    if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n      // bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n      addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n      break;\n    } else {\n      // step into inner node / create it in case it doesn't exist\n\n      const map = container.map;\n      let next = map[id];\n      if (next === undefined) {\n        next = new StructuredUniform(id);\n        addUniform(container, next);\n      }\n      container = next;\n    }\n  }\n}\n\n// Root Container\n\nclass WebGLUniforms {\n  constructor(gl, program) {\n    this.seq = [];\n    this.map = {};\n    const n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n    for (let i = 0; i < n; ++i) {\n      const info = gl.getActiveUniform(program, i),\n        addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n  setValue(gl, name, value, textures) {\n    const u = this.map[name];\n    if (u !== undefined) u.setValue(gl, value, textures);\n  }\n  setOptional(gl, object, name) {\n    const v = object[name];\n    if (v !== undefined) this.setValue(gl, name, v);\n  }\n  static upload(gl, seq, values, textures) {\n    for (let i = 0, n = seq.length; i !== n; ++i) {\n      const u = seq[i],\n        v = values[u.id];\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, textures);\n      }\n    }\n  }\n  static seqWithValue(seq, values) {\n    const r = [];\n    for (let i = 0, n = seq.length; i !== n; ++i) {\n      const u = seq[i];\n      if (u.id in values) r.push(u);\n    }\n    return r;\n  }\n}\nexport { WebGLUniforms };","map":{"version":3,"names":["CubeTexture","Texture","DataArrayTexture","Data3DTexture","emptyTexture","emptyArrayTexture","empty3dTexture","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","mat2array","flatten","array","nBlocks","blockSize","firstElem","n","r","undefined","toArray","i","offset","arraysEqual","a","b","length","l","copyArray","allocTexUnits","textures","Int32Array","allocateTextureUnit","setValueV1f","gl","v","cache","uniform1f","addr","setValueV2f","x","y","uniform2f","uniform2fv","setValueV3f","z","uniform3f","g","uniform3fv","setValueV4f","w","uniform4f","uniform4fv","setValueM2","elements","uniformMatrix2fv","set","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2i","uniform2iv","setValueV3i","uniform3i","uniform3iv","setValueV4i","uniform4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2ui","uniform2uiv","setValueV3ui","uniform3ui","uniform3uiv","setValueV4ui","uniform4ui","uniform4uiv","setValueT1","unit","setTexture2D","setValueT3D1","setTexture3D","setValueT6","setTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","type","setValueV1fArray","uniform1fv","setValueV2fArray","data","size","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT3DArray","setValueT6Array","setValueT2DArrayArray","getPureArraySetter","SingleUniform","constructor","id","activeInfo","setValue","PureArrayUniform","StructuredUniform","seq","map","value","u","RePathPart","addUniform","container","uniformObject","push","parseUniform","path","name","pathLength","lastIndex","match","exec","matchEnd","idIsIndex","subscript","next","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","info","getActiveUniform","getUniformLocation","setOptional","object","upload","values","needsUpdate","seqWithValue"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLUniforms.js"],"sourcesContent":["/**\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [textures] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'textures' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (textures factorizations):\n *\n * .upload( gl, seq, values, textures )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (textures factorizations):\n *\n * .setValue( gl, name, value, textures )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nimport { CubeTexture } from '../../textures/CubeTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { DataArrayTexture } from '../../textures/DataArrayTexture.js';\nimport { Data3DTexture } from '../../textures/Data3DTexture.js';\n\nconst emptyTexture = /*@__PURE__*/ new Texture();\nconst emptyArrayTexture = /*@__PURE__*/ new DataArrayTexture();\nconst empty3dTexture = /*@__PURE__*/ new Data3DTexture();\nconst emptyCubeTexture = /*@__PURE__*/ new CubeTexture();\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nconst arrayCacheF32 = [];\nconst arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nconst mat4array = new Float32Array( 16 );\nconst mat3array = new Float32Array( 9 );\nconst mat2array = new Float32Array( 4 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tconst firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tconst n = nBlocks * blockSize;\n\tlet r = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( let i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\nfunction arraysEqual( a, b ) {\n\n\tif ( a.length !== b.length ) return false;\n\n\tfor ( let i = 0, l = a.length; i < l; i ++ ) {\n\n\t\tif ( a[ i ] !== b[ i ] ) return false;\n\n\t}\n\n\treturn true;\n\n}\n\nfunction copyArray( a, b ) {\n\n\tfor ( let i = 0, l = b.length; i < l; i ++ ) {\n\n\t\ta[ i ] = b[ i ];\n\n\t}\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( textures, n ) {\n\n\tlet r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\tr[ i ] = textures.allocateTextureUnit();\n\n\t}\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValueV1f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1f( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValueV2f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\tcache[ 0 ] = v.r;\n\t\t\tcache[ 1 ] = v.g;\n\t\t\tcache[ 2 ] = v.b;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4f( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single matrix (from flat array or THREE.MatrixN)\n\nfunction setValueM2( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat2array.set( elements );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM3( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat3array.set( elements );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\nfunction setValueM4( gl, v ) {\n\n\tconst cache = this.cache;\n\tconst elements = v.elements;\n\n\tif ( elements === undefined ) {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\tcopyArray( cache, v );\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, elements ) ) return;\n\n\t\tmat4array.set( elements );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\tcopyArray( cache, elements );\n\n\t}\n\n}\n\n// Single integer / boolean\n\nfunction setValueV1i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1i( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single integer / boolean vector (from flat array or THREE.VectorN)\n\nfunction setValueV2i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2i( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3i( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4i( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4i( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n// Single unsigned integer\n\nfunction setValueV1ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( cache[ 0 ] === v ) return;\n\n\tgl.uniform1ui( this.addr, v );\n\n\tcache[ 0 ] = v;\n\n}\n\n// Single unsigned integer vector (from flat array or THREE.VectorN)\n\nfunction setValueV2ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\tgl.uniform2ui( this.addr, v.x, v.y );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform2uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV3ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\tgl.uniform3ui( this.addr, v.x, v.y, v.z );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform3uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\nfunction setValueV4ui( gl, v ) {\n\n\tconst cache = this.cache;\n\n\tif ( v.x !== undefined ) {\n\n\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\tgl.uniform4ui( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\tcache[ 0 ] = v.x;\n\t\t\tcache[ 1 ] = v.y;\n\t\t\tcache[ 2 ] = v.z;\n\t\t\tcache[ 3 ] = v.w;\n\n\t\t}\n\n\t} else {\n\n\t\tif ( arraysEqual( cache, v ) ) return;\n\n\t\tgl.uniform4uiv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n}\n\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT3D1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture3D( v || empty3dTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\nfunction setValueT2DArray1( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\tconst unit = textures.allocateTextureUnit();\n\n\tif ( cache[ 0 ] !== unit ) {\n\n\t\tgl.uniform1i( this.addr, unit );\n\t\tcache[ 0 ] = unit;\n\n\t}\n\n\ttextures.setTexture2DArray( v || emptyArrayTexture, unit );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\tcase 0x1405: return setValueV1ui; // UINT\n\t\tcase 0x8dc6: return setValueV2ui; // _VEC2\n\t\tcase 0x8dc7: return setValueV3ui; // _VEC3\n\t\tcase 0x8dc8: return setValueV4ui; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3D1;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArray1;\n\n\t}\n\n}\n\n\n// Array of scalars\n\nfunction setValueV1fArray( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\n\n// Array of vectors (from flat array or array of THREE.VectorN)\n\nfunction setValueV2fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 2 );\n\n\tgl.uniform2fv( this.addr, data );\n\n}\n\nfunction setValueV3fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 3 );\n\n\tgl.uniform3fv( this.addr, data );\n\n}\n\nfunction setValueV4fArray( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniform4fv( this.addr, data );\n\n}\n\n// Array of matrices (from flat array or array of THREE.MatrixN)\n\nfunction setValueM2Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 4 );\n\n\tgl.uniformMatrix2fv( this.addr, false, data );\n\n}\n\nfunction setValueM3Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 9 );\n\n\tgl.uniformMatrix3fv( this.addr, false, data );\n\n}\n\nfunction setValueM4Array( gl, v ) {\n\n\tconst data = flatten( v, this.size, 16 );\n\n\tgl.uniformMatrix4fv( this.addr, false, data );\n\n}\n\n// Array of integer / boolean\n\nfunction setValueV1iArray( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of integer / boolean vectors (from flat array)\n\nfunction setValueV2iArray( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValueV3iArray( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValueV4iArray( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Array of unsigned integer\n\nfunction setValueV1uiArray( gl, v ) {\n\n\tgl.uniform1uiv( this.addr, v );\n\n}\n\n// Array of unsigned integer vectors (from flat array)\n\nfunction setValueV2uiArray( gl, v ) {\n\n\tgl.uniform2uiv( this.addr, v );\n\n}\n\nfunction setValueV3uiArray( gl, v ) {\n\n\tgl.uniform3uiv( this.addr, v );\n\n}\n\nfunction setValueV4uiArray( gl, v ) {\n\n\tgl.uniform4uiv( this.addr, v );\n\n}\n\n\n// Array of textures (2D / 3D / Cube / 2DArray)\n\nfunction setValueT1Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT3DArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture3D( v[ i ] || empty3dTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6Array( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT2DArrayArray( gl, v, textures ) {\n\n\tconst cache = this.cache;\n\n\tconst n = v.length;\n\n\tconst units = allocTexUnits( textures, n );\n\n\tif ( ! arraysEqual( cache, units ) ) {\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tcopyArray( cache, units );\n\n\t}\n\n\tfor ( let i = 0; i !== n; ++ i ) {\n\n\t\ttextures.setTexture2DArray( v[ i ] || emptyArrayTexture, units[ i ] );\n\n\t}\n\n}\n\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\tcase 0x1405: return setValueV1uiArray; // UINT\n\t\tcase 0x8dc6: return setValueV2uiArray; // _VEC2\n\t\tcase 0x8dc7: return setValueV3uiArray; // _VEC3\n\t\tcase 0x8dc8: return setValueV4uiArray; // _VEC4\n\n\t\tcase 0x8b5e: // SAMPLER_2D\n\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\t\tcase 0x8dca: // INT_SAMPLER_2D\n\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\t\tcase 0x8b62: // SAMPLER_2D_SHADOW\n\t\t\treturn setValueT1Array;\n\n\t\tcase 0x8b5f: // SAMPLER_3D\n\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\t\tcase 0x8dd3: // UNSIGNED_INT_SAMPLER_3D\n\t\t\treturn setValueT3DArray;\n\n\t\tcase 0x8b60: // SAMPLER_CUBE\n\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\t\tcase 0x8dc5: // SAMPLER_CUBE_SHADOW\n\t\t\treturn setValueT6Array;\n\n\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\t\tcase 0x8dc4: // SAMPLER_2D_ARRAY_SHADOW\n\t\t\treturn setValueT2DArrayArray;\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nclass SingleUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass PureArrayUniform {\n\n\tconstructor( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n}\n\nclass StructuredUniform {\n\n\tconstructor( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tsetValue( gl, value, textures ) {\n\n\t\tconst seq = this.seq;\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t}\n\n}\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tconst path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\twhile ( true ) {\n\n\t\tconst match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex;\n\n\t\tlet id = match[ 1 ];\n\t\tconst idIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tconst map = container.map;\n\t\t\tlet next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nclass WebGLUniforms {\n\n\tconstructor( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tconst n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\t\tfor ( let i = 0; i < n; ++ i ) {\n\n\t\t\tconst info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tsetValue( gl, name, value, textures ) {\n\n\t\tconst u = this.map[ name ];\n\n\t\tif ( u !== undefined ) u.setValue( gl, value, textures );\n\n\t}\n\n\tsetOptional( gl, object, name ) {\n\n\t\tconst v = object[ name ];\n\n\t\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n\t}\n\n\tstatic upload( gl, seq, values, textures ) {\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tstatic seqWithValue( seq, values ) {\n\n\t\tconst r = [];\n\n\t\tfor ( let i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tconst u = seq[ i ];\n\t\t\tif ( u.id in values ) r.push( u );\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n}\n\nexport { WebGLUniforms };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}