{"ast":null,"code":"import { Vector2 } from './Vector2.js';\nconst _vector = /*@__PURE__*/new Vector2();\nclass Box2 {\n  constructor() {\n    let min = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2(+Infinity, +Infinity);\n    let max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2(-Infinity, -Infinity);\n    this.isBox2 = true;\n    this.min = min;\n    this.max = max;\n  }\n  set(min, max) {\n    this.min.copy(min);\n    this.max.copy(max);\n    return this;\n  }\n  setFromPoints(points) {\n    this.makeEmpty();\n    for (let i = 0, il = points.length; i < il; i++) {\n      this.expandByPoint(points[i]);\n    }\n    return this;\n  }\n  setFromCenterAndSize(center, size) {\n    const halfSize = _vector.copy(size).multiplyScalar(0.5);\n    this.min.copy(center).sub(halfSize);\n    this.max.copy(center).add(halfSize);\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(box) {\n    this.min.copy(box.min);\n    this.max.copy(box.max);\n    return this;\n  }\n  makeEmpty() {\n    this.min.x = this.min.y = +Infinity;\n    this.max.x = this.max.y = -Infinity;\n    return this;\n  }\n  isEmpty() {\n    // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n    return this.max.x < this.min.x || this.max.y < this.min.y;\n  }\n  getCenter(target) {\n    return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n  }\n  getSize(target) {\n    return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n  }\n  expandByPoint(point) {\n    this.min.min(point);\n    this.max.max(point);\n    return this;\n  }\n  expandByVector(vector) {\n    this.min.sub(vector);\n    this.max.add(vector);\n    return this;\n  }\n  expandByScalar(scalar) {\n    this.min.addScalar(-scalar);\n    this.max.addScalar(scalar);\n    return this;\n  }\n  containsPoint(point) {\n    return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n  }\n  containsBox(box) {\n    return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n  }\n  getParameter(point, target) {\n    // This can potentially have a divide by zero if the box\n    // has a size dimension of 0.\n\n    return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n  }\n  intersectsBox(box) {\n    // using 4 splitting planes to rule out intersections\n\n    return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n  }\n  clampPoint(point, target) {\n    return target.copy(point).clamp(this.min, this.max);\n  }\n  distanceToPoint(point) {\n    const clampedPoint = _vector.copy(point).clamp(this.min, this.max);\n    return clampedPoint.sub(point).length();\n  }\n  intersect(box) {\n    this.min.max(box.min);\n    this.max.min(box.max);\n    return this;\n  }\n  union(box) {\n    this.min.min(box.min);\n    this.max.max(box.max);\n    return this;\n  }\n  translate(offset) {\n    this.min.add(offset);\n    this.max.add(offset);\n    return this;\n  }\n  equals(box) {\n    return box.min.equals(this.min) && box.max.equals(this.max);\n  }\n}\nexport { Box2 };","map":{"version":3,"names":["Vector2","_vector","Box2","constructor","min","Infinity","max","isBox2","set","copy","setFromPoints","points","makeEmpty","i","il","length","expandByPoint","setFromCenterAndSize","center","size","halfSize","multiplyScalar","sub","add","clone","box","x","y","isEmpty","getCenter","target","addVectors","getSize","subVectors","point","expandByVector","vector","expandByScalar","scalar","addScalar","containsPoint","containsBox","getParameter","intersectsBox","clampPoint","clamp","distanceToPoint","clampedPoint","intersect","union","translate","offset","equals"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/math/Box2.js"],"sourcesContent":["import { Vector2 } from './Vector2.js';\n\nconst _vector = /*@__PURE__*/ new Vector2();\n\nclass Box2 {\n\n\tconstructor( min = new Vector2( + Infinity, + Infinity ), max = new Vector2( - Infinity, - Infinity ) ) {\n\n\t\tthis.isBox2 = true;\n\n\t\tthis.min = min;\n\t\tthis.max = max;\n\n\t}\n\n\tset( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t}\n\n\tsetFromPoints( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( let i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetFromCenterAndSize( center, size ) {\n\n\t\tconst halfSize = _vector.copy( size ).multiplyScalar( 0.5 );\n\t\tthis.min.copy( center ).sub( halfSize );\n\t\tthis.max.copy( center ).add( halfSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tmakeEmpty() {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t}\n\n\tisEmpty() {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t}\n\n\tgetCenter( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t}\n\n\tgetSize( target ) {\n\n\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t}\n\n\texpandByPoint( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t}\n\n\texpandByVector( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t}\n\n\texpandByScalar( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t}\n\n\tcontainsPoint( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t}\n\n\tcontainsBox( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t}\n\n\tgetParameter( point, target ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\treturn target.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t}\n\n\tintersectsBox( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t}\n\n\tclampPoint( point, target ) {\n\n\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t}\n\n\tdistanceToPoint( point ) {\n\n\t\tconst clampedPoint = _vector.copy( point ).clamp( this.min, this.max );\n\t\treturn clampedPoint.sub( point ).length();\n\n\t}\n\n\tintersect( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t}\n\n\tunion( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t}\n\n\ttranslate( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t}\n\n\tequals( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n}\n\nexport { Box2 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}