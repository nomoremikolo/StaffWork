{"ast":null,"code":"import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LightProbe } from './LightProbe.js';\nclass HemisphereLightProbe extends LightProbe {\n  constructor(skyColor, groundColor) {\n    let intensity = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    super(undefined, intensity);\n    this.isHemisphereLightProbe = true;\n    const color1 = new Color().set(skyColor);\n    const color2 = new Color().set(groundColor);\n    const sky = new Vector3(color1.r, color1.g, color1.b);\n    const ground = new Vector3(color2.r, color2.g, color2.b);\n\n    // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n    const c0 = Math.sqrt(Math.PI);\n    const c1 = c0 * Math.sqrt(0.75);\n    this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n    this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n  }\n}\nexport { HemisphereLightProbe };","map":{"version":3,"names":["Color","Vector3","LightProbe","HemisphereLightProbe","constructor","skyColor","groundColor","intensity","undefined","isHemisphereLightProbe","color1","set","color2","sky","r","g","b","ground","c0","Math","sqrt","PI","c1","sh","coefficients","copy","add","multiplyScalar","sub"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/lights/HemisphereLightProbe.js"],"sourcesContent":["import { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LightProbe } from './LightProbe.js';\n\nclass HemisphereLightProbe extends LightProbe {\n\n\tconstructor( skyColor, groundColor, intensity = 1 ) {\n\n\t\tsuper( undefined, intensity );\n\n\t\tthis.isHemisphereLightProbe = true;\n\n\t\tconst color1 = new Color().set( skyColor );\n\t\tconst color2 = new Color().set( groundColor );\n\n\t\tconst sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tconst ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tconst c0 = Math.sqrt( Math.PI );\n\t\tconst c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n}\n\nexport { HemisphereLightProbe };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,kBAAkB;AACxC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,UAAU,QAAQ,iBAAiB;AAE5C,MAAMC,oBAAoB,SAASD,UAAU,CAAC;EAE7CE,WAAW,CAAEC,QAAQ,EAAEC,WAAW,EAAkB;IAAA,IAAhBC,SAAS,uEAAG,CAAC;IAEhD,KAAK,CAAEC,SAAS,EAAED,SAAS,CAAE;IAE7B,IAAI,CAACE,sBAAsB,GAAG,IAAI;IAElC,MAAMC,MAAM,GAAG,IAAIV,KAAK,EAAE,CAACW,GAAG,CAAEN,QAAQ,CAAE;IAC1C,MAAMO,MAAM,GAAG,IAAIZ,KAAK,EAAE,CAACW,GAAG,CAAEL,WAAW,CAAE;IAE7C,MAAMO,GAAG,GAAG,IAAIZ,OAAO,CAAES,MAAM,CAACI,CAAC,EAAEJ,MAAM,CAACK,CAAC,EAAEL,MAAM,CAACM,CAAC,CAAE;IACvD,MAAMC,MAAM,GAAG,IAAIhB,OAAO,CAAEW,MAAM,CAACE,CAAC,EAAEF,MAAM,CAACG,CAAC,EAAEH,MAAM,CAACI,CAAC,CAAE;;IAE1D;IACA,MAAME,EAAE,GAAGC,IAAI,CAACC,IAAI,CAAED,IAAI,CAACE,EAAE,CAAE;IAC/B,MAAMC,EAAE,GAAGJ,EAAE,GAAGC,IAAI,CAACC,IAAI,CAAE,IAAI,CAAE;IAEjC,IAAI,CAACG,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAACC,IAAI,CAAEZ,GAAG,CAAE,CAACa,GAAG,CAAET,MAAM,CAAE,CAACU,cAAc,CAAET,EAAE,CAAE;IACxE,IAAI,CAACK,EAAE,CAACC,YAAY,CAAE,CAAC,CAAE,CAACC,IAAI,CAAEZ,GAAG,CAAE,CAACe,GAAG,CAAEX,MAAM,CAAE,CAACU,cAAc,CAAEL,EAAE,CAAE;EAEzE;AAED;AAEA,SAASnB,oBAAoB"},"metadata":{},"sourceType":"module","externalDependencies":[]}