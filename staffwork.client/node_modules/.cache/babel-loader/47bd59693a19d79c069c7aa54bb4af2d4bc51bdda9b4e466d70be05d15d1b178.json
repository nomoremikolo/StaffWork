{"ast":null,"code":"import { EventDispatcher } from '../core/EventDispatcher.js';\nimport { MirroredRepeatWrapping, ClampToEdgeWrapping, RepeatWrapping, LinearEncoding, UnsignedByteType, RGBAFormat, LinearMipmapLinearFilter, LinearFilter, UVMapping } from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Source } from './Source.js';\nlet textureId = 0;\nclass Texture extends EventDispatcher {\n  constructor() {\n    let image = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Texture.DEFAULT_IMAGE;\n    let mapping = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Texture.DEFAULT_MAPPING;\n    let wrapS = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : ClampToEdgeWrapping;\n    let wrapT = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : ClampToEdgeWrapping;\n    let magFilter = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : LinearFilter;\n    let minFilter = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : LinearMipmapLinearFilter;\n    let format = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : RGBAFormat;\n    let type = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : UnsignedByteType;\n    let anisotropy = arguments.length > 8 && arguments[8] !== undefined ? arguments[8] : Texture.DEFAULT_ANISOTROPY;\n    let encoding = arguments.length > 9 && arguments[9] !== undefined ? arguments[9] : LinearEncoding;\n    super();\n    this.isTexture = true;\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.name = '';\n    this.source = new Source(image);\n    this.mipmaps = [];\n    this.mapping = mapping;\n    this.wrapS = wrapS;\n    this.wrapT = wrapT;\n    this.magFilter = magFilter;\n    this.minFilter = minFilter;\n    this.anisotropy = anisotropy;\n    this.format = format;\n    this.internalFormat = null;\n    this.type = type;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n    this.encoding = encoding;\n    this.userData = {};\n    this.version = 0;\n    this.onUpdate = null;\n    this.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n    this.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n  }\n\n  get image() {\n    return this.source.data;\n  }\n  set image(value) {\n    this.source.data = value;\n  }\n  updateMatrix() {\n    this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  copy(source) {\n    this.name = source.name;\n    this.source = source.source;\n    this.mipmaps = source.mipmaps.slice(0);\n    this.mapping = source.mapping;\n    this.wrapS = source.wrapS;\n    this.wrapT = source.wrapT;\n    this.magFilter = source.magFilter;\n    this.minFilter = source.minFilter;\n    this.anisotropy = source.anisotropy;\n    this.format = source.format;\n    this.internalFormat = source.internalFormat;\n    this.type = source.type;\n    this.offset.copy(source.offset);\n    this.repeat.copy(source.repeat);\n    this.center.copy(source.center);\n    this.rotation = source.rotation;\n    this.matrixAutoUpdate = source.matrixAutoUpdate;\n    this.matrix.copy(source.matrix);\n    this.generateMipmaps = source.generateMipmaps;\n    this.premultiplyAlpha = source.premultiplyAlpha;\n    this.flipY = source.flipY;\n    this.unpackAlignment = source.unpackAlignment;\n    this.encoding = source.encoding;\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n    this.needsUpdate = true;\n    return this;\n  }\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n      return meta.textures[this.uuid];\n    }\n    const output = {\n      metadata: {\n        version: 4.5,\n        type: 'Texture',\n        generator: 'Texture.toJSON'\n      },\n      uuid: this.uuid,\n      name: this.name,\n      image: this.source.toJSON(meta).uuid,\n      mapping: this.mapping,\n      repeat: [this.repeat.x, this.repeat.y],\n      offset: [this.offset.x, this.offset.y],\n      center: [this.center.x, this.center.y],\n      rotation: this.rotation,\n      wrap: [this.wrapS, this.wrapT],\n      format: this.format,\n      type: this.type,\n      encoding: this.encoding,\n      minFilter: this.minFilter,\n      magFilter: this.magFilter,\n      anisotropy: this.anisotropy,\n      flipY: this.flipY,\n      premultiplyAlpha: this.premultiplyAlpha,\n      unpackAlignment: this.unpackAlignment\n    };\n    if (JSON.stringify(this.userData) !== '{}') output.userData = this.userData;\n    if (!isRootObject) {\n      meta.textures[this.uuid] = output;\n    }\n    return output;\n  }\n  dispose() {\n    this.dispatchEvent({\n      type: 'dispose'\n    });\n  }\n  transformUv(uv) {\n    if (this.mapping !== UVMapping) return uv;\n    uv.applyMatrix3(this.matrix);\n    if (uv.x < 0 || uv.x > 1) {\n      switch (this.wrapS) {\n        case RepeatWrapping:\n          uv.x = uv.x - Math.floor(uv.x);\n          break;\n        case ClampToEdgeWrapping:\n          uv.x = uv.x < 0 ? 0 : 1;\n          break;\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n            uv.x = Math.ceil(uv.x) - uv.x;\n          } else {\n            uv.x = uv.x - Math.floor(uv.x);\n          }\n          break;\n      }\n    }\n    if (uv.y < 0 || uv.y > 1) {\n      switch (this.wrapT) {\n        case RepeatWrapping:\n          uv.y = uv.y - Math.floor(uv.y);\n          break;\n        case ClampToEdgeWrapping:\n          uv.y = uv.y < 0 ? 0 : 1;\n          break;\n        case MirroredRepeatWrapping:\n          if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n            uv.y = Math.ceil(uv.y) - uv.y;\n          } else {\n            uv.y = uv.y - Math.floor(uv.y);\n          }\n          break;\n      }\n    }\n    if (this.flipY) {\n      uv.y = 1 - uv.y;\n    }\n    return uv;\n  }\n  set needsUpdate(value) {\n    if (value === true) {\n      this.version++;\n      this.source.needsUpdate = true;\n    }\n  }\n}\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\nexport { Texture };","map":{"version":3,"names":["EventDispatcher","MirroredRepeatWrapping","ClampToEdgeWrapping","RepeatWrapping","LinearEncoding","UnsignedByteType","RGBAFormat","LinearMipmapLinearFilter","LinearFilter","UVMapping","MathUtils","Vector2","Matrix3","Source","textureId","Texture","constructor","image","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","type","anisotropy","DEFAULT_ANISOTROPY","encoding","isTexture","Object","defineProperty","value","uuid","generateUUID","name","source","mipmaps","internalFormat","offset","repeat","center","rotation","matrixAutoUpdate","matrix","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","userData","version","onUpdate","isRenderTargetTexture","needsPMREMUpdate","data","updateMatrix","setUvTransform","x","y","clone","copy","slice","JSON","parse","stringify","needsUpdate","toJSON","meta","isRootObject","undefined","textures","output","metadata","generator","wrap","dispose","dispatchEvent","transformUv","uv","applyMatrix3","Math","floor","abs","ceil"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/textures/Texture.js"],"sourcesContent":["import { EventDispatcher } from '../core/EventDispatcher.js';\nimport {\n\tMirroredRepeatWrapping,\n\tClampToEdgeWrapping,\n\tRepeatWrapping,\n\tLinearEncoding,\n\tUnsignedByteType,\n\tRGBAFormat,\n\tLinearMipmapLinearFilter,\n\tLinearFilter,\n\tUVMapping\n} from '../constants.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Matrix3 } from '../math/Matrix3.js';\nimport { Source } from './Source.js';\n\nlet textureId = 0;\n\nclass Texture extends EventDispatcher {\n\n\tconstructor( image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = Texture.DEFAULT_ANISOTROPY, encoding = LinearEncoding ) {\n\n\t\tsuper();\n\n\t\tthis.isTexture = true;\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.source = new Source( image );\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping;\n\n\t\tthis.wrapS = wrapS;\n\t\tthis.wrapT = wrapT;\n\n\t\tthis.magFilter = magFilter;\n\t\tthis.minFilter = minFilter;\n\n\t\tthis.anisotropy = anisotropy;\n\n\t\tthis.format = format;\n\t\tthis.internalFormat = null;\n\t\tthis.type = type;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding;\n\n\t\tthis.userData = {};\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t\tthis.isRenderTargetTexture = false; // indicates whether a texture belongs to a render target or not\n\t\tthis.needsPMREMUpdate = false; // indicates whether this texture should be processed by PMREMGenerator or not (only relevant for render target textures)\n\n\t}\n\n\tget image() {\n\n\t\treturn this.source.data;\n\n\t}\n\n\tset image( value ) {\n\n\t\tthis.source.data = value;\n\n\t}\n\n\tupdateMatrix() {\n\n\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.source = source.source;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.internalFormat = source.internalFormat;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.needsUpdate = true;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\timage: this.source.toJSON( meta ).uuid,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tformat: this.format,\n\t\t\ttype: this.type,\n\t\t\tencoding: this.encoding,\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY,\n\n\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t};\n\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) output.userData = this.userData;\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n\ttransformUv( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return uv;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t\treturn uv;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) {\n\n\t\t\tthis.version ++;\n\t\t\tthis.source.needsUpdate = true;\n\n\t\t}\n\n\t}\n\n}\n\nTexture.DEFAULT_IMAGE = null;\nTexture.DEFAULT_MAPPING = UVMapping;\nTexture.DEFAULT_ANISOTROPY = 1;\n\nexport { Texture };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}