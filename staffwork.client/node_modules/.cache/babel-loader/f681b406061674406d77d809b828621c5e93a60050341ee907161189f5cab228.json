{"ast":null,"code":"import { CylinderGeometry } from './CylinderGeometry.js';\nclass ConeGeometry extends CylinderGeometry {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let radialSegments = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    let heightSegments = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let openEnded = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n    let thetaStart = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0;\n    let thetaLength = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : Math.PI * 2;\n    super(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n  static fromJSON(data) {\n    return new ConeGeometry(data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n  }\n}\nexport { ConeGeometry };","map":{"version":3,"names":["CylinderGeometry","ConeGeometry","constructor","radius","height","radialSegments","heightSegments","openEnded","thetaStart","thetaLength","Math","PI","type","parameters","fromJSON","data"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/geometries/ConeGeometry.js"],"sourcesContent":["import { CylinderGeometry } from './CylinderGeometry.js';\n\nclass ConeGeometry extends CylinderGeometry {\n\n\tconstructor( radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2 ) {\n\n\t\tsuper( 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tstatic fromJSON( data ) {\n\n\t\treturn new ConeGeometry( data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength );\n\n\t}\n\n}\n\nexport { ConeGeometry };\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,uBAAuB;AAExD,MAAMC,YAAY,SAASD,gBAAgB,CAAC;EAE3CE,WAAW,GAAiI;IAAA,IAA/HC,MAAM,uEAAG,CAAC;IAAA,IAAEC,MAAM,uEAAG,CAAC;IAAA,IAAEC,cAAc,uEAAG,CAAC;IAAA,IAAEC,cAAc,uEAAG,CAAC;IAAA,IAAEC,SAAS,uEAAG,KAAK;IAAA,IAAEC,UAAU,uEAAG,CAAC;IAAA,IAAEC,WAAW,uEAAGC,IAAI,CAACC,EAAE,GAAG,CAAC;IAExI,KAAK,CAAE,CAAC,EAAER,MAAM,EAAEC,MAAM,EAAEC,cAAc,EAAEC,cAAc,EAAEC,SAAS,EAAEC,UAAU,EAAEC,WAAW,CAAE;IAE9F,IAAI,CAACG,IAAI,GAAG,cAAc;IAE1B,IAAI,CAACC,UAAU,GAAG;MACjBV,MAAM,EAAEA,MAAM;MACdC,MAAM,EAAEA,MAAM;MACdC,cAAc,EAAEA,cAAc;MAC9BC,cAAc,EAAEA,cAAc;MAC9BC,SAAS,EAAEA,SAAS;MACpBC,UAAU,EAAEA,UAAU;MACtBC,WAAW,EAAEA;IACd,CAAC;EAEF;EAEA,OAAOK,QAAQ,CAAEC,IAAI,EAAG;IAEvB,OAAO,IAAId,YAAY,CAAEc,IAAI,CAACZ,MAAM,EAAEY,IAAI,CAACX,MAAM,EAAEW,IAAI,CAACV,cAAc,EAAEU,IAAI,CAACT,cAAc,EAAES,IAAI,CAACR,SAAS,EAAEQ,IAAI,CAACP,UAAU,EAAEO,IAAI,CAACN,WAAW,CAAE;EAEjJ;AAED;AAEA,SAASR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}