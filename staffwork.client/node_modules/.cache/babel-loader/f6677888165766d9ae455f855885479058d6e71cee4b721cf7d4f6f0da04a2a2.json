{"ast":null,"code":"import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectVectorNode from './ReflectVectorNode.js';\nimport { negate, vec3, nodeObject } from '../shadernode/ShaderNodeBaseElements.js';\nclass CubeTextureNode extends TextureNode {\n  constructor(value) {\n    let uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let levelNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    super(value, uvNode, levelNode);\n    this.isCubeTextureNode = true;\n  }\n  getInputType( /*builder*/\n  ) {\n    return 'cubeTexture';\n  }\n  getConstructHash(builder) {\n    return `${this.uuid} / ${builder.context.environmentContext?.uuid || ''}`;\n  }\n  construct(builder) {\n    const properties = builder.getNodeProperties(this);\n    const uvNode = this.uvNode || builder.context.uvNode || new ReflectVectorNode();\n    let levelNode = this.levelNode || builder.context.levelNode;\n    if (levelNode?.isNode === true) {\n      const texture = this.value;\n      levelNode = builder.context.levelShaderNode ? builder.context.levelShaderNode.call({\n        texture,\n        levelNode\n      }, builder) : levelNode;\n    }\n    properties.uvNode = uvNode;\n    properties.levelNode = levelNode;\n  }\n  generate(builder, output) {\n    const {\n      uvNode,\n      levelNode\n    } = builder.getNodeProperties(this);\n    const texture = this.value;\n    if (!texture || texture.isCubeTexture !== true) {\n      throw new Error('CubeTextureNode: Need a three.js cube texture.');\n    }\n    const textureProperty = UniformNode.prototype.generate.call(this, builder, 'cubeTexture');\n    if (output === 'sampler') {\n      return textureProperty + '_sampler';\n    } else if (builder.isReference(output)) {\n      return textureProperty;\n    } else {\n      const nodeData = builder.getDataFromNode(this);\n      let snippet = nodeData.snippet;\n      if (snippet === undefined || builder.context.tempRead === false) {\n        const uvNodeObject = nodeObject(uvNode);\n        const cubeUV = vec3(negate(uvNodeObject.x), uvNodeObject.yz);\n        const uvSnippet = cubeUV.build(builder, 'vec3');\n        if (levelNode) {\n          const levelSnippet = levelNode.build(builder, 'float');\n          snippet = builder.getCubeTextureLevel(textureProperty, uvSnippet, levelSnippet);\n        } else {\n          snippet = builder.getCubeTexture(textureProperty, uvSnippet);\n        }\n        nodeData.snippet = snippet;\n      }\n      return builder.format(snippet, 'vec4', output);\n    }\n  }\n}\nexport default CubeTextureNode;","map":{"version":3,"names":["TextureNode","UniformNode","ReflectVectorNode","negate","vec3","nodeObject","CubeTextureNode","constructor","value","uvNode","levelNode","isCubeTextureNode","getInputType","getConstructHash","builder","uuid","context","environmentContext","construct","properties","getNodeProperties","isNode","texture","levelShaderNode","call","generate","output","isCubeTexture","Error","textureProperty","prototype","isReference","nodeData","getDataFromNode","snippet","undefined","tempRead","uvNodeObject","cubeUV","x","yz","uvSnippet","build","levelSnippet","getCubeTextureLevel","getCubeTexture","format"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/accessors/CubeTextureNode.js"],"sourcesContent":["import TextureNode from './TextureNode.js';\nimport UniformNode from '../core/UniformNode.js';\nimport ReflectVectorNode from './ReflectVectorNode.js';\n\nimport { negate, vec3, nodeObject } from '../shadernode/ShaderNodeBaseElements.js';\n\nclass CubeTextureNode extends TextureNode {\n\n\tconstructor( value, uvNode = null, levelNode = null ) {\n\n\t\tsuper( value, uvNode, levelNode );\n\n\t\tthis.isCubeTextureNode = true;\n\n\t}\n\n\tgetInputType( /*builder*/ ) {\n\n\t\treturn 'cubeTexture';\n\n\t}\n\n\tgetConstructHash( builder ) {\n\n\t\treturn `${ this.uuid } / ${ builder.context.environmentContext?.uuid || '' }`;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tconst uvNode = this.uvNode || builder.context.uvNode || new ReflectVectorNode();\n\t\tlet levelNode = this.levelNode || builder.context.levelNode;\n\n\t\tif ( levelNode?.isNode === true ) {\n\n\t\t\tconst texture = this.value;\n\n\t\t\tlevelNode = builder.context.levelShaderNode ? builder.context.levelShaderNode.call( { texture, levelNode }, builder ) : levelNode;\n\n\t\t}\n\n\t\tproperties.uvNode = uvNode;\n\t\tproperties.levelNode = levelNode;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst { uvNode, levelNode } = builder.getNodeProperties( this );\n\n\t\tconst texture = this.value;\n\n\t\tif ( ! texture || texture.isCubeTexture !== true ) {\n\n\t\t\tthrow new Error( 'CubeTextureNode: Need a three.js cube texture.' );\n\n\t\t}\n\n\t\tconst textureProperty = UniformNode.prototype.generate.call( this, builder, 'cubeTexture' );\n\n\t\tif ( output === 'sampler' ) {\n\n\t\t\treturn textureProperty + '_sampler';\n\n\t\t} else if ( builder.isReference( output ) ) {\n\n\t\t\treturn textureProperty;\n\n\t\t} else {\n\n\t\t\tconst nodeData = builder.getDataFromNode( this );\n\n\t\t\tlet snippet = nodeData.snippet;\n\n\t\t\tif ( snippet === undefined || builder.context.tempRead === false ) {\n\n\t\t\t\tconst uvNodeObject = nodeObject( uvNode );\n\t\t\t\tconst cubeUV = vec3( negate( uvNodeObject.x ), uvNodeObject.yz );\n\t\t\t\tconst uvSnippet = cubeUV.build( builder, 'vec3' );\n\n\t\t\t\tif ( levelNode ) {\n\n\t\t\t\t\tconst levelSnippet = levelNode.build( builder, 'float' );\n\n\t\t\t\t\tsnippet = builder.getCubeTextureLevel( textureProperty, uvSnippet, levelSnippet );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsnippet = builder.getCubeTexture( textureProperty, uvSnippet );\n\n\t\t\t\t}\n\n\t\t\t\tnodeData.snippet = snippet;\n\n\t\t\t}\n\n\t\t\treturn builder.format( snippet, 'vec4', output );\n\n\t\t}\n\n\t}\n\n}\n\nexport default CubeTextureNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}