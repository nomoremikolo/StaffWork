{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  messages: null\n};\nexport const NotificationReducer = createSlice({\n  name: \"MessageReducer\",\n  initialState: initialState,\n  reducers: {\n    SHOW_SUCCESS_MESSAGE(state, action) {\n      const actualId = state.messages ? state.messages.length : 0;\n      if (state.messages) {\n        state.messages = [...state.messages, {\n          id: actualId,\n          message: action.payload,\n          isActive: true,\n          isSuccess: true,\n          isError: false,\n          isWarning: false\n        }];\n      } else {\n        state.messages = [{\n          id: actualId,\n          message: action.payload,\n          isActive: true,\n          isSuccess: true,\n          isError: false,\n          isWarning: false\n        }];\n      }\n      console.log(\"SUCCESS: \" + state.messages[actualId].message);\n    },\n    SHOW_ERROR_MESSAGE(state, action) {\n      const actualId = state.messages ? state.messages.length : 0;\n      if (state.messages) {\n        state.messages = [...state.messages, {\n          id: actualId,\n          message: action.payload,\n          isActive: true,\n          isSuccess: false,\n          isError: true,\n          isWarning: false\n        }];\n      } else {\n        state.messages = [{\n          id: actualId,\n          message: action.payload,\n          isActive: true,\n          isSuccess: false,\n          isError: true,\n          isWarning: false\n        }];\n      }\n      console.error(\"ERROR: \" + state.messages[actualId].message);\n    },\n    SHOW_WARNING_MESSAGE(state, action) {\n      const actualId = state.messages ? state.messages.length : 0;\n      if (state.messages) {\n        state.messages = [...state.messages, {\n          id: actualId,\n          message: action.payload,\n          isActive: true,\n          isSuccess: false,\n          isError: false,\n          isWarning: true\n        }];\n      } else {\n        state.messages = [{\n          id: actualId,\n          message: action.payload,\n          isActive: true,\n          isSuccess: false,\n          isError: false,\n          isWarning: true\n        }];\n      }\n      console.warn(\"WARNING: \" + state.messages[actualId].message);\n    },\n    DEACTIVATE_MESSAGE(state, action) {\n      if (state.messages) {\n        state.messages = state.messages.map(message => {\n          if (message.id === action.payload) {\n            message.isActive = false;\n          }\n          return message;\n        });\n      }\n    }\n  }\n});\nexport default NotificationReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","messages","NotificationReducer","name","reducers","SHOW_SUCCESS_MESSAGE","state","action","actualId","length","id","message","payload","isActive","isSuccess","isError","isWarning","console","log","SHOW_ERROR_MESSAGE","error","SHOW_WARNING_MESSAGE","warn","DEACTIVATE_MESSAGE","map","reducer"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/src/redux/reducers/NotificationReducer.ts"],"sourcesContent":["import { createSlice, PayloadAction } from \"@reduxjs/toolkit\";\r\n\r\nexport interface MessageType {\r\n    id: number;\r\n    message: string;\r\n    isActive: boolean | undefined;\r\n    isSuccess: boolean;\r\n    isError: boolean;\r\n    isWarning: boolean;\r\n}\r\n\r\ninterface NotificationState {\r\n    messages: MessageType[] | null;\r\n}\r\n\r\nconst initialState: NotificationState = {\r\n    messages: null,\r\n};\r\n\r\nexport const NotificationReducer = createSlice({\r\n    name: \"MessageReducer\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        SHOW_SUCCESS_MESSAGE(state, action: PayloadAction<string>) {\r\n            const actualId = state.messages ? state.messages.length : 0;\r\n            if (state.messages) {\r\n                state.messages = [\r\n                    ...state.messages,\r\n                    { id: actualId, message: action.payload, isActive: true, isSuccess: true, isError: false, isWarning: false },\r\n                ];\r\n            } else {\r\n                state.messages = [\r\n                    { id: actualId, message: action.payload, isActive: true, isSuccess: true, isError: false, isWarning: false },\r\n                ];\r\n            }\r\n            console.log(\"SUCCESS: \" + state.messages[actualId].message);\r\n        },\r\n        SHOW_ERROR_MESSAGE(state, action: PayloadAction<string>) {\r\n            const actualId = state.messages ? state.messages.length : 0;\r\n            if (state.messages) {\r\n                state.messages = [\r\n                    ...state.messages,\r\n                    { id: actualId, message: action.payload, isActive: true, isSuccess: false, isError: true, isWarning: false },\r\n                ];\r\n            } else {\r\n                state.messages = [\r\n                    { id: actualId, message: action.payload, isActive: true, isSuccess: false, isError: true, isWarning: false },\r\n                ];\r\n            }\r\n            console.error(\"ERROR: \" + state.messages[actualId].message);\r\n        },\r\n        SHOW_WARNING_MESSAGE(state, action: PayloadAction<string>) {\r\n            const actualId = state.messages ? state.messages.length : 0;\r\n            if (state.messages) {\r\n                state.messages = [\r\n                    ...state.messages,\r\n                    { id: actualId, message: action.payload, isActive: true, isSuccess: false, isError: false, isWarning: true },\r\n                ];\r\n            } else {\r\n                state.messages = [\r\n                    { id: actualId, message: action.payload, isActive: true, isSuccess: false, isError: false, isWarning: true },\r\n                ];\r\n            }\r\n            console.warn(\"WARNING: \" + state.messages[actualId].message);\r\n        },\r\n        DEACTIVATE_MESSAGE(state, action: PayloadAction<number>) {\r\n            if (state.messages) {\r\n                state.messages = state.messages.map((message) => {\r\n                    if (message.id === action.payload) {\r\n                        message.isActive = false;\r\n                    }\r\n                    return message;\r\n                });\r\n            }\r\n        },\r\n    },\r\n});\r\n\r\nexport default NotificationReducer.reducer;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}