{"ast":null,"code":"function WebGLCapabilities(gl, extensions, parameters) {\n  let maxAnisotropy;\n  function getMaxAnisotropy() {\n    if (maxAnisotropy !== undefined) return maxAnisotropy;\n    if (extensions.has('EXT_texture_filter_anisotropic') === true) {\n      const extension = extensions.get('EXT_texture_filter_anisotropic');\n      maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n    } else {\n      maxAnisotropy = 0;\n    }\n    return maxAnisotropy;\n  }\n  function getMaxPrecision(precision) {\n    if (precision === 'highp') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n        return 'highp';\n      }\n      precision = 'mediump';\n    }\n    if (precision === 'mediump') {\n      if (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n        return 'mediump';\n      }\n    }\n    return 'lowp';\n  }\n  const isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n  let precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n  const maxPrecision = getMaxPrecision(precision);\n  if (maxPrecision !== precision) {\n    console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n    precision = maxPrecision;\n  }\n  const drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n  const logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n  const maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n  const maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n  const maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n  const maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n  const maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n  const maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n  const maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n  const maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n  const vertexTextures = maxVertexTextures > 0;\n  const floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n  const floatVertexTextures = vertexTextures && floatFragmentTextures;\n  const maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n  return {\n    isWebGL2: isWebGL2,\n    drawBuffers: drawBuffers,\n    getMaxAnisotropy: getMaxAnisotropy,\n    getMaxPrecision: getMaxPrecision,\n    precision: precision,\n    logarithmicDepthBuffer: logarithmicDepthBuffer,\n    maxTextures: maxTextures,\n    maxVertexTextures: maxVertexTextures,\n    maxTextureSize: maxTextureSize,\n    maxCubemapSize: maxCubemapSize,\n    maxAttributes: maxAttributes,\n    maxVertexUniforms: maxVertexUniforms,\n    maxVaryings: maxVaryings,\n    maxFragmentUniforms: maxFragmentUniforms,\n    vertexTextures: vertexTextures,\n    floatFragmentTextures: floatFragmentTextures,\n    floatVertexTextures: floatVertexTextures,\n    maxSamples: maxSamples\n  };\n}\nexport { WebGLCapabilities };","map":{"version":3,"names":["WebGLCapabilities","gl","extensions","parameters","maxAnisotropy","getMaxAnisotropy","undefined","has","extension","get","getParameter","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","precision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","isWebGL2","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","console","warn","drawBuffers","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_ATTRIBS","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLCapabilities.js"],"sourcesContent":["function WebGLCapabilities( gl, extensions, parameters ) {\n\n\tlet maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tif ( extensions.has( 'EXT_texture_filter_anisotropic' ) === true ) {\n\n\t\t\tconst extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t\tgl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tconst isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\n\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tconst maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tconst drawBuffers = isWebGL2 || extensions.has( 'WEBGL_draw_buffers' );\n\n\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tconst maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tconst maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tconst maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tconst maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tconst maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tconst maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tconst maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tconst vertexTextures = maxVertexTextures > 0;\n\tconst floatFragmentTextures = isWebGL2 || extensions.has( 'OES_texture_float' );\n\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\tconst maxSamples = isWebGL2 ? gl.getParameter( gl.MAX_SAMPLES ) : 0;\n\n\treturn {\n\n\t\tisWebGL2: isWebGL2,\n\n\t\tdrawBuffers: drawBuffers,\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\tmaxSamples: maxSamples\n\n\t};\n\n}\n\n\nexport { WebGLCapabilities };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}