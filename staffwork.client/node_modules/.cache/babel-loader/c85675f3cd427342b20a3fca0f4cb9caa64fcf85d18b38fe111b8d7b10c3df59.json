{"ast":null,"code":"import { Matrix4 } from '../math/Matrix4.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\nconst _eyeRight = /*@__PURE__*/new Matrix4();\nconst _eyeLeft = /*@__PURE__*/new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/new Matrix4();\nclass StereoCamera {\n  constructor() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null\n    };\n  }\n  update(camera) {\n    const cache = this._cache;\n    const needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n    if (needsUpdate) {\n      cache.focus = camera.focus;\n      cache.fov = camera.fov;\n      cache.aspect = camera.aspect * this.aspect;\n      cache.near = camera.near;\n      cache.far = camera.far;\n      cache.zoom = camera.zoom;\n      cache.eyeSep = this.eyeSep;\n\n      // Off-axis stereoscopic effect based on\n      // http://paulbourke.net/stereographics/stereorender/\n\n      _projectionMatrix.copy(camera.projectionMatrix);\n      const eyeSepHalf = cache.eyeSep / 2;\n      const eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n      const ymax = cache.near * Math.tan(MathUtils.DEG2RAD * cache.fov * 0.5) / cache.zoom;\n      let xmin, xmax;\n\n      // translate xOffset\n\n      _eyeLeft.elements[12] = -eyeSepHalf;\n      _eyeRight.elements[12] = eyeSepHalf;\n\n      // for left eye\n\n      xmin = -ymax * cache.aspect + eyeSepOnProjection;\n      xmax = ymax * cache.aspect + eyeSepOnProjection;\n      _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraL.projectionMatrix.copy(_projectionMatrix);\n\n      // for right eye\n\n      xmin = -ymax * cache.aspect - eyeSepOnProjection;\n      xmax = ymax * cache.aspect - eyeSepOnProjection;\n      _projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n      _projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n      this.cameraR.projectionMatrix.copy(_projectionMatrix);\n    }\n    this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n    this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n  }\n}\nexport { StereoCamera };","map":{"version":3,"names":["Matrix4","MathUtils","PerspectiveCamera","_eyeRight","_eyeLeft","_projectionMatrix","StereoCamera","constructor","type","aspect","eyeSep","cameraL","layers","enable","matrixAutoUpdate","cameraR","_cache","focus","fov","near","far","zoom","update","camera","cache","needsUpdate","copy","projectionMatrix","eyeSepHalf","eyeSepOnProjection","ymax","Math","tan","DEG2RAD","xmin","xmax","elements","matrixWorld","multiply"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/cameras/StereoCamera.js"],"sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from './PerspectiveCamera.js';\n\nconst _eyeRight = /*@__PURE__*/ new Matrix4();\nconst _eyeLeft = /*@__PURE__*/ new Matrix4();\nconst _projectionMatrix = /*@__PURE__*/ new Matrix4();\n\nclass StereoCamera {\n\n\tconstructor() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tupdate( camera ) {\n\n\t\tconst cache = this._cache;\n\n\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tcache.focus = camera.focus;\n\t\t\tcache.fov = camera.fov;\n\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\tcache.near = camera.near;\n\t\t\tcache.far = camera.far;\n\t\t\tcache.zoom = camera.zoom;\n\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t_projectionMatrix.copy( camera.projectionMatrix );\n\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\tconst ymax = ( cache.near * Math.tan( MathUtils.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\tlet xmin, xmax;\n\n\t\t\t// translate xOffset\n\n\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t// for left eye\n\n\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraL.projectionMatrix.copy( _projectionMatrix );\n\n\t\t\t// for right eye\n\n\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t_projectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t_projectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\tthis.cameraR.projectionMatrix.copy( _projectionMatrix );\n\n\t\t}\n\n\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t}\n\n}\n\nexport { StereoCamera };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}