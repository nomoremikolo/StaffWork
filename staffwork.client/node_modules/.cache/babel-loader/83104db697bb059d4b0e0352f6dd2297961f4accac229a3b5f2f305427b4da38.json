{"ast":null,"code":"import NodeMaterial from './NodeMaterial.js';\nimport { SpriteMaterial } from 'three';\nimport { vec2, vec3, vec4, uniform, add, mul, sub, positionLocal, length, cos, sin, modelViewMatrix, cameraProjectionMatrix, modelWorldMatrix, materialRotation } from '../shadernode/ShaderNodeElements.js';\nconst defaultValues = new SpriteMaterial();\nclass SpriteNodeMaterial extends NodeMaterial {\n  constructor(parameters) {\n    super();\n    this.isSpriteNodeMaterial = true;\n    this.lights = true;\n    this.colorNode = null;\n    this.opacityNode = null;\n    this.alphaTestNode = null;\n    this.lightNode = null;\n    this.positionNode = null;\n    this.rotationNode = null;\n    this.scaleNode = null;\n    this.setDefaultValues(defaultValues);\n    this.setValues(parameters);\n  }\n  generatePosition(builder) {\n    // < VERTEX STAGE >\n\n    const {\n      positionNode,\n      rotationNode,\n      scaleNode\n    } = this;\n    const vertex = positionLocal;\n    let mvPosition = mul(modelViewMatrix, positionNode ? vec4(positionNode.xyz, 1) : vec4(0, 0, 0, 1));\n    let scale = vec2(length(vec3(modelWorldMatrix[0].x, modelWorldMatrix[0].y, modelWorldMatrix[0].z)), length(vec3(modelWorldMatrix[1].x, modelWorldMatrix[1].y, modelWorldMatrix[1].z)));\n    if (scaleNode !== null) {\n      scale = mul(scale, scaleNode);\n    }\n    let alignedPosition = vertex.xy;\n    if (builder.object.center?.isVector2 === true) {\n      alignedPosition = sub(alignedPosition, sub(uniform(builder.object.center), vec2(0.5)));\n    }\n    alignedPosition = mul(alignedPosition, scale);\n    const rotation = rotationNode || materialRotation;\n    const rotatedPosition = vec2(sub(mul(cos(rotation), alignedPosition.x), mul(sin(rotation), alignedPosition.y)), add(mul(sin(rotation), alignedPosition.x), mul(cos(rotation), alignedPosition.y)));\n    mvPosition = vec4(add(mvPosition.xy, rotatedPosition.xy), mvPosition.z, mvPosition.w);\n    const modelViewProjection = mul(cameraProjectionMatrix, mvPosition);\n    builder.context.vertex = vertex;\n    builder.addFlow('vertex', modelViewProjection);\n  }\n  copy(source) {\n    this.colorNode = source.colorNode;\n    this.opacityNode = source.opacityNode;\n    this.alphaTestNode = source.alphaTestNode;\n    this.lightNode = source.lightNode;\n    this.positionNode = source.positionNode;\n    this.rotationNode = source.rotationNode;\n    this.scaleNode = source.scaleNode;\n    return super.copy(source);\n  }\n}\nexport default SpriteNodeMaterial;","map":{"version":3,"names":["NodeMaterial","SpriteMaterial","vec2","vec3","vec4","uniform","add","mul","sub","positionLocal","length","cos","sin","modelViewMatrix","cameraProjectionMatrix","modelWorldMatrix","materialRotation","defaultValues","SpriteNodeMaterial","constructor","parameters","isSpriteNodeMaterial","lights","colorNode","opacityNode","alphaTestNode","lightNode","positionNode","rotationNode","scaleNode","setDefaultValues","setValues","generatePosition","builder","vertex","mvPosition","xyz","scale","x","y","z","alignedPosition","xy","object","center","isVector2","rotation","rotatedPosition","w","modelViewProjection","context","addFlow","copy","source"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/materials/SpriteNodeMaterial.js"],"sourcesContent":["import NodeMaterial from './NodeMaterial.js';\nimport { SpriteMaterial } from 'three';\nimport {\n\tvec2, vec3, vec4,\n\tuniform, add, mul, sub,\n\tpositionLocal, length, cos, sin,\n\tmodelViewMatrix, cameraProjectionMatrix, modelWorldMatrix, materialRotation\n} from '../shadernode/ShaderNodeElements.js';\n\nconst defaultValues = new SpriteMaterial();\n\nclass SpriteNodeMaterial extends NodeMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isSpriteNodeMaterial = true;\n\n\t\tthis.lights = true;\n\n\t\tthis.colorNode = null;\n\t\tthis.opacityNode = null;\n\n\t\tthis.alphaTestNode = null;\n\n\t\tthis.lightNode = null;\n\n\t\tthis.positionNode = null;\n\t\tthis.rotationNode = null;\n\t\tthis.scaleNode = null;\n\n\t\tthis.setDefaultValues( defaultValues );\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tgeneratePosition( builder ) {\n\n\t\t// < VERTEX STAGE >\n\n\t\tconst { positionNode, rotationNode, scaleNode } = this;\n\n\t\tconst vertex = positionLocal;\n\n\t\tlet mvPosition = mul( modelViewMatrix, positionNode ? vec4( positionNode.xyz, 1 ) : vec4( 0, 0, 0, 1 ) );\n\n\t\tlet scale = vec2(\n\t\t\tlength( vec3( modelWorldMatrix[ 0 ].x, modelWorldMatrix[ 0 ].y, modelWorldMatrix[ 0 ].z ) ),\n\t\t\tlength( vec3( modelWorldMatrix[ 1 ].x, modelWorldMatrix[ 1 ].y, modelWorldMatrix[ 1 ].z ) )\n\t\t);\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tscale = mul( scale, scaleNode );\n\n\t\t}\n\n\t\tlet alignedPosition = vertex.xy;\n\n\t\tif ( builder.object.center?.isVector2 === true ) {\n\n\t\t\talignedPosition = sub( alignedPosition, sub( uniform( builder.object.center ), vec2( 0.5 ) ) );\n\n\t\t}\n\n\t\talignedPosition = mul( alignedPosition, scale );\n\n\t\tconst rotation = rotationNode || materialRotation;\n\n\t\tconst rotatedPosition = vec2(\n\t\t\tsub( mul( cos( rotation ), alignedPosition.x ), mul( sin( rotation ), alignedPosition.y ) ),\n\t\t\tadd( mul( sin( rotation ), alignedPosition.x ), mul( cos( rotation ), alignedPosition.y ) )\n\t\t);\n\n\t\tmvPosition = vec4( add( mvPosition.xy, rotatedPosition.xy ), mvPosition.z, mvPosition.w );\n\n\t\tconst modelViewProjection = mul( cameraProjectionMatrix, mvPosition );\n\n\t\tbuilder.context.vertex = vertex;\n\n\t\tbuilder.addFlow( 'vertex', modelViewProjection );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.colorNode = source.colorNode;\n\t\tthis.opacityNode = source.opacityNode;\n\n\t\tthis.alphaTestNode = source.alphaTestNode;\n\n\t\tthis.lightNode = source.lightNode;\n\n\t\tthis.positionNode = source.positionNode;\n\t\tthis.rotationNode = source.rotationNode;\n\t\tthis.scaleNode = source.scaleNode;\n\n\t\treturn super.copy( source );\n\n\t}\n\n}\n\nexport default SpriteNodeMaterial;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}