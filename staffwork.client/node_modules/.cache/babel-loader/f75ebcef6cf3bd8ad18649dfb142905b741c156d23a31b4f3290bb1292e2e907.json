{"ast":null,"code":"import { authorizationReducer } from \"../reducers/authorizationReducer\";\nimport axios from \"axios\";\nimport { GraphQlEndpoint } from \"../../global_variables\";\nexport const login = (username, password) => async dispatch => {\n  const graphqlQuery = {\n    \"query\": `\n            query login{\n                authorization{\n                  login(userLogin: {\n                    username: \"${username}\"\n                    password: \"${password}\"\n                  }){\n                    errors\n                    refreshToken\n                    statusCode\n                    token\n                    user{\n                      id\n                      username\n                      name\n                      surname\n                      age\n                      email\n                      adress\n                      role\n                      isActivated\n                      permissions\n                    }\n                  }\n                }\n              }\n        `\n  };\n  dispatch(authorizationReducer.actions.LOGIN());\n  try {\n    const response = await axios({\n      url: GraphQlEndpoint,\n      method: 'post',\n      headers: {\n        \"content-type\": \"application/json\"\n      },\n      data: graphqlQuery\n    });\n    console.log(response);\n  } catch (e) {\n    console.log(e);\n  }\n};","map":{"version":3,"names":["authorizationReducer","axios","GraphQlEndpoint","login","username","password","dispatch","graphqlQuery","actions","LOGIN","response","url","method","headers","data","console","log","e"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/src/redux/action_creators/authorization_action_creator.ts"],"sourcesContent":["import {AppDispatch} from \"../store\";\r\nimport {authorizationReducer} from \"../reducers/authorizationReducer\";\r\nimport axios from \"axios\";\r\nimport {GraphQlEndpoint} from \"../../global_variables\";\r\n\r\nexport const login = (username: string, password: string) => async (dispatch: AppDispatch) => {\r\n    const graphqlQuery = {\r\n        \"query\": `\r\n            query login{\r\n                authorization{\r\n                  login(userLogin: {\r\n                    username: \"${username}\"\r\n                    password: \"${password}\"\r\n                  }){\r\n                    errors\r\n                    refreshToken\r\n                    statusCode\r\n                    token\r\n                    user{\r\n                      id\r\n                      username\r\n                      name\r\n                      surname\r\n                      age\r\n                      email\r\n                      adress\r\n                      role\r\n                      isActivated\r\n                      permissions\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n        `,\r\n    };\r\n    dispatch(authorizationReducer.actions.LOGIN())\r\n    try {\r\n        const response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        console.log(response)\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n"],"mappings":"AACA,SAAQA,oBAAoB,QAAO,kCAAkC;AACrE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAAQC,eAAe,QAAO,wBAAwB;AAEtD,OAAO,MAAMC,KAAK,GAAG,CAACC,QAAgB,EAAEC,QAAgB,KAAK,MAAOC,QAAqB,IAAK;EAC1F,MAAMC,YAAY,GAAG;IACjB,OAAO,EAAG;AAClB;AACA;AACA;AACA,iCAAiCH,QAAS;AAC1C,iCAAiCC,QAAS;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,CAAC;EACDC,QAAQ,CAACN,oBAAoB,CAACQ,OAAO,CAACC,KAAK,EAAE,CAAC;EAC9C,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMT,KAAK,CAAC;MACzBU,GAAG,EAAET,eAAe;MACpBU,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEP;IACV,CAAC,CAAC;IACFQ,OAAO,CAACC,GAAG,CAACN,QAAQ,CAAC;EACzB,CAAC,CAAC,OAAOO,CAAC,EAAE;IACRF,OAAO,CAACC,GAAG,CAACC,CAAC,CAAC;EAClB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}