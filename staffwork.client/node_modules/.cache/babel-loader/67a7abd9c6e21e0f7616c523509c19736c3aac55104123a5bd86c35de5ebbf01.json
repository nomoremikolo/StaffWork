{"ast":null,"code":"import { ShaderNode, add, sub, mul, div, pow2 } from '../../shadernode/ShaderNodeBaseElements.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = new ShaderNode(inputs => {\n  const {\n    alpha,\n    dotNH\n  } = inputs;\n  const a2 = pow2(alpha);\n  const denom = add(mul(pow2(dotNH), sub(a2, 1.0)), 1.0); // avoid alpha = 0 with dotNH = 1\n\n  return mul(1 / Math.PI, div(a2, pow2(denom)));\n}); // validated\n\nexport default D_GGX;","map":{"version":3,"names":["ShaderNode","add","sub","mul","div","pow2","D_GGX","inputs","alpha","dotNH","a2","denom","Math","PI"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/functions/BSDF/D_GGX.js"],"sourcesContent":["import { ShaderNode, add, sub, mul, div, pow2 } from '../../shadernode/ShaderNodeBaseElements.js';\n\n// Microfacet Models for Refraction through Rough Surfaces - equation (33)\n// http://graphicrants.blogspot.com/2013/08/specular-brdf-reference.html\n// alpha is \"roughness squared\" in Disney’s reparameterization\nconst D_GGX = new ShaderNode( ( inputs ) => {\n\n\tconst { alpha, dotNH } = inputs;\n\n\tconst a2 = pow2( alpha );\n\n\tconst denom = add( mul( pow2( dotNH ), sub( a2, 1.0 ) ), 1.0 ); // avoid alpha = 0 with dotNH = 1\n\n\treturn mul( 1 / Math.PI, div( a2, pow2( denom ) ) );\n\n} ); // validated\n\nexport default D_GGX;\n"],"mappings":"AAAA,SAASA,UAAU,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,4CAA4C;;AAEjG;AACA;AACA;AACA,MAAMC,KAAK,GAAG,IAAIN,UAAU,CAAIO,MAAM,IAAM;EAE3C,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGF,MAAM;EAE/B,MAAMG,EAAE,GAAGL,IAAI,CAAEG,KAAK,CAAE;EAExB,MAAMG,KAAK,GAAGV,GAAG,CAAEE,GAAG,CAAEE,IAAI,CAAEI,KAAK,CAAE,EAAEP,GAAG,CAAEQ,EAAE,EAAE,GAAG,CAAE,CAAE,EAAE,GAAG,CAAE,CAAC,CAAC;;EAEhE,OAAOP,GAAG,CAAE,CAAC,GAAGS,IAAI,CAACC,EAAE,EAAET,GAAG,CAAEM,EAAE,EAAEL,IAAI,CAAEM,KAAK,CAAE,CAAE,CAAE;AAEpD,CAAC,CAAE,CAAC,CAAC;;AAEL,eAAeL,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}