{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nclass OperatorNode extends TempNode {\n  constructor(op, aNode, bNode) {\n    super();\n    this.op = op;\n    if ((arguments.length <= 3 ? 0 : arguments.length - 3) > 0) {\n      let finalBNode = bNode;\n      for (let i = 0; i < (arguments.length <= 3 ? 0 : arguments.length - 3); i++) {\n        finalBNode = new OperatorNode(op, finalBNode, i + 3 < 3 || arguments.length <= i + 3 ? undefined : arguments[i + 3]);\n      }\n      bNode = finalBNode;\n    }\n    this.aNode = aNode;\n    this.bNode = bNode;\n  }\n  getNodeType(builder, output) {\n    const op = this.op;\n    const aNode = this.aNode;\n    const bNode = this.bNode;\n    const typeA = aNode.getNodeType(builder);\n    const typeB = bNode.getNodeType(builder);\n    if (typeA === 'void' || typeB === 'void') {\n      return 'void';\n    } else if (op === '=' || op === '%') {\n      return typeA;\n    } else if (op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<') {\n      return builder.getIntegerType(typeA);\n    } else if (op === '==' || op === '&&' || op === '||' || op === '^^') {\n      return 'bool';\n    } else if (op === '<' || op === '>' || op === '<=' || op === '>=') {\n      const typeLength = builder.getTypeLength(output);\n      return typeLength > 1 ? `bvec${typeLength}` : 'bool';\n    } else {\n      if (typeA === 'float' && builder.isMatrix(typeB)) {\n        return typeB;\n      } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) {\n        // matrix x vector\n\n        return builder.getVectorFromMatrix(typeA);\n      } else if (builder.isVector(typeA) && builder.isMatrix(typeB)) {\n        // vector x matrix\n\n        return builder.getVectorFromMatrix(typeB);\n      } else if (builder.getTypeLength(typeB) > builder.getTypeLength(typeA)) {\n        // anytype x anytype: use the greater length vector\n\n        return typeB;\n      }\n      return typeA;\n    }\n  }\n  generate(builder, output) {\n    const op = this.op;\n    const aNode = this.aNode;\n    const bNode = this.bNode;\n    const type = this.getNodeType(builder, output);\n    let typeA = null;\n    let typeB = null;\n    if (type !== 'void') {\n      typeA = aNode.getNodeType(builder);\n      typeB = bNode.getNodeType(builder);\n      if (op === '=') {\n        typeB = typeA;\n      } else if (op === '<' || op === '>' || op === '<=' || op === '>=') {\n        if (builder.isVector(typeA)) {\n          typeB = typeA;\n        } else {\n          typeA = typeB = 'float';\n        }\n      } else if (op === '>>' || op === '<<') {\n        typeA = type;\n        typeB = builder.changeComponentType(typeB, 'uint');\n      } else if (builder.isMatrix(typeA) && builder.isVector(typeB)) {\n        // matrix x vector\n\n        typeB = builder.getVectorFromMatrix(typeA);\n      } else if (builder.isVector(typeA) && builder.isMatrix(typeB)) {\n        // vector x matrix\n\n        typeA = builder.getVectorFromMatrix(typeB);\n      } else {\n        // anytype x anytype\n\n        typeA = typeB = type;\n      }\n    } else {\n      typeA = typeB = type;\n    }\n    const a = aNode.build(builder, typeA);\n    const b = bNode.build(builder, typeB);\n    const outputLength = builder.getTypeLength(output);\n    if (output !== 'void') {\n      if (op === '=') {\n        builder.addFlowCode(`${a} ${this.op} ${b}`);\n        return a;\n      } else if (op === '<' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('lessThan')}( ${a}, ${b} )`, type, output);\n      } else if (op === '<=' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('lessThanEqual')}( ${a}, ${b} )`, type, output);\n      } else if (op === '>' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('greaterThan')}( ${a}, ${b} )`, type, output);\n      } else if (op === '>=' && outputLength > 1) {\n        return builder.format(`${builder.getMethod('greaterThanEqual')}( ${a}, ${b} )`, type, output);\n      } else {\n        return builder.format(`( ${a} ${this.op} ${b} )`, type, output);\n      }\n    } else if (typeA !== 'void') {\n      return builder.format(`${a} ${this.op} ${b}`, type, output);\n    }\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.op = this.op;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.op = data.op;\n  }\n}\nexport default OperatorNode;","map":{"version":3,"names":["TempNode","OperatorNode","constructor","op","aNode","bNode","finalBNode","i","getNodeType","builder","output","typeA","typeB","getIntegerType","typeLength","getTypeLength","isMatrix","isVector","getVectorFromMatrix","generate","type","changeComponentType","a","build","b","outputLength","addFlowCode","format","getMethod","serialize","data","deserialize"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/math/OperatorNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\n\nclass OperatorNode extends TempNode {\n\n\tconstructor( op, aNode, bNode, ...params ) {\n\n\t\tsuper();\n\n\t\tthis.op = op;\n\n\t\tif ( params.length > 0 ) {\n\n\t\t\tlet finalBNode = bNode;\n\n\t\t\tfor ( let i = 0; i < params.length; i ++ ) {\n\n\t\t\t\tfinalBNode = new OperatorNode( op, finalBNode, params[ i ] );\n\n\t\t\t}\n\n\t\t\tbNode = finalBNode;\n\n\t\t}\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\n\t}\n\n\tgetNodeType( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst typeA = aNode.getNodeType( builder );\n\t\tconst typeB = bNode.getNodeType( builder );\n\n\t\tif ( typeA === 'void' || typeB === 'void' ) {\n\n\t\t\treturn 'void';\n\n\t\t} else if ( op === '=' || op === '%' ) {\n\n\t\t\treturn typeA;\n\n\t\t} else if ( op === '&' || op === '|' || op === '^' || op === '>>' || op === '<<' ) {\n\n\t\t\treturn builder.getIntegerType( typeA );\n\n\t\t} else if ( op === '==' || op === '&&' || op === '||' || op === '^^' ) {\n\n\t\t\treturn 'bool';\n\n\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\n\n\t\t\tconst typeLength = builder.getTypeLength( output );\n\n\t\t\treturn typeLength > 1 ? `bvec${ typeLength }` : 'bool';\n\n\t\t} else {\n\n\t\t\tif ( typeA === 'float' && builder.isMatrix( typeB ) ) {\n\n\t\t\t\treturn typeB;\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\treturn builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else if ( builder.getTypeLength( typeB ) > builder.getTypeLength( typeA ) ) {\n\n\t\t\t\t// anytype x anytype: use the greater length vector\n\n\t\t\t\treturn typeB;\n\n\t\t\t}\n\n\t\t\treturn typeA;\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst op = this.op;\n\n\t\tconst aNode = this.aNode;\n\t\tconst bNode = this.bNode;\n\n\t\tconst type = this.getNodeType( builder, output );\n\n\t\tlet typeA = null;\n\t\tlet typeB = null;\n\n\t\tif ( type !== 'void' ) {\n\n\t\t\ttypeA = aNode.getNodeType( builder );\n\t\t\ttypeB = bNode.getNodeType( builder );\n\n\t\t\tif ( op === '=' ) {\n\n\t\t\t\ttypeB = typeA;\n\n\t\t\t} else if ( op === '<' || op === '>' || op === '<=' || op === '>=' ) {\n\n\t\t\t\tif ( builder.isVector( typeA ) ) {\n\n\t\t\t\t\ttypeB = typeA;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttypeA = typeB = 'float';\n\n\t\t\t\t}\n\n\t\t\t} else if ( op === '>>' || op === '<<' ) {\n\n\t\t\t\ttypeA = type;\n\t\t\t\ttypeB = builder.changeComponentType( typeB, 'uint' );\n\n\t\t\t} else if ( builder.isMatrix( typeA ) && builder.isVector( typeB ) ) {\n\n\t\t\t\t// matrix x vector\n\n\t\t\t\ttypeB = builder.getVectorFromMatrix( typeA );\n\n\t\t\t} else if ( builder.isVector( typeA ) && builder.isMatrix( typeB ) ) {\n\n\t\t\t\t// vector x matrix\n\n\t\t\t\ttypeA = builder.getVectorFromMatrix( typeB );\n\n\t\t\t} else {\n\n\t\t\t\t// anytype x anytype\n\n\t\t\t\ttypeA = typeB = type;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\ttypeA = typeB = type;\n\n\t\t}\n\n\t\tconst a = aNode.build( builder, typeA );\n\t\tconst b = bNode.build( builder, typeB );\n\n\t\tconst outputLength = builder.getTypeLength( output );\n\n\t\tif ( output !== 'void' ) {\n\n\t\t\tif ( op === '=' ) {\n\n\t\t\t\tbuilder.addFlowCode( `${a} ${this.op} ${b}` );\n\n\t\t\t\treturn a;\n\n\t\t\t} else if ( op === '<' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThan' ) }( ${a}, ${b} )`, type, output );\n\n\t\t\t} else if ( op === '<=' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'lessThanEqual' ) }( ${a}, ${b} )`, type, output );\n\n\t\t\t} else if ( op === '>' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThan' ) }( ${a}, ${b} )`, type, output );\n\n\t\t\t} else if ( op === '>=' && outputLength > 1 ) {\n\n\t\t\t\treturn builder.format( `${ builder.getMethod( 'greaterThanEqual' ) }( ${a}, ${b} )`, type, output );\n\n\t\t\t} else {\n\n\t\t\t\treturn builder.format( `( ${a} ${this.op} ${b} )`, type, output );\n\n\t\t\t}\n\n\t\t} else if ( typeA !== 'void' ) {\n\n\t\t\treturn builder.format( `${a} ${this.op} ${b}`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.op = this.op;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.op = data.op;\n\n\t}\n\n}\n\nexport default OperatorNode;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,qBAAqB;AAE1C,MAAMC,YAAY,SAASD,QAAQ,CAAC;EAEnCE,WAAW,CAAEC,EAAE,EAAEC,KAAK,EAAEC,KAAK,EAAc;IAE1C,KAAK,EAAE;IAEP,IAAI,CAACF,EAAE,GAAGA,EAAE;IAEZ,IAAK,qDAAgB,CAAC,EAAG;MAExB,IAAIG,UAAU,GAAGD,KAAK;MAEtB,KAAM,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,qDAAgB,EAAEA,CAAC,EAAG,EAAG;QAE1CD,UAAU,GAAG,IAAIL,YAAY,CAAEE,EAAE,EAAEG,UAAU,EAAUC,CAAC,gCAADA,CAAC,6BAADA,CAAC,MAAI;MAE7D;MAEAF,KAAK,GAAGC,UAAU;IAEnB;IAEA,IAAI,CAACF,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,KAAK,GAAGA,KAAK;EAEnB;EAEAG,WAAW,CAAEC,OAAO,EAAEC,MAAM,EAAG;IAE9B,MAAMP,EAAE,GAAG,IAAI,CAACA,EAAE;IAElB,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,MAAMM,KAAK,GAAGP,KAAK,CAACI,WAAW,CAAEC,OAAO,CAAE;IAC1C,MAAMG,KAAK,GAAGP,KAAK,CAACG,WAAW,CAAEC,OAAO,CAAE;IAE1C,IAAKE,KAAK,KAAK,MAAM,IAAIC,KAAK,KAAK,MAAM,EAAG;MAE3C,OAAO,MAAM;IAEd,CAAC,MAAM,IAAKT,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,EAAG;MAEtC,OAAOQ,KAAK;IAEb,CAAC,MAAM,IAAKR,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAG;MAElF,OAAOM,OAAO,CAACI,cAAc,CAAEF,KAAK,CAAE;IAEvC,CAAC,MAAM,IAAKR,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAG;MAEtE,OAAO,MAAM;IAEd,CAAC,MAAM,IAAKA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAG;MAEpE,MAAMW,UAAU,GAAGL,OAAO,CAACM,aAAa,CAAEL,MAAM,CAAE;MAElD,OAAOI,UAAU,GAAG,CAAC,GAAI,OAAOA,UAAY,EAAC,GAAG,MAAM;IAEvD,CAAC,MAAM;MAEN,IAAKH,KAAK,KAAK,OAAO,IAAIF,OAAO,CAACO,QAAQ,CAAEJ,KAAK,CAAE,EAAG;QAErD,OAAOA,KAAK;MAEb,CAAC,MAAM,IAAKH,OAAO,CAACO,QAAQ,CAAEL,KAAK,CAAE,IAAIF,OAAO,CAACQ,QAAQ,CAAEL,KAAK,CAAE,EAAG;QAEpE;;QAEA,OAAOH,OAAO,CAACS,mBAAmB,CAAEP,KAAK,CAAE;MAE5C,CAAC,MAAM,IAAKF,OAAO,CAACQ,QAAQ,CAAEN,KAAK,CAAE,IAAIF,OAAO,CAACO,QAAQ,CAAEJ,KAAK,CAAE,EAAG;QAEpE;;QAEA,OAAOH,OAAO,CAACS,mBAAmB,CAAEN,KAAK,CAAE;MAE5C,CAAC,MAAM,IAAKH,OAAO,CAACM,aAAa,CAAEH,KAAK,CAAE,GAAGH,OAAO,CAACM,aAAa,CAAEJ,KAAK,CAAE,EAAG;QAE7E;;QAEA,OAAOC,KAAK;MAEb;MAEA,OAAOD,KAAK;IAEb;EAED;EAEAQ,QAAQ,CAAEV,OAAO,EAAEC,MAAM,EAAG;IAE3B,MAAMP,EAAE,GAAG,IAAI,CAACA,EAAE;IAElB,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IACxB,MAAMC,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,MAAMe,IAAI,GAAG,IAAI,CAACZ,WAAW,CAAEC,OAAO,EAAEC,MAAM,CAAE;IAEhD,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,KAAK,GAAG,IAAI;IAEhB,IAAKQ,IAAI,KAAK,MAAM,EAAG;MAEtBT,KAAK,GAAGP,KAAK,CAACI,WAAW,CAAEC,OAAO,CAAE;MACpCG,KAAK,GAAGP,KAAK,CAACG,WAAW,CAAEC,OAAO,CAAE;MAEpC,IAAKN,EAAE,KAAK,GAAG,EAAG;QAEjBS,KAAK,GAAGD,KAAK;MAEd,CAAC,MAAM,IAAKR,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,GAAG,IAAIA,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAG;QAEpE,IAAKM,OAAO,CAACQ,QAAQ,CAAEN,KAAK,CAAE,EAAG;UAEhCC,KAAK,GAAGD,KAAK;QAEd,CAAC,MAAM;UAENA,KAAK,GAAGC,KAAK,GAAG,OAAO;QAExB;MAED,CAAC,MAAM,IAAKT,EAAE,KAAK,IAAI,IAAIA,EAAE,KAAK,IAAI,EAAG;QAExCQ,KAAK,GAAGS,IAAI;QACZR,KAAK,GAAGH,OAAO,CAACY,mBAAmB,CAAET,KAAK,EAAE,MAAM,CAAE;MAErD,CAAC,MAAM,IAAKH,OAAO,CAACO,QAAQ,CAAEL,KAAK,CAAE,IAAIF,OAAO,CAACQ,QAAQ,CAAEL,KAAK,CAAE,EAAG;QAEpE;;QAEAA,KAAK,GAAGH,OAAO,CAACS,mBAAmB,CAAEP,KAAK,CAAE;MAE7C,CAAC,MAAM,IAAKF,OAAO,CAACQ,QAAQ,CAAEN,KAAK,CAAE,IAAIF,OAAO,CAACO,QAAQ,CAAEJ,KAAK,CAAE,EAAG;QAEpE;;QAEAD,KAAK,GAAGF,OAAO,CAACS,mBAAmB,CAAEN,KAAK,CAAE;MAE7C,CAAC,MAAM;QAEN;;QAEAD,KAAK,GAAGC,KAAK,GAAGQ,IAAI;MAErB;IAED,CAAC,MAAM;MAENT,KAAK,GAAGC,KAAK,GAAGQ,IAAI;IAErB;IAEA,MAAME,CAAC,GAAGlB,KAAK,CAACmB,KAAK,CAAEd,OAAO,EAAEE,KAAK,CAAE;IACvC,MAAMa,CAAC,GAAGnB,KAAK,CAACkB,KAAK,CAAEd,OAAO,EAAEG,KAAK,CAAE;IAEvC,MAAMa,YAAY,GAAGhB,OAAO,CAACM,aAAa,CAAEL,MAAM,CAAE;IAEpD,IAAKA,MAAM,KAAK,MAAM,EAAG;MAExB,IAAKP,EAAE,KAAK,GAAG,EAAG;QAEjBM,OAAO,CAACiB,WAAW,CAAG,GAAEJ,CAAE,IAAG,IAAI,CAACnB,EAAG,IAAGqB,CAAE,EAAC,CAAE;QAE7C,OAAOF,CAAC;MAET,CAAC,MAAM,IAAKnB,EAAE,KAAK,GAAG,IAAIsB,YAAY,GAAG,CAAC,EAAG;QAE5C,OAAOhB,OAAO,CAACkB,MAAM,CAAG,GAAGlB,OAAO,CAACmB,SAAS,CAAE,UAAU,CAAI,KAAIN,CAAE,KAAIE,CAAE,IAAG,EAAEJ,IAAI,EAAEV,MAAM,CAAE;MAE5F,CAAC,MAAM,IAAKP,EAAE,KAAK,IAAI,IAAIsB,YAAY,GAAG,CAAC,EAAG;QAE7C,OAAOhB,OAAO,CAACkB,MAAM,CAAG,GAAGlB,OAAO,CAACmB,SAAS,CAAE,eAAe,CAAI,KAAIN,CAAE,KAAIE,CAAE,IAAG,EAAEJ,IAAI,EAAEV,MAAM,CAAE;MAEjG,CAAC,MAAM,IAAKP,EAAE,KAAK,GAAG,IAAIsB,YAAY,GAAG,CAAC,EAAG;QAE5C,OAAOhB,OAAO,CAACkB,MAAM,CAAG,GAAGlB,OAAO,CAACmB,SAAS,CAAE,aAAa,CAAI,KAAIN,CAAE,KAAIE,CAAE,IAAG,EAAEJ,IAAI,EAAEV,MAAM,CAAE;MAE/F,CAAC,MAAM,IAAKP,EAAE,KAAK,IAAI,IAAIsB,YAAY,GAAG,CAAC,EAAG;QAE7C,OAAOhB,OAAO,CAACkB,MAAM,CAAG,GAAGlB,OAAO,CAACmB,SAAS,CAAE,kBAAkB,CAAI,KAAIN,CAAE,KAAIE,CAAE,IAAG,EAAEJ,IAAI,EAAEV,MAAM,CAAE;MAEpG,CAAC,MAAM;QAEN,OAAOD,OAAO,CAACkB,MAAM,CAAG,KAAIL,CAAE,IAAG,IAAI,CAACnB,EAAG,IAAGqB,CAAE,IAAG,EAAEJ,IAAI,EAAEV,MAAM,CAAE;MAElE;IAED,CAAC,MAAM,IAAKC,KAAK,KAAK,MAAM,EAAG;MAE9B,OAAOF,OAAO,CAACkB,MAAM,CAAG,GAAEL,CAAE,IAAG,IAAI,CAACnB,EAAG,IAAGqB,CAAE,EAAC,EAAEJ,IAAI,EAAEV,MAAM,CAAE;IAE9D;EAED;EAEAmB,SAAS,CAAEC,IAAI,EAAG;IAEjB,KAAK,CAACD,SAAS,CAAEC,IAAI,CAAE;IAEvBA,IAAI,CAAC3B,EAAE,GAAG,IAAI,CAACA,EAAE;EAElB;EAEA4B,WAAW,CAAED,IAAI,EAAG;IAEnB,KAAK,CAACC,WAAW,CAAED,IAAI,CAAE;IAEzB,IAAI,CAAC3B,EAAE,GAAG2B,IAAI,CAAC3B,EAAE;EAElB;AAED;AAEA,eAAeF,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}