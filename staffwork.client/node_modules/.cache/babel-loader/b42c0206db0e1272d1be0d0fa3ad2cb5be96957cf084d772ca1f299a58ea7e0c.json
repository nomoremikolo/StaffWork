{"ast":null,"code":"import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Line } from '../objects/Line.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nconst _v1 = /*@__PURE__*/new Vector3();\nconst _v2 = /*@__PURE__*/new Vector3();\nconst _v3 = /*@__PURE__*/new Vector3();\nclass DirectionalLightHelper extends Object3D {\n  constructor(light, size, color) {\n    super();\n    this.light = light;\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    this.type = 'DirectionalLightHelper';\n    if (size === undefined) size = 1;\n    let geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    const material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n    geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n    this.update();\n  }\n  dispose() {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  }\n  update() {\n    this.light.updateWorldMatrix(true, false);\n    this.light.target.updateWorldMatrix(true, false);\n    _v1.setFromMatrixPosition(this.light.matrixWorld);\n    _v2.setFromMatrixPosition(this.light.target.matrixWorld);\n    _v3.subVectors(_v2, _v1);\n    this.lightPlane.lookAt(_v2);\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n    this.targetLine.lookAt(_v2);\n    this.targetLine.scale.z = _v3.length();\n  }\n}\nexport { DirectionalLightHelper };","map":{"version":3,"names":["Vector3","Object3D","Line","Float32BufferAttribute","BufferGeometry","LineBasicMaterial","_v1","_v2","_v3","DirectionalLightHelper","constructor","light","size","color","matrix","matrixWorld","matrixAutoUpdate","type","undefined","geometry","setAttribute","material","fog","toneMapped","lightPlane","add","targetLine","update","dispose","updateWorldMatrix","target","setFromMatrixPosition","subVectors","lookAt","set","copy","scale","z","length"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/helpers/DirectionalLightHelper.js"],"sourcesContent":["import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { Line } from '../objects/Line.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\n\nconst _v1 = /*@__PURE__*/ new Vector3();\nconst _v2 = /*@__PURE__*/ new Vector3();\nconst _v3 = /*@__PURE__*/ new Vector3();\n\nclass DirectionalLightHelper extends Object3D {\n\n\tconstructor( light, size, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'DirectionalLightHelper';\n\n\t\tif ( size === undefined ) size = 1;\n\n\t\tlet geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\t_v1.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3.subVectors( _v2, _v1 );\n\n\t\tthis.lightPlane.lookAt( _v2 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2 );\n\t\tthis.targetLine.scale.z = _v3.length();\n\n\t}\n\n}\n\n\nexport { DirectionalLightHelper };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,IAAI,QAAQ,oBAAoB;AACzC,SAASC,sBAAsB,QAAQ,4BAA4B;AACnE,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,iBAAiB,QAAQ,mCAAmC;AAErE,MAAMC,GAAG,GAAG,aAAc,IAAIN,OAAO,EAAE;AACvC,MAAMO,GAAG,GAAG,aAAc,IAAIP,OAAO,EAAE;AACvC,MAAMQ,GAAG,GAAG,aAAc,IAAIR,OAAO,EAAE;AAEvC,MAAMS,sBAAsB,SAASR,QAAQ,CAAC;EAE7CS,WAAW,CAAEC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAG;IAEjC,KAAK,EAAE;IAEP,IAAI,CAACF,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACG,MAAM,GAAGH,KAAK,CAACI,WAAW;IAC/B,IAAI,CAACC,gBAAgB,GAAG,KAAK;IAE7B,IAAI,CAACH,KAAK,GAAGA,KAAK;IAElB,IAAI,CAACI,IAAI,GAAG,wBAAwB;IAEpC,IAAKL,IAAI,KAAKM,SAAS,EAAGN,IAAI,GAAG,CAAC;IAElC,IAAIO,QAAQ,GAAG,IAAIf,cAAc,EAAE;IACnCe,QAAQ,CAACC,YAAY,CAAE,UAAU,EAAE,IAAIjB,sBAAsB,CAAE,CAC9D,CAAES,IAAI,EAAEA,IAAI,EAAE,CAAC,EACfA,IAAI,EAAEA,IAAI,EAAE,CAAC,EACbA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACf,CAAEA,IAAI,EAAE,CAAEA,IAAI,EAAE,CAAC,EACjB,CAAEA,IAAI,EAAEA,IAAI,EAAE,CAAC,CACf,EAAE,CAAC,CAAE,CAAE;IAER,MAAMS,QAAQ,GAAG,IAAIhB,iBAAiB,CAAE;MAAEiB,GAAG,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAM,CAAC,CAAE;IAE3E,IAAI,CAACC,UAAU,GAAG,IAAItB,IAAI,CAAEiB,QAAQ,EAAEE,QAAQ,CAAE;IAChD,IAAI,CAACI,GAAG,CAAE,IAAI,CAACD,UAAU,CAAE;IAE3BL,QAAQ,GAAG,IAAIf,cAAc,EAAE;IAC/Be,QAAQ,CAACC,YAAY,CAAE,UAAU,EAAE,IAAIjB,sBAAsB,CAAE,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE,EAAE,CAAC,CAAE,CAAE;IAE1F,IAAI,CAACuB,UAAU,GAAG,IAAIxB,IAAI,CAAEiB,QAAQ,EAAEE,QAAQ,CAAE;IAChD,IAAI,CAACI,GAAG,CAAE,IAAI,CAACC,UAAU,CAAE;IAE3B,IAAI,CAACC,MAAM,EAAE;EAEd;EAEAC,OAAO,GAAG;IAET,IAAI,CAACJ,UAAU,CAACL,QAAQ,CAACS,OAAO,EAAE;IAClC,IAAI,CAACJ,UAAU,CAACH,QAAQ,CAACO,OAAO,EAAE;IAClC,IAAI,CAACF,UAAU,CAACP,QAAQ,CAACS,OAAO,EAAE;IAClC,IAAI,CAACF,UAAU,CAACL,QAAQ,CAACO,OAAO,EAAE;EAEnC;EAEAD,MAAM,GAAG;IAER,IAAI,CAAChB,KAAK,CAACkB,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;IAC3C,IAAI,CAAClB,KAAK,CAACmB,MAAM,CAACD,iBAAiB,CAAE,IAAI,EAAE,KAAK,CAAE;IAElDvB,GAAG,CAACyB,qBAAqB,CAAE,IAAI,CAACpB,KAAK,CAACI,WAAW,CAAE;IACnDR,GAAG,CAACwB,qBAAqB,CAAE,IAAI,CAACpB,KAAK,CAACmB,MAAM,CAACf,WAAW,CAAE;IAC1DP,GAAG,CAACwB,UAAU,CAAEzB,GAAG,EAAED,GAAG,CAAE;IAE1B,IAAI,CAACkB,UAAU,CAACS,MAAM,CAAE1B,GAAG,CAAE;IAE7B,IAAK,IAAI,CAACM,KAAK,KAAKK,SAAS,EAAG;MAE/B,IAAI,CAACM,UAAU,CAACH,QAAQ,CAACR,KAAK,CAACqB,GAAG,CAAE,IAAI,CAACrB,KAAK,CAAE;MAChD,IAAI,CAACa,UAAU,CAACL,QAAQ,CAACR,KAAK,CAACqB,GAAG,CAAE,IAAI,CAACrB,KAAK,CAAE;IAEjD,CAAC,MAAM;MAEN,IAAI,CAACW,UAAU,CAACH,QAAQ,CAACR,KAAK,CAACsB,IAAI,CAAE,IAAI,CAACxB,KAAK,CAACE,KAAK,CAAE;MACvD,IAAI,CAACa,UAAU,CAACL,QAAQ,CAACR,KAAK,CAACsB,IAAI,CAAE,IAAI,CAACxB,KAAK,CAACE,KAAK,CAAE;IAExD;IAEA,IAAI,CAACa,UAAU,CAACO,MAAM,CAAE1B,GAAG,CAAE;IAC7B,IAAI,CAACmB,UAAU,CAACU,KAAK,CAACC,CAAC,GAAG7B,GAAG,CAAC8B,MAAM,EAAE;EAEvC;AAED;AAGA,SAAS7B,sBAAsB"},"metadata":{},"sourceType":"module","externalDependencies":[]}