{"ast":null,"code":"import { LightShadow } from './LightShadow.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\nclass SpotLightShadow extends LightShadow {\n  constructor() {\n    super(new PerspectiveCamera(50, 1, 0.5, 500));\n    this.isSpotLightShadow = true;\n    this.focus = 1;\n  }\n  updateMatrices(light) {\n    const camera = this.camera;\n    const fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n    const aspect = this.mapSize.width / this.mapSize.height;\n    const far = light.distance || camera.far;\n    if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n      camera.fov = fov;\n      camera.aspect = aspect;\n      camera.far = far;\n      camera.updateProjectionMatrix();\n    }\n    super.updateMatrices(light);\n  }\n  copy(source) {\n    super.copy(source);\n    this.focus = source.focus;\n    return this;\n  }\n}\nexport { SpotLightShadow };","map":{"version":3,"names":["LightShadow","MathUtils","PerspectiveCamera","SpotLightShadow","constructor","isSpotLightShadow","focus","updateMatrices","light","camera","fov","RAD2DEG","angle","aspect","mapSize","width","height","far","distance","updateProjectionMatrix","copy","source"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/lights/SpotLightShadow.js"],"sourcesContent":["import { LightShadow } from './LightShadow.js';\nimport * as MathUtils from '../math/MathUtils.js';\nimport { PerspectiveCamera } from '../cameras/PerspectiveCamera.js';\n\nclass SpotLightShadow extends LightShadow {\n\n\tconstructor() {\n\n\t\tsuper( new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t\tthis.isSpotLightShadow = true;\n\n\t\tthis.focus = 1;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst camera = this.camera;\n\n\t\tconst fov = MathUtils.RAD2DEG * 2 * light.angle * this.focus;\n\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\tconst far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t\tsuper.updateMatrices( light );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.focus = source.focus;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { SpotLightShadow };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,SAAS,MAAM,sBAAsB;AACjD,SAASC,iBAAiB,QAAQ,iCAAiC;AAEnE,MAAMC,eAAe,SAASH,WAAW,CAAC;EAEzCI,WAAW,GAAG;IAEb,KAAK,CAAE,IAAIF,iBAAiB,CAAE,EAAE,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE,CAAE;IAEjD,IAAI,CAACG,iBAAiB,GAAG,IAAI;IAE7B,IAAI,CAACC,KAAK,GAAG,CAAC;EAEf;EAEAC,cAAc,CAAEC,KAAK,EAAG;IAEvB,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAE1B,MAAMC,GAAG,GAAGT,SAAS,CAACU,OAAO,GAAG,CAAC,GAAGH,KAAK,CAACI,KAAK,GAAG,IAAI,CAACN,KAAK;IAC5D,MAAMO,MAAM,GAAG,IAAI,CAACC,OAAO,CAACC,KAAK,GAAG,IAAI,CAACD,OAAO,CAACE,MAAM;IACvD,MAAMC,GAAG,GAAGT,KAAK,CAACU,QAAQ,IAAIT,MAAM,CAACQ,GAAG;IAExC,IAAKP,GAAG,KAAKD,MAAM,CAACC,GAAG,IAAIG,MAAM,KAAKJ,MAAM,CAACI,MAAM,IAAII,GAAG,KAAKR,MAAM,CAACQ,GAAG,EAAG;MAE3ER,MAAM,CAACC,GAAG,GAAGA,GAAG;MAChBD,MAAM,CAACI,MAAM,GAAGA,MAAM;MACtBJ,MAAM,CAACQ,GAAG,GAAGA,GAAG;MAChBR,MAAM,CAACU,sBAAsB,EAAE;IAEhC;IAEA,KAAK,CAACZ,cAAc,CAAEC,KAAK,CAAE;EAE9B;EAEAY,IAAI,CAAEC,MAAM,EAAG;IAEd,KAAK,CAACD,IAAI,CAAEC,MAAM,CAAE;IAEpB,IAAI,CAACf,KAAK,GAAGe,MAAM,CAACf,KAAK;IAEzB,OAAO,IAAI;EAEZ;AAED;AAEA,SAASH,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}