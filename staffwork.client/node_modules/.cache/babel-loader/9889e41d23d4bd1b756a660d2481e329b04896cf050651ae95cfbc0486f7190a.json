{"ast":null,"code":"import { Interpolant } from '../Interpolant.js';\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1 /*, t0, t, t1 */) {\n    return this.copySampleValue_(i1 - 1);\n  }\n}\nexport { DiscreteInterpolant };","map":{"version":3,"names":["Interpolant","DiscreteInterpolant","constructor","parameterPositions","sampleValues","sampleSize","resultBuffer","interpolate_","i1","copySampleValue_"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/math/interpolants/DiscreteInterpolant.js"],"sourcesContent":["import { Interpolant } from '../Interpolant.js';\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceding\n * the parameter.\n */\n\nclass DiscreteInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n}\n\n\nexport { DiscreteInterpolant };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;;AAE/C;AACA;AACA;AACA;AACA;;AAEA,MAAMC,mBAAmB,SAASD,WAAW,CAAC;EAE7CE,WAAW,CAAEC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,EAAG;IAEzE,KAAK,CAAEH,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,CAAE;EAEpE;EAEAC,YAAY,CAAEC,EAAE,CAAC,kBAAmB;IAEnC,OAAO,IAAI,CAACC,gBAAgB,CAAED,EAAE,GAAG,CAAC,CAAE;EAEvC;AAED;AAGA,SAASP,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}