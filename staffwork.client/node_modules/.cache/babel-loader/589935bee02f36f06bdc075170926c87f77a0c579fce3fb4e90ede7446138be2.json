{"ast":null,"code":"import { Path } from './Path.js';\nimport * as MathUtils from '../../math/MathUtils.js';\nclass Shape extends Path {\n  constructor(points) {\n    super(points);\n    this.uuid = MathUtils.generateUUID();\n    this.type = 'Shape';\n    this.holes = [];\n  }\n  getPointsHoles(divisions) {\n    const holesPts = [];\n    for (let i = 0, l = this.holes.length; i < l; i++) {\n      holesPts[i] = this.holes[i].getPoints(divisions);\n    }\n    return holesPts;\n  }\n\n  // get points of shape and holes (keypoints based on segments parameter)\n\n  extractPoints(divisions) {\n    return {\n      shape: this.getPoints(divisions),\n      holes: this.getPointsHoles(divisions)\n    };\n  }\n  copy(source) {\n    super.copy(source);\n    this.holes = [];\n    for (let i = 0, l = source.holes.length; i < l; i++) {\n      const hole = source.holes[i];\n      this.holes.push(hole.clone());\n    }\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.uuid = this.uuid;\n    data.holes = [];\n    for (let i = 0, l = this.holes.length; i < l; i++) {\n      const hole = this.holes[i];\n      data.holes.push(hole.toJSON());\n    }\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.uuid = json.uuid;\n    this.holes = [];\n    for (let i = 0, l = json.holes.length; i < l; i++) {\n      const hole = json.holes[i];\n      this.holes.push(new Path().fromJSON(hole));\n    }\n    return this;\n  }\n}\nexport { Shape };","map":{"version":3,"names":["Path","MathUtils","Shape","constructor","points","uuid","generateUUID","type","holes","getPointsHoles","divisions","holesPts","i","l","length","getPoints","extractPoints","shape","copy","source","hole","push","clone","toJSON","data","fromJSON","json"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/extras/core/Shape.js"],"sourcesContent":["import { Path } from './Path.js';\nimport * as MathUtils from '../../math/MathUtils.js';\n\nclass Shape extends Path {\n\n\tconstructor( points ) {\n\n\t\tsuper( points );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tgetPointsHoles( divisions ) {\n\n\t\tconst holesPts = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t}\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.holes = [];\n\n\t\tfor ( let i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = this.holes[ i ];\n\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.uuid = json.uuid;\n\t\tthis.holes = [];\n\n\t\tfor ( let i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\tconst hole = json.holes[ i ];\n\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\n\nexport { Shape };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,WAAW;AAChC,OAAO,KAAKC,SAAS,MAAM,yBAAyB;AAEpD,MAAMC,KAAK,SAASF,IAAI,CAAC;EAExBG,WAAW,CAAEC,MAAM,EAAG;IAErB,KAAK,CAAEA,MAAM,CAAE;IAEf,IAAI,CAACC,IAAI,GAAGJ,SAAS,CAACK,YAAY,EAAE;IAEpC,IAAI,CAACC,IAAI,GAAG,OAAO;IAEnB,IAAI,CAACC,KAAK,GAAG,EAAE;EAEhB;EAEAC,cAAc,CAAEC,SAAS,EAAG;IAE3B,MAAMC,QAAQ,GAAG,EAAE;IAEnB,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,IAAI,CAACL,KAAK,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAG,EAAG;MAErDD,QAAQ,CAAEC,CAAC,CAAE,GAAG,IAAI,CAACJ,KAAK,CAAEI,CAAC,CAAE,CAACG,SAAS,CAAEL,SAAS,CAAE;IAEvD;IAEA,OAAOC,QAAQ;EAEhB;;EAEA;;EAEAK,aAAa,CAAEN,SAAS,EAAG;IAE1B,OAAO;MAENO,KAAK,EAAE,IAAI,CAACF,SAAS,CAAEL,SAAS,CAAE;MAClCF,KAAK,EAAE,IAAI,CAACC,cAAc,CAAEC,SAAS;IAEtC,CAAC;EAEF;EAEAQ,IAAI,CAAEC,MAAM,EAAG;IAEd,KAAK,CAACD,IAAI,CAAEC,MAAM,CAAE;IAEpB,IAAI,CAACX,KAAK,GAAG,EAAE;IAEf,KAAM,IAAII,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGM,MAAM,CAACX,KAAK,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAG,EAAG;MAEvD,MAAMQ,IAAI,GAAGD,MAAM,CAACX,KAAK,CAAEI,CAAC,CAAE;MAE9B,IAAI,CAACJ,KAAK,CAACa,IAAI,CAAED,IAAI,CAACE,KAAK,EAAE,CAAE;IAEhC;IAEA,OAAO,IAAI;EAEZ;EAEAC,MAAM,GAAG;IAER,MAAMC,IAAI,GAAG,KAAK,CAACD,MAAM,EAAE;IAE3BC,IAAI,CAACnB,IAAI,GAAG,IAAI,CAACA,IAAI;IACrBmB,IAAI,CAAChB,KAAK,GAAG,EAAE;IAEf,KAAM,IAAII,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,IAAI,CAACL,KAAK,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAG,EAAG;MAErD,MAAMQ,IAAI,GAAG,IAAI,CAACZ,KAAK,CAAEI,CAAC,CAAE;MAC5BY,IAAI,CAAChB,KAAK,CAACa,IAAI,CAAED,IAAI,CAACG,MAAM,EAAE,CAAE;IAEjC;IAEA,OAAOC,IAAI;EAEZ;EAEAC,QAAQ,CAAEC,IAAI,EAAG;IAEhB,KAAK,CAACD,QAAQ,CAAEC,IAAI,CAAE;IAEtB,IAAI,CAACrB,IAAI,GAAGqB,IAAI,CAACrB,IAAI;IACrB,IAAI,CAACG,KAAK,GAAG,EAAE;IAEf,KAAM,IAAII,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGa,IAAI,CAAClB,KAAK,CAACM,MAAM,EAAEF,CAAC,GAAGC,CAAC,EAAED,CAAC,EAAG,EAAG;MAErD,MAAMQ,IAAI,GAAGM,IAAI,CAAClB,KAAK,CAAEI,CAAC,CAAE;MAC5B,IAAI,CAACJ,KAAK,CAACa,IAAI,CAAE,IAAIrB,IAAI,EAAE,CAACyB,QAAQ,CAAEL,IAAI,CAAE,CAAE;IAE/C;IAEA,OAAO,IAAI;EAEZ;AAED;AAGA,SAASlB,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}