{"ast":null,"code":"import Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport JoinNode from '../utils/JoinNode.js';\nclass SpriteSheetUVNode extends Node {\n  constructor(countNode) {\n    let uvNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new UVNode();\n    let frameNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new ConstNode(0);\n    super('vec2');\n    this.countNode = countNode;\n    this.uvNode = uvNode;\n    this.frameNode = frameNode;\n  }\n  construct() {\n    const {\n      frameNode,\n      uvNode,\n      countNode\n    } = this;\n    const one = new ConstNode(1);\n    const width = new SplitNode(countNode, 'x');\n    const height = new SplitNode(countNode, 'y');\n    const total = new OperatorNode('*', width, height);\n    const roundFrame = new MathNode(MathNode.FLOOR, new MathNode(MathNode.MOD, frameNode, total));\n    const frameNum = new OperatorNode('+', roundFrame, one);\n    const cell = new MathNode(MathNode.MOD, roundFrame, width);\n    const row = new MathNode(MathNode.CEIL, new OperatorNode('/', frameNum, width));\n    const rowInv = new OperatorNode('-', height, row);\n    const scale = new OperatorNode('/', one, countNode);\n    const uvFrameOffset = new JoinNode([new OperatorNode('*', cell, new SplitNode(scale, 'x')), new OperatorNode('*', rowInv, new SplitNode(scale, 'y'))]);\n    const uvScale = new OperatorNode('*', uvNode, scale);\n    const uvFrame = new OperatorNode('+', uvScale, uvFrameOffset);\n    return uvFrame;\n  }\n}\nexport default SpriteSheetUVNode;","map":{"version":3,"names":["Node","ConstNode","UVNode","MathNode","OperatorNode","SplitNode","JoinNode","SpriteSheetUVNode","constructor","countNode","uvNode","frameNode","construct","one","width","height","total","roundFrame","FLOOR","MOD","frameNum","cell","row","CEIL","rowInv","scale","uvFrameOffset","uvScale","uvFrame"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/utils/SpriteSheetUVNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport ConstNode from '../core/ConstNode.js';\nimport UVNode from '../accessors/UVNode.js';\nimport MathNode from '../math/MathNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport JoinNode from '../utils/JoinNode.js';\n\nclass SpriteSheetUVNode extends Node {\n\n\tconstructor( countNode, uvNode = new UVNode(), frameNode = new ConstNode( 0 ) ) {\n\n\t\tsuper( 'vec2' );\n\n\t\tthis.countNode = countNode;\n\t\tthis.uvNode = uvNode;\n\t\tthis.frameNode = frameNode;\n\n\t}\n\n\tconstruct() {\n\n\t\tconst { frameNode, uvNode, countNode } = this;\n\n\t\tconst one = new ConstNode( 1 );\n\n\t\tconst width = new SplitNode( countNode, 'x' );\n\t\tconst height = new SplitNode( countNode, 'y' );\n\n\t\tconst total = new OperatorNode( '*', width, height );\n\n\t\tconst roundFrame = new MathNode( MathNode.FLOOR, new MathNode( MathNode.MOD, frameNode, total ) );\n\n\t\tconst frameNum = new OperatorNode( '+', roundFrame, one );\n\n\t\tconst cell = new MathNode( MathNode.MOD, roundFrame, width );\n\t\tconst row = new MathNode( MathNode.CEIL, new OperatorNode( '/', frameNum, width ) );\n\t\tconst rowInv = new OperatorNode( '-', height, row );\n\n\t\tconst scale = new OperatorNode( '/', one, countNode );\n\n\t\tconst uvFrameOffset = new JoinNode( [\n\t\t\tnew OperatorNode( '*', cell, new SplitNode( scale, 'x' ) ),\n\t\t\tnew OperatorNode( '*', rowInv, new SplitNode( scale, 'y' ) )\n\t\t] );\n\n\t\tconst uvScale = new OperatorNode( '*', uvNode, scale );\n\t\tconst uvFrame = new OperatorNode( '+', uvScale, uvFrameOffset );\n\n\t\treturn uvFrame;\n\n\t}\n\n}\n\nexport default SpriteSheetUVNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,OAAOC,SAAS,MAAM,sBAAsB;AAC5C,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,QAAQ,MAAM,sBAAsB;AAE3C,MAAMC,iBAAiB,SAASP,IAAI,CAAC;EAEpCQ,WAAW,CAAEC,SAAS,EAA0D;IAAA,IAAxDC,MAAM,uEAAG,IAAIR,MAAM,EAAE;IAAA,IAAES,SAAS,uEAAG,IAAIV,SAAS,CAAE,CAAC,CAAE;IAE5E,KAAK,CAAE,MAAM,CAAE;IAEf,IAAI,CAACQ,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAE3B;EAEAC,SAAS,GAAG;IAEX,MAAM;MAAED,SAAS;MAAED,MAAM;MAAED;IAAU,CAAC,GAAG,IAAI;IAE7C,MAAMI,GAAG,GAAG,IAAIZ,SAAS,CAAE,CAAC,CAAE;IAE9B,MAAMa,KAAK,GAAG,IAAIT,SAAS,CAAEI,SAAS,EAAE,GAAG,CAAE;IAC7C,MAAMM,MAAM,GAAG,IAAIV,SAAS,CAAEI,SAAS,EAAE,GAAG,CAAE;IAE9C,MAAMO,KAAK,GAAG,IAAIZ,YAAY,CAAE,GAAG,EAAEU,KAAK,EAAEC,MAAM,CAAE;IAEpD,MAAME,UAAU,GAAG,IAAId,QAAQ,CAAEA,QAAQ,CAACe,KAAK,EAAE,IAAIf,QAAQ,CAAEA,QAAQ,CAACgB,GAAG,EAAER,SAAS,EAAEK,KAAK,CAAE,CAAE;IAEjG,MAAMI,QAAQ,GAAG,IAAIhB,YAAY,CAAE,GAAG,EAAEa,UAAU,EAAEJ,GAAG,CAAE;IAEzD,MAAMQ,IAAI,GAAG,IAAIlB,QAAQ,CAAEA,QAAQ,CAACgB,GAAG,EAAEF,UAAU,EAAEH,KAAK,CAAE;IAC5D,MAAMQ,GAAG,GAAG,IAAInB,QAAQ,CAAEA,QAAQ,CAACoB,IAAI,EAAE,IAAInB,YAAY,CAAE,GAAG,EAAEgB,QAAQ,EAAEN,KAAK,CAAE,CAAE;IACnF,MAAMU,MAAM,GAAG,IAAIpB,YAAY,CAAE,GAAG,EAAEW,MAAM,EAAEO,GAAG,CAAE;IAEnD,MAAMG,KAAK,GAAG,IAAIrB,YAAY,CAAE,GAAG,EAAES,GAAG,EAAEJ,SAAS,CAAE;IAErD,MAAMiB,aAAa,GAAG,IAAIpB,QAAQ,CAAE,CACnC,IAAIF,YAAY,CAAE,GAAG,EAAEiB,IAAI,EAAE,IAAIhB,SAAS,CAAEoB,KAAK,EAAE,GAAG,CAAE,CAAE,EAC1D,IAAIrB,YAAY,CAAE,GAAG,EAAEoB,MAAM,EAAE,IAAInB,SAAS,CAAEoB,KAAK,EAAE,GAAG,CAAE,CAAE,CAC5D,CAAE;IAEH,MAAME,OAAO,GAAG,IAAIvB,YAAY,CAAE,GAAG,EAAEM,MAAM,EAAEe,KAAK,CAAE;IACtD,MAAMG,OAAO,GAAG,IAAIxB,YAAY,CAAE,GAAG,EAAEuB,OAAO,EAAED,aAAa,CAAE;IAE/D,OAAOE,OAAO;EAEf;AAED;AAEA,eAAerB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}