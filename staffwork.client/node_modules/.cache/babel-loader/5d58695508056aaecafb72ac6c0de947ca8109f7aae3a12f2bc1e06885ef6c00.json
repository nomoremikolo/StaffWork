{"ast":null,"code":"import { LineSegments } from '../objects/LineSegments.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nconst _vector = /*@__PURE__*/new Vector3();\nconst _boneMatrix = /*@__PURE__*/new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\nclass SkeletonHelper extends LineSegments {\n  constructor(object) {\n    const bones = getBoneList(object);\n    const geometry = new BufferGeometry();\n    const vertices = [];\n    const colors = [];\n    const color1 = new Color(0, 0, 1);\n    const color2 = new Color(0, 1, 0);\n    for (let i = 0; i < bones.length; i++) {\n      const bone = bones[i];\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      depthTest: false,\n      depthWrite: false,\n      toneMapped: false,\n      transparent: true\n    });\n    super(geometry, material);\n    this.isSkeletonHelper = true;\n    this.type = 'SkeletonHelper';\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n  updateMatrixWorld(force) {\n    const bones = this.bones;\n    const geometry = this.geometry;\n    const position = geometry.getAttribute('position');\n    _matrixWorldInv.copy(this.root.matrixWorld).invert();\n    for (let i = 0, j = 0; i < bones.length; i++) {\n      const bone = bones[i];\n      if (bone.parent && bone.parent.isBone) {\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n        _vector.setFromMatrixPosition(_boneMatrix);\n        position.setXYZ(j, _vector.x, _vector.y, _vector.z);\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n        _vector.setFromMatrixPosition(_boneMatrix);\n        position.setXYZ(j + 1, _vector.x, _vector.y, _vector.z);\n        j += 2;\n      }\n    }\n    geometry.getAttribute('position').needsUpdate = true;\n    super.updateMatrixWorld(force);\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nfunction getBoneList(object) {\n  const boneList = [];\n  if (object.isBone === true) {\n    boneList.push(object);\n  }\n  for (let i = 0; i < object.children.length; i++) {\n    boneList.push.apply(boneList, getBoneList(object.children[i]));\n  }\n  return boneList;\n}\nexport { SkeletonHelper };","map":{"version":3,"names":["LineSegments","Matrix4","LineBasicMaterial","Color","Vector3","BufferGeometry","Float32BufferAttribute","_vector","_boneMatrix","_matrixWorldInv","SkeletonHelper","constructor","object","bones","getBoneList","geometry","vertices","colors","color1","color2","i","length","bone","parent","isBone","push","r","g","b","setAttribute","material","vertexColors","depthTest","depthWrite","toneMapped","transparent","isSkeletonHelper","type","root","matrix","matrixWorld","matrixAutoUpdate","updateMatrixWorld","force","position","getAttribute","copy","invert","j","multiplyMatrices","setFromMatrixPosition","setXYZ","x","y","z","needsUpdate","dispose","boneList","children","apply"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/helpers/SkeletonHelper.js"],"sourcesContent":["import { LineSegments } from '../objects/LineSegments.js';\nimport { Matrix4 } from '../math/Matrix4.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Color } from '../math/Color.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _boneMatrix = /*@__PURE__*/ new Matrix4();\nconst _matrixWorldInv = /*@__PURE__*/ new Matrix4();\n\n\nclass SkeletonHelper extends LineSegments {\n\n\tconstructor( object ) {\n\n\t\tconst bones = getBoneList( object );\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst color1 = new Color( 0, 0, 1 );\n\t\tconst color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( let i = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, depthTest: false, depthWrite: false, toneMapped: false, transparent: true } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.isSkeletonHelper = true;\n\n\t\tthis.type = 'SkeletonHelper';\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tconst bones = this.bones;\n\n\t\tconst geometry = this.geometry;\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.copy( this.root.matrixWorld ).invert();\n\n\t\tfor ( let i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tconst bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector.x, _vector.y, _vector.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector.x, _vector.y, _vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction getBoneList( object ) {\n\n\tconst boneList = [];\n\n\tif ( object.isBone === true ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( let i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\n\nexport { SkeletonHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}