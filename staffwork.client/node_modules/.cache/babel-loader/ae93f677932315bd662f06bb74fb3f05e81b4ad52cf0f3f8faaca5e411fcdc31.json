{"ast":null,"code":"import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\nclass MeshBasicMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshBasicMaterial = true;\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.fog = source.fog;\n    return this;\n  }\n}\nexport { MeshBasicMaterial };","map":{"version":3,"names":["Material","MultiplyOperation","Color","MeshBasicMaterial","constructor","parameters","isMeshBasicMaterial","type","color","map","lightMap","lightMapIntensity","aoMap","aoMapIntensity","specularMap","alphaMap","envMap","combine","reflectivity","refractionRatio","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","fog","setValues","copy","source"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/materials/MeshBasicMaterial.js"],"sourcesContent":["import { Material } from './Material.js';\nimport { MultiplyOperation } from '../constants.js';\nimport { Color } from '../math/Color.js';\n\nclass MeshBasicMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshBasicMaterial = true;\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { MeshBasicMaterial };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AACxC,SAASC,iBAAiB,QAAQ,iBAAiB;AACnD,SAASC,KAAK,QAAQ,kBAAkB;AAExC,MAAMC,iBAAiB,SAASH,QAAQ,CAAC;EAExCI,WAAW,CAAEC,UAAU,EAAG;IAEzB,KAAK,EAAE;IAEP,IAAI,CAACC,mBAAmB,GAAG,IAAI;IAE/B,IAAI,CAACC,IAAI,GAAG,mBAAmB;IAE/B,IAAI,CAACC,KAAK,GAAG,IAAIN,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;IAEpC,IAAI,CAACO,GAAG,GAAG,IAAI;IAEf,IAAI,CAACC,QAAQ,GAAG,IAAI;IACpB,IAAI,CAACC,iBAAiB,GAAG,GAAG;IAE5B,IAAI,CAACC,KAAK,GAAG,IAAI;IACjB,IAAI,CAACC,cAAc,GAAG,GAAG;IAEzB,IAAI,CAACC,WAAW,GAAG,IAAI;IAEvB,IAAI,CAACC,QAAQ,GAAG,IAAI;IAEpB,IAAI,CAACC,MAAM,GAAG,IAAI;IAClB,IAAI,CAACC,OAAO,GAAGhB,iBAAiB;IAChC,IAAI,CAACiB,YAAY,GAAG,CAAC;IACrB,IAAI,CAACC,eAAe,GAAG,IAAI;IAE3B,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,kBAAkB,GAAG,CAAC;IAC3B,IAAI,CAACC,gBAAgB,GAAG,OAAO;IAC/B,IAAI,CAACC,iBAAiB,GAAG,OAAO;IAEhC,IAAI,CAACC,GAAG,GAAG,IAAI;IAEf,IAAI,CAACC,SAAS,CAAEpB,UAAU,CAAE;EAE7B;EAEAqB,IAAI,CAAEC,MAAM,EAAG;IAEd,KAAK,CAACD,IAAI,CAAEC,MAAM,CAAE;IAEpB,IAAI,CAACnB,KAAK,CAACkB,IAAI,CAAEC,MAAM,CAACnB,KAAK,CAAE;IAE/B,IAAI,CAACC,GAAG,GAAGkB,MAAM,CAAClB,GAAG;IAErB,IAAI,CAACC,QAAQ,GAAGiB,MAAM,CAACjB,QAAQ;IAC/B,IAAI,CAACC,iBAAiB,GAAGgB,MAAM,CAAChB,iBAAiB;IAEjD,IAAI,CAACC,KAAK,GAAGe,MAAM,CAACf,KAAK;IACzB,IAAI,CAACC,cAAc,GAAGc,MAAM,CAACd,cAAc;IAE3C,IAAI,CAACC,WAAW,GAAGa,MAAM,CAACb,WAAW;IAErC,IAAI,CAACC,QAAQ,GAAGY,MAAM,CAACZ,QAAQ;IAE/B,IAAI,CAACC,MAAM,GAAGW,MAAM,CAACX,MAAM;IAC3B,IAAI,CAACC,OAAO,GAAGU,MAAM,CAACV,OAAO;IAC7B,IAAI,CAACC,YAAY,GAAGS,MAAM,CAACT,YAAY;IACvC,IAAI,CAACC,eAAe,GAAGQ,MAAM,CAACR,eAAe;IAE7C,IAAI,CAACC,SAAS,GAAGO,MAAM,CAACP,SAAS;IACjC,IAAI,CAACC,kBAAkB,GAAGM,MAAM,CAACN,kBAAkB;IACnD,IAAI,CAACC,gBAAgB,GAAGK,MAAM,CAACL,gBAAgB;IAC/C,IAAI,CAACC,iBAAiB,GAAGI,MAAM,CAACJ,iBAAiB;IAEjD,IAAI,CAACC,GAAG,GAAGG,MAAM,CAACH,GAAG;IAErB,OAAO,IAAI;EAEZ;AAED;AAEA,SAASrB,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}