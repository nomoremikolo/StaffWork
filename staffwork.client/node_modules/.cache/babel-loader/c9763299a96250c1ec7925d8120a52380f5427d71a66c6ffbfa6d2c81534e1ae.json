{"ast":null,"code":"import Node from '../core/Node.js';\nimport { transformedNormalView, positionViewDirection, transformDirection, negate, reflect, cameraViewMatrix } from '../shadernode/ShaderNodeBaseElements.js';\nclass ReflectVectorNode extends Node {\n  constructor() {\n    super('vec3');\n  }\n  getHash( /*builder*/\n  ) {\n    return 'reflectVector';\n  }\n  construct() {\n    const reflectView = reflect(negate(positionViewDirection), transformedNormalView);\n    return transformDirection(reflectView, cameraViewMatrix);\n  }\n}\nexport default ReflectVectorNode;","map":{"version":3,"names":["Node","transformedNormalView","positionViewDirection","transformDirection","negate","reflect","cameraViewMatrix","ReflectVectorNode","constructor","getHash","construct","reflectView"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/accessors/ReflectVectorNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport {\n\ttransformedNormalView, positionViewDirection,\n\ttransformDirection, negate, reflect, cameraViewMatrix\n} from '../shadernode/ShaderNodeBaseElements.js';\n\nclass ReflectVectorNode extends Node {\n\n\tconstructor() {\n\n\t\tsuper( 'vec3' );\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn 'reflectVector';\n\n\t}\n\n\tconstruct() {\n\n\t\tconst reflectView = reflect( negate( positionViewDirection ), transformedNormalView );\n\n\t\treturn transformDirection( reflectView, cameraViewMatrix );\n\n\t}\n\n}\n\nexport default ReflectVectorNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,SACCC,qBAAqB,EAAEC,qBAAqB,EAC5CC,kBAAkB,EAAEC,MAAM,EAAEC,OAAO,EAAEC,gBAAgB,QAC/C,yCAAyC;AAEhD,MAAMC,iBAAiB,SAASP,IAAI,CAAC;EAEpCQ,WAAW,GAAG;IAEb,KAAK,CAAE,MAAM,CAAE;EAEhB;EAEAC,OAAO,EAAE;EAAA,EAAc;IAEtB,OAAO,eAAe;EAEvB;EAEAC,SAAS,GAAG;IAEX,MAAMC,WAAW,GAAGN,OAAO,CAAED,MAAM,CAAEF,qBAAqB,CAAE,EAAED,qBAAqB,CAAE;IAErF,OAAOE,kBAAkB,CAAEQ,WAAW,EAAEL,gBAAgB,CAAE;EAE3D;AAED;AAEA,eAAeC,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}