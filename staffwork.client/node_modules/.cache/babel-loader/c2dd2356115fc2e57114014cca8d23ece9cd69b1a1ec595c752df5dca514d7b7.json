{"ast":null,"code":"import { Curve } from '../core/Curve.js';\nimport { Vector2 } from '../../math/Vector2.js';\nclass EllipseCurve extends Curve {\n  constructor() {\n    let aX = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let aY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let xRadius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let yRadius = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    let aStartAngle = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0;\n    let aEndAngle = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : Math.PI * 2;\n    let aClockwise = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    let aRotation = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : 0;\n    super();\n    this.isEllipseCurve = true;\n    this.type = 'EllipseCurve';\n    this.aX = aX;\n    this.aY = aY;\n    this.xRadius = xRadius;\n    this.yRadius = yRadius;\n    this.aStartAngle = aStartAngle;\n    this.aEndAngle = aEndAngle;\n    this.aClockwise = aClockwise;\n    this.aRotation = aRotation;\n  }\n  getPoint(t, optionalTarget) {\n    const point = optionalTarget || new Vector2();\n    const twoPi = Math.PI * 2;\n    let deltaAngle = this.aEndAngle - this.aStartAngle;\n    const samePoints = Math.abs(deltaAngle) < Number.EPSILON;\n\n    // ensures that deltaAngle is 0 .. 2 PI\n    while (deltaAngle < 0) deltaAngle += twoPi;\n    while (deltaAngle > twoPi) deltaAngle -= twoPi;\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n    const angle = this.aStartAngle + t * deltaAngle;\n    let x = this.aX + this.xRadius * Math.cos(angle);\n    let y = this.aY + this.yRadius * Math.sin(angle);\n    if (this.aRotation !== 0) {\n      const cos = Math.cos(this.aRotation);\n      const sin = Math.sin(this.aRotation);\n      const tx = x - this.aX;\n      const ty = y - this.aY;\n\n      // Rotate the point about the center of the ellipse.\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n    return point.set(x, y);\n  }\n  copy(source) {\n    super.copy(source);\n    this.aX = source.aX;\n    this.aY = source.aY;\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n    this.aClockwise = source.aClockwise;\n    this.aRotation = source.aRotation;\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.aX = this.aX;\n    data.aY = this.aY;\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n    data.aClockwise = this.aClockwise;\n    data.aRotation = this.aRotation;\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.aX = json.aX;\n    this.aY = json.aY;\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n    this.aClockwise = json.aClockwise;\n    this.aRotation = json.aRotation;\n    return this;\n  }\n}\nexport { EllipseCurve };","map":{"version":3,"names":["Curve","Vector2","EllipseCurve","constructor","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","Math","PI","aClockwise","aRotation","isEllipseCurve","type","getPoint","t","optionalTarget","point","twoPi","deltaAngle","samePoints","abs","Number","EPSILON","angle","x","cos","y","sin","tx","ty","set","copy","source","toJSON","data","fromJSON","json"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/extras/curves/EllipseCurve.js"],"sourcesContent":["import { Curve } from '../core/Curve.js';\nimport { Vector2 } from '../../math/Vector2.js';\n\nclass EllipseCurve extends Curve {\n\n\tconstructor( aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0 ) {\n\n\t\tsuper();\n\n\t\tthis.isEllipseCurve = true;\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX;\n\t\tthis.aY = aY;\n\n\t\tthis.xRadius = xRadius;\n\t\tthis.yRadius = yRadius;\n\n\t\tthis.aStartAngle = aStartAngle;\n\t\tthis.aEndAngle = aEndAngle;\n\n\t\tthis.aClockwise = aClockwise;\n\n\t\tthis.aRotation = aRotation;\n\n\t}\n\n\tgetPoint( t, optionalTarget ) {\n\n\t\tconst point = optionalTarget || new Vector2();\n\n\t\tconst twoPi = Math.PI * 2;\n\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tconst samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\t\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\tlet x = this.aX + this.xRadius * Math.cos( angle );\n\t\tlet y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tconst cos = Math.cos( this.aRotation );\n\t\t\tconst sin = Math.sin( this.aRotation );\n\n\t\t\tconst tx = x - this.aX;\n\t\t\tconst ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { EllipseCurve };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}