{"ast":null,"code":"import Node from './Node.js';\nclass BypassNode extends Node {\n  constructor(returnNode, callNode) {\n    super();\n    this.isBypassNode = true;\n    this.outputNode = returnNode;\n    this.callNode = callNode;\n  }\n  getNodeType(builder) {\n    return this.outputNode.getNodeType(builder);\n  }\n  generate(builder, output) {\n    const snippet = this.callNode.build(builder, 'void');\n    if (snippet !== '') {\n      builder.addFlowCode(snippet);\n    }\n    return this.outputNode.build(builder, output);\n  }\n}\nexport default BypassNode;","map":{"version":3,"names":["Node","BypassNode","constructor","returnNode","callNode","isBypassNode","outputNode","getNodeType","builder","generate","output","snippet","build","addFlowCode"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/core/BypassNode.js"],"sourcesContent":["import Node from './Node.js';\n\nclass BypassNode extends Node {\n\n\tconstructor( returnNode, callNode ) {\n\n\t\tsuper();\n\n\t\tthis.isBypassNode = true;\n\n\t\tthis.outputNode = returnNode;\n\t\tthis.callNode = callNode;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\treturn this.outputNode.getNodeType( builder );\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst snippet = this.callNode.build( builder, 'void' );\n\n\t\tif ( snippet !== '' ) {\n\n\t\t\tbuilder.addFlowCode( snippet );\n\n\t\t}\n\n\t\treturn this.outputNode.build( builder, output );\n\n\t}\n\n}\n\nexport default BypassNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,WAAW;AAE5B,MAAMC,UAAU,SAASD,IAAI,CAAC;EAE7BE,WAAW,CAAEC,UAAU,EAAEC,QAAQ,EAAG;IAEnC,KAAK,EAAE;IAEP,IAAI,CAACC,YAAY,GAAG,IAAI;IAExB,IAAI,CAACC,UAAU,GAAGH,UAAU;IAC5B,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAEzB;EAEAG,WAAW,CAAEC,OAAO,EAAG;IAEtB,OAAO,IAAI,CAACF,UAAU,CAACC,WAAW,CAAEC,OAAO,CAAE;EAE9C;EAEAC,QAAQ,CAAED,OAAO,EAAEE,MAAM,EAAG;IAE3B,MAAMC,OAAO,GAAG,IAAI,CAACP,QAAQ,CAACQ,KAAK,CAAEJ,OAAO,EAAE,MAAM,CAAE;IAEtD,IAAKG,OAAO,KAAK,EAAE,EAAG;MAErBH,OAAO,CAACK,WAAW,CAAEF,OAAO,CAAE;IAE/B;IAEA,OAAO,IAAI,CAACL,UAAU,CAACM,KAAK,CAAEJ,OAAO,EAAEE,MAAM,CAAE;EAEhD;AAED;AAEA,eAAeT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}