{"ast":null,"code":"import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, sRGBEncoding, LinearEncoding, GLSL3 } from '../../constants.js';\nlet programIdCount = 0;\nfunction handleSource(string, errorLine) {\n  const lines = string.split('\\n');\n  const lines2 = [];\n  const from = Math.max(errorLine - 6, 0);\n  const to = Math.min(errorLine + 6, lines.length);\n  for (let i = from; i < to; i++) {\n    const line = i + 1;\n    lines2.push(`${line === errorLine ? '>' : ' '} ${line}: ${lines[i]}`);\n  }\n  return lines2.join('\\n');\n}\nfunction getEncodingComponents(encoding) {\n  switch (encoding) {\n    case LinearEncoding:\n      return ['Linear', '( value )'];\n    case sRGBEncoding:\n      return ['sRGB', '( value )'];\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n      return ['Linear', '( value )'];\n  }\n}\nfunction getShaderErrors(gl, shader, type) {\n  const status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n  const errors = gl.getShaderInfoLog(shader).trim();\n  if (status && errors === '') return '';\n  const errorMatches = /ERROR: 0:(\\d+)/.exec(errors);\n  if (errorMatches) {\n    // --enable-privileged-webgl-extension\n    // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n    const errorLine = parseInt(errorMatches[1]);\n    return type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource(gl.getShaderSource(shader), errorLine);\n  } else {\n    return errors;\n  }\n}\nfunction getTexelEncodingFunction(functionName, encoding) {\n  const components = getEncodingComponents(encoding);\n  return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n}\nfunction getToneMappingFunction(functionName, toneMapping) {\n  let toneMappingName;\n  switch (toneMapping) {\n    case LinearToneMapping:\n      toneMappingName = 'Linear';\n      break;\n    case ReinhardToneMapping:\n      toneMappingName = 'Reinhard';\n      break;\n    case CineonToneMapping:\n      toneMappingName = 'OptimizedCineon';\n      break;\n    case ACESFilmicToneMapping:\n      toneMappingName = 'ACESFilmic';\n      break;\n    case CustomToneMapping:\n      toneMappingName = 'Custom';\n      break;\n    default:\n      console.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n      toneMappingName = 'Linear';\n  }\n  return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n}\nfunction generateExtensions(parameters) {\n  const chunks = [parameters.extensionDerivatives || !!parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n  return chunks.filter(filterEmptyLine).join('\\n');\n}\nfunction generateDefines(defines) {\n  const chunks = [];\n  for (const name in defines) {\n    const value = defines[name];\n    if (value === false) continue;\n    chunks.push('#define ' + name + ' ' + value);\n  }\n  return chunks.join('\\n');\n}\nfunction fetchAttributeLocations(gl, program) {\n  const attributes = {};\n  const n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  for (let i = 0; i < n; i++) {\n    const info = gl.getActiveAttrib(program, i);\n    const name = info.name;\n    let locationSize = 1;\n    if (info.type === gl.FLOAT_MAT2) locationSize = 2;\n    if (info.type === gl.FLOAT_MAT3) locationSize = 3;\n    if (info.type === gl.FLOAT_MAT4) locationSize = 4;\n\n    // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n    attributes[name] = {\n      type: info.type,\n      location: gl.getAttribLocation(program, name),\n      locationSize: locationSize\n    };\n  }\n  return attributes;\n}\nfunction filterEmptyLine(string) {\n  return string !== '';\n}\nfunction replaceLightNums(string, parameters) {\n  const numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n  return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n}\nfunction replaceClippingPlaneNums(string, parameters) {\n  return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\nfunction resolveIncludes(string) {\n  return string.replace(includePattern, includeReplacer);\n}\nfunction includeReplacer(match, include) {\n  const string = ShaderChunk[include];\n  if (string === undefined) {\n    throw new Error('Can not resolve #include <' + include + '>');\n  }\n  return resolveIncludes(string);\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\nfunction unrollLoops(string) {\n  return string.replace(unrollLoopPattern, loopReplacer);\n}\nfunction loopReplacer(match, start, end, snippet) {\n  let string = '';\n  for (let i = parseInt(start); i < parseInt(end); i++) {\n    string += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n  }\n  return string;\n}\n\n//\n\nfunction generatePrecision(parameters) {\n  let precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n  if (parameters.precision === 'highp') {\n    precisionstring += '\\n#define HIGH_PRECISION';\n  } else if (parameters.precision === 'mediump') {\n    precisionstring += '\\n#define MEDIUM_PRECISION';\n  } else if (parameters.precision === 'lowp') {\n    precisionstring += '\\n#define LOW_PRECISION';\n  }\n  return precisionstring;\n}\nfunction generateShadowMapTypeDefine(parameters) {\n  let shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n  if (parameters.shadowMapType === PCFShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n  } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n  } else if (parameters.shadowMapType === VSMShadowMap) {\n    shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n  }\n  return shadowMapTypeDefine;\n}\nfunction generateEnvMapTypeDefine(parameters) {\n  let envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeReflectionMapping:\n      case CubeRefractionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n        break;\n      case CubeUVReflectionMapping:\n        envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n        break;\n    }\n  }\n  return envMapTypeDefine;\n}\nfunction generateEnvMapModeDefine(parameters) {\n  let envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n  if (parameters.envMap) {\n    switch (parameters.envMapMode) {\n      case CubeRefractionMapping:\n        envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n        break;\n    }\n  }\n  return envMapModeDefine;\n}\nfunction generateEnvMapBlendingDefine(parameters) {\n  let envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n  if (parameters.envMap) {\n    switch (parameters.combine) {\n      case MultiplyOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n        break;\n      case MixOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n        break;\n      case AddOperation:\n        envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n        break;\n    }\n  }\n  return envMapBlendingDefine;\n}\nfunction generateCubeUVSize(parameters) {\n  const imageHeight = parameters.envMapCubeUVHeight;\n  if (imageHeight === null) return null;\n  const maxMip = Math.log2(imageHeight) - 2;\n  const texelHeight = 1.0 / imageHeight;\n  const texelWidth = 1.0 / (3 * Math.max(Math.pow(2, maxMip), 7 * 16));\n  return {\n    texelWidth,\n    texelHeight,\n    maxMip\n  };\n}\nfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n  // TODO Send this event to Three.js DevTools\n  // console.log( 'WebGLProgram', cacheKey );\n\n  const gl = renderer.getContext();\n  const defines = parameters.defines;\n  let vertexShader = parameters.vertexShader;\n  let fragmentShader = parameters.fragmentShader;\n  const shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n  const envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n  const envMapModeDefine = generateEnvMapModeDefine(parameters);\n  const envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n  const envMapCubeUVSize = generateCubeUVSize(parameters);\n  const customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n  const customDefines = generateDefines(defines);\n  const program = gl.createProgram();\n  let prefixVertex, prefixFragment;\n  let versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n  if (parameters.isRawShaderMaterial) {\n    prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n    if (prefixVertex.length > 0) {\n      prefixVertex += '\\n';\n    }\n    prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n    if (prefixFragment.length > 0) {\n      prefixFragment += '\\n';\n    }\n  } else {\n    prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '', parameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.morphColors && parameters.isWebGL2 ? '#define USE_MORPHCOLORS' : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE' : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '', parameters.morphTargetsCount > 0 && parameters.isWebGL2 ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n    prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', envMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '', envMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '', envMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoat ? '#define USE_CLEARCOAT' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.iridescence ? '#define USE_IRIDESCENCE' : '', parameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '', parameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '', parameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.alphaTest ? '#define USE_ALPHATEST' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '', parameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '',\n    // this code is required here because it is used by the toneMapping() function defined below\n    parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.opaque ? '#define OPAQUE' : '', ShaderChunk['encodings_pars_fragment'],\n    // this code is required here because it is used by the various encoding/decoding function defined below\n    getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n  }\n  vertexShader = resolveIncludes(vertexShader);\n  vertexShader = replaceLightNums(vertexShader, parameters);\n  vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n  fragmentShader = resolveIncludes(fragmentShader);\n  fragmentShader = replaceLightNums(fragmentShader, parameters);\n  fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n  vertexShader = unrollLoops(vertexShader);\n  fragmentShader = unrollLoops(fragmentShader);\n  if (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n    // GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n    versionString = '#version 300 es\\n';\n    prefixVertex = ['precision mediump sampler2DArray;', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n    prefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n  }\n  const vertexGlsl = versionString + prefixVertex + vertexShader;\n  const fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n  // console.log( '*VERTEX*', vertexGlsl );\n  // console.log( '*FRAGMENT*', fragmentGlsl );\n\n  const glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n  const glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n  gl.attachShader(program, glVertexShader);\n  gl.attachShader(program, glFragmentShader);\n\n  // Force a particular attribute to index 0.\n\n  if (parameters.index0AttributeName !== undefined) {\n    gl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n  } else if (parameters.morphTargets === true) {\n    // programs with morphTargets displace position out of attribute 0\n    gl.bindAttribLocation(program, 0, 'position');\n  }\n  gl.linkProgram(program);\n\n  // check for link errors\n  if (renderer.debug.checkShaderErrors) {\n    const programLog = gl.getProgramInfoLog(program).trim();\n    const vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n    const fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n    let runnable = true;\n    let haveDiagnostics = true;\n    if (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n      runnable = false;\n      const vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n      const fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n      console.error('THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' + 'VALIDATE_STATUS ' + gl.getProgramParameter(program, gl.VALIDATE_STATUS) + '\\n\\n' + 'Program Info Log: ' + programLog + '\\n' + vertexErrors + '\\n' + fragmentErrors);\n    } else if (programLog !== '') {\n      console.warn('THREE.WebGLProgram: Program Info Log:', programLog);\n    } else if (vertexLog === '' || fragmentLog === '') {\n      haveDiagnostics = false;\n    }\n    if (haveDiagnostics) {\n      this.diagnostics = {\n        runnable: runnable,\n        programLog: programLog,\n        vertexShader: {\n          log: vertexLog,\n          prefix: prefixVertex\n        },\n        fragmentShader: {\n          log: fragmentLog,\n          prefix: prefixFragment\n        }\n      };\n    }\n  }\n\n  // Clean up\n\n  // Crashes in iOS9 and iOS10. #18402\n  // gl.detachShader( program, glVertexShader );\n  // gl.detachShader( program, glFragmentShader );\n\n  gl.deleteShader(glVertexShader);\n  gl.deleteShader(glFragmentShader);\n\n  // set up caching for uniform locations\n\n  let cachedUniforms;\n  this.getUniforms = function () {\n    if (cachedUniforms === undefined) {\n      cachedUniforms = new WebGLUniforms(gl, program);\n    }\n    return cachedUniforms;\n  };\n\n  // set up caching for attribute locations\n\n  let cachedAttributes;\n  this.getAttributes = function () {\n    if (cachedAttributes === undefined) {\n      cachedAttributes = fetchAttributeLocations(gl, program);\n    }\n    return cachedAttributes;\n  };\n\n  // free resource\n\n  this.destroy = function () {\n    bindingStates.releaseStatesOfProgram(this);\n    gl.deleteProgram(program);\n    this.program = undefined;\n  };\n\n  //\n\n  this.name = parameters.shaderName;\n  this.id = programIdCount++;\n  this.cacheKey = cacheKey;\n  this.usedTimes = 1;\n  this.program = program;\n  this.vertexShader = glVertexShader;\n  this.fragmentShader = glFragmentShader;\n  return this;\n}\nexport { WebGLProgram };","map":{"version":3,"names":["WebGLUniforms","WebGLShader","ShaderChunk","NoToneMapping","AddOperation","MixOperation","MultiplyOperation","CubeRefractionMapping","CubeUVReflectionMapping","CubeReflectionMapping","PCFSoftShadowMap","PCFShadowMap","VSMShadowMap","ACESFilmicToneMapping","CineonToneMapping","CustomToneMapping","ReinhardToneMapping","LinearToneMapping","sRGBEncoding","LinearEncoding","GLSL3","programIdCount","handleSource","string","errorLine","lines","split","lines2","from","Math","max","to","min","length","i","line","push","join","getEncodingComponents","encoding","console","warn","getShaderErrors","gl","shader","type","status","getShaderParameter","COMPILE_STATUS","errors","getShaderInfoLog","trim","errorMatches","exec","parseInt","toUpperCase","getShaderSource","getTexelEncodingFunction","functionName","components","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","parameters","chunks","extensionDerivatives","envMapCubeUVHeight","bumpMap","tangentSpaceNormalMap","clearcoatNormalMap","flatShading","shaderID","extensionFragDepth","logarithmicDepthBuffer","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","envMap","transmission","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","defines","name","value","fetchAttributeLocations","program","attributes","n","getProgramParameter","ACTIVE_ATTRIBUTES","info","getActiveAttrib","locationSize","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","location","getAttribLocation","replaceLightNums","numSpotLightCoords","numSpotLightShadows","numSpotLightMaps","numSpotLightShadowsWithMaps","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","match","include","undefined","Error","unrollLoopPattern","unrollLoops","loopReplacer","start","end","snippet","generatePrecision","precisionstring","precision","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","combine","generateCubeUVSize","imageHeight","maxMip","log2","texelHeight","texelWidth","pow","WebGLProgram","renderer","cacheKey","bindingStates","getContext","vertexShader","fragmentShader","envMapCubeUVSize","customExtensions","isWebGL2","customDefines","createProgram","prefixVertex","prefixFragment","versionString","glslVersion","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","useFog","fog","fogExp2","map","lightMap","aoMap","emissiveMap","normalMap","objectSpaceNormalMap","clearcoatMap","clearcoatRoughnessMap","iridescenceMap","iridescenceThicknessMap","displacementMap","specularMap","specularIntensityMap","specularColorMap","roughnessMap","metalnessMap","alphaMap","transmissionMap","thicknessMap","sheenColorMap","sheenRoughnessMap","vertexTangents","vertexColors","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","morphTargets","morphNormals","morphColors","morphTargetsCount","morphTextureStride","doubleSided","flipSided","shadowMapEnabled","sizeAttenuation","matcap","clearcoat","iridescence","alphaTest","sheen","decodeVideoTexture","gradientMap","premultipliedAlpha","physicallyCorrectLights","dithering","opaque","outputEncoding","useDepthPacking","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","VERTEX_SHADER","glFragmentShader","FRAGMENT_SHADER","attachShader","index0AttributeName","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","error","getError","VALIDATE_STATUS","diagnostics","log","prefix","deleteShader","cachedUniforms","getUniforms","cachedAttributes","getAttributes","destroy","releaseStatesOfProgram","deleteProgram","id","usedTimes"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLProgram.js"],"sourcesContent":["import { WebGLUniforms } from './WebGLUniforms.js';\nimport { WebGLShader } from './WebGLShader.js';\nimport { ShaderChunk } from '../shaders/ShaderChunk.js';\nimport { NoToneMapping, AddOperation, MixOperation, MultiplyOperation, CubeRefractionMapping, CubeUVReflectionMapping, CubeReflectionMapping, PCFSoftShadowMap, PCFShadowMap, VSMShadowMap, ACESFilmicToneMapping, CineonToneMapping, CustomToneMapping, ReinhardToneMapping, LinearToneMapping, sRGBEncoding, LinearEncoding, GLSL3 } from '../../constants.js';\n\nlet programIdCount = 0;\n\nfunction handleSource( string, errorLine ) {\n\n\tconst lines = string.split( '\\n' );\n\tconst lines2 = [];\n\n\tconst from = Math.max( errorLine - 6, 0 );\n\tconst to = Math.min( errorLine + 6, lines.length );\n\n\tfor ( let i = from; i < to; i ++ ) {\n\n\t\tconst line = i + 1;\n\t\tlines2.push( `${line === errorLine ? '>' : ' '} ${line}: ${lines[ i ]}` );\n\n\t}\n\n\treturn lines2.join( '\\n' );\n\n}\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported encoding:', encoding );\n\t\t\treturn [ 'Linear', '( value )' ];\n\n\t}\n\n}\n\nfunction getShaderErrors( gl, shader, type ) {\n\n\tconst status = gl.getShaderParameter( shader, gl.COMPILE_STATUS );\n\tconst errors = gl.getShaderInfoLog( shader ).trim();\n\n\tif ( status && errors === '' ) return '';\n\n\tconst errorMatches = /ERROR: 0:(\\d+)/.exec( errors );\n\tif ( errorMatches ) {\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst errorLine = parseInt( errorMatches[ 1 ] );\n\t\treturn type.toUpperCase() + '\\n\\n' + errors + '\\n\\n' + handleSource( gl.getShaderSource( shader ), errorLine );\n\n\t} else {\n\n\t\treturn errors;\n\n\t}\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tconst components = getEncodingComponents( encoding );\n\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tlet toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = 'Linear';\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = 'Reinhard';\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\tbreak;\n\n\t\tcase ACESFilmicToneMapping:\n\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\tbreak;\n\n\t\tcase CustomToneMapping:\n\t\t\ttoneMappingName = 'Custom';\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Unsupported toneMapping:', toneMapping );\n\t\t\ttoneMappingName = 'Linear';\n\n\t}\n\n\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n}\n\nfunction generateExtensions( parameters ) {\n\n\tconst chunks = [\n\t\t( parameters.extensionDerivatives || !! parameters.envMapCubeUVHeight || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( parameters.extensionFragDepth || parameters.logarithmicDepthBuffer ) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission ) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tconst chunks = [];\n\n\tfor ( const name in defines ) {\n\n\t\tconst value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tconst attributes = {};\n\n\tconst n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( let i = 0; i < n; i ++ ) {\n\n\t\tconst info = gl.getActiveAttrib( program, i );\n\t\tconst name = info.name;\n\n\t\tlet locationSize = 1;\n\t\tif ( info.type === gl.FLOAT_MAT2 ) locationSize = 2;\n\t\tif ( info.type === gl.FLOAT_MAT3 ) locationSize = 3;\n\t\tif ( info.type === gl.FLOAT_MAT4 ) locationSize = 4;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = {\n\t\t\ttype: info.type,\n\t\t\tlocation: gl.getAttribLocation( program, name ),\n\t\t\tlocationSize: locationSize\n\t\t};\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\tconst numSpotLightCoords = parameters.numSpotLightShadows + parameters.numSpotLightMaps - parameters.numSpotLightShadowsWithMaps;\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_SPOT_LIGHT_MAPS/g, parameters.numSpotLightMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_COORDS/g, numSpotLightCoords )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g, parameters.numSpotLightShadowsWithMaps )\n\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n}\n\nfunction replaceClippingPlaneNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n}\n\n// Resolve Includes\n\nconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\nfunction resolveIncludes( string ) {\n\n\treturn string.replace( includePattern, includeReplacer );\n\n}\n\nfunction includeReplacer( match, include ) {\n\n\tconst string = ShaderChunk[ include ];\n\n\tif ( string === undefined ) {\n\n\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t}\n\n\treturn resolveIncludes( string );\n\n}\n\n// Unroll Loops\n\nconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\nfunction unrollLoops( string ) {\n\n\treturn string.replace( unrollLoopPattern, loopReplacer );\n\n}\n\nfunction loopReplacer( match, start, end, snippet ) {\n\n\tlet string = '';\n\n\tfor ( let i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\tstring += snippet\n\t\t\t.replace( /\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]' )\n\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t}\n\n\treturn string;\n\n}\n\n//\n\nfunction generatePrecision( parameters ) {\n\n\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\tif ( parameters.precision === 'highp' ) {\n\n\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\n\t} else if ( parameters.precision === 'mediump' ) {\n\n\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\n\t} else if ( parameters.precision === 'lowp' ) {\n\n\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\n\t}\n\n\treturn precisionstring;\n\n}\n\nfunction generateShadowMapTypeDefine( parameters ) {\n\n\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t}\n\n\treturn shadowMapTypeDefine;\n\n}\n\nfunction generateEnvMapTypeDefine( parameters ) {\n\n\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapTypeDefine;\n\n}\n\nfunction generateEnvMapModeDefine( parameters ) {\n\n\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\tcase CubeRefractionMapping:\n\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapModeDefine;\n\n}\n\nfunction generateEnvMapBlendingDefine( parameters ) {\n\n\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( parameters.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\treturn envMapBlendingDefine;\n\n}\n\nfunction generateCubeUVSize( parameters ) {\n\n\tconst imageHeight = parameters.envMapCubeUVHeight;\n\n\tif ( imageHeight === null ) return null;\n\n\tconst maxMip = Math.log2( imageHeight ) - 2;\n\n\tconst texelHeight = 1.0 / imageHeight;\n\n\tconst texelWidth = 1.0 / ( 3 * Math.max( Math.pow( 2, maxMip ), 7 * 16 ) );\n\n\treturn { texelWidth, texelHeight, maxMip };\n\n}\n\nfunction WebGLProgram( renderer, cacheKey, parameters, bindingStates ) {\n\n\t// TODO Send this event to Three.js DevTools\n\t// console.log( 'WebGLProgram', cacheKey );\n\n\tconst gl = renderer.getContext();\n\n\tconst defines = parameters.defines;\n\n\tlet vertexShader = parameters.vertexShader;\n\tlet fragmentShader = parameters.fragmentShader;\n\n\tconst shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\tconst envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\tconst envMapModeDefine = generateEnvMapModeDefine( parameters );\n\tconst envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\tconst envMapCubeUVSize = generateCubeUVSize( parameters );\n\n\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions( parameters );\n\n\tconst customDefines = generateDefines( defines );\n\n\tconst program = gl.createProgram();\n\n\tlet prefixVertex, prefixFragment;\n\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\tif ( parameters.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\tparameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '',\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t( parameters.morphColors && parameters.isWebGL2 ) ? '#define USE_MORPHCOLORS' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE' : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_TEXTURE_STRIDE ' + parameters.morphTextureStride : '',\n\t\t\t( parameters.morphTargetsCount > 0 && parameters.isWebGL2 ) ? '#define MORPHTARGETS_COUNT ' + parameters.morphTargetsCount : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t'\tattribute mat4 instanceMatrix;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_INSTANCING_COLOR',\n\n\t\t\t'\tattribute vec3 instanceColor;',\n\n\t\t\t'#endif',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if defined( USE_COLOR_ALPHA )',\n\n\t\t\t'\tattribute vec4 color;',\n\n\t\t\t'#elif defined( USE_COLOR )',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t'#define SHADER_NAME ' + parameters.shaderName,\n\n\t\t\tcustomDefines,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_WIDTH ' + envMapCubeUVSize.texelWidth : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_TEXEL_HEIGHT ' + envMapCubeUVSize.texelHeight : '',\n\t\t\tenvMapCubeUVSize ? '#define CUBEUV_MAX_MIP ' + envMapCubeUVSize.maxMip + '.0' : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\tparameters.clearcoat ? '#define USE_CLEARCOAT' : '',\n\t\t\tparameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '',\n\t\t\tparameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '',\n\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\n\t\t\tparameters.iridescence ? '#define USE_IRIDESCENCE' : '',\n\t\t\tparameters.iridescenceMap ? '#define USE_IRIDESCENCEMAP' : '',\n\t\t\tparameters.iridescenceThicknessMap ? '#define USE_IRIDESCENCE_THICKNESSMAP' : '',\n\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.specularIntensityMap ? '#define USE_SPECULARINTENSITYMAP' : '',\n\t\t\tparameters.specularColorMap ? '#define USE_SPECULARCOLORMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.alphaTest ? '#define USE_ALPHATEST' : '',\n\n\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\t\t\tparameters.sheenColorMap ? '#define USE_SHEENCOLORMAP' : '',\n\t\t\tparameters.sheenRoughnessMap ? '#define USE_SHEENROUGHNESSMAP' : '',\n\n\t\t\tparameters.transmission ? '#define USE_TRANSMISSION' : '',\n\t\t\tparameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '',\n\t\t\tparameters.thicknessMap ? '#define USE_THICKNESSMAP' : '',\n\n\t\t\tparameters.decodeVideoTexture ? '#define DECODE_VIDEO_TEXTURE' : '',\n\n\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\tparameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '',\n\t\t\tparameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '',\n\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t( parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\t\t\tparameters.opaque ? '#define OPAQUE' : '',\n\n\t\t\tShaderChunk[ 'encodings_pars_fragment' ], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tgetTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ),\n\n\t\t\tparameters.useDepthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = resolveIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\tfragmentShader = resolveIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\tvertexShader = unrollLoops( vertexShader );\n\tfragmentShader = unrollLoops( fragmentShader );\n\n\tif ( parameters.isWebGL2 && parameters.isRawShaderMaterial !== true ) {\n\n\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\n\t\tversionString = '#version 300 es\\n';\n\n\t\tprefixVertex = [\n\t\t\t'precision mediump sampler2DArray;',\n\t\t\t'#define attribute in',\n\t\t\t'#define varying out',\n\t\t\t'#define texture2D texture'\n\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\tprefixFragment = [\n\t\t\t'#define varying in',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : 'layout(location = 0) out highp vec4 pc_fragColor;',\n\t\t\t( parameters.glslVersion === GLSL3 ) ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t'#define texture2D texture',\n\t\t\t'#define textureCube texture',\n\t\t\t'#define texture2DProj textureProj',\n\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t}\n\n\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tconst glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tconst glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( parameters.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, parameters.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\t// check for link errors\n\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\tconst programLog = gl.getProgramInfoLog( program ).trim();\n\t\tconst vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\tconst fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\tlet runnable = true;\n\t\tlet haveDiagnostics = true;\n\n\t\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\t\trunnable = false;\n\n\t\t\tconst vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\tconst fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\tconsole.error(\n\t\t\t\t'THREE.WebGLProgram: Shader Error ' + gl.getError() + ' - ' +\n\t\t\t\t'VALIDATE_STATUS ' + gl.getProgramParameter( program, gl.VALIDATE_STATUS ) + '\\n\\n' +\n\t\t\t\t'Program Info Log: ' + programLog + '\\n' +\n\t\t\t\tvertexErrors + '\\n' +\n\t\t\t\tfragmentErrors\n\t\t\t);\n\n\t\t} else if ( programLog !== '' ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLProgram: Program Info Log:', programLog );\n\n\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\thaveDiagnostics = false;\n\n\t\t}\n\n\t\tif ( haveDiagnostics ) {\n\n\t\t\tthis.diagnostics = {\n\n\t\t\t\trunnable: runnable,\n\n\t\t\t\tprogramLog: programLog,\n\n\t\t\t\tvertexShader: {\n\n\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t},\n\n\t\t\t\tfragmentShader: {\n\n\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t}\n\n\t// Clean up\n\n\t// Crashes in iOS9 and iOS10. #18402\n\t// gl.detachShader( program, glVertexShader );\n\t// gl.detachShader( program, glFragmentShader );\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tlet cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tlet cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tbindingStates.releaseStatesOfProgram( this );\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t//\n\n\tthis.name = parameters.shaderName;\n\tthis.id = programIdCount ++;\n\tthis.cacheKey = cacheKey;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\nexport { WebGLProgram };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}