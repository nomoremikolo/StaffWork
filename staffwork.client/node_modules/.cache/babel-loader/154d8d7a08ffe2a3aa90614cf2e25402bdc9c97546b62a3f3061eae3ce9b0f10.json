{"ast":null,"code":"import { WebGLRenderTarget } from './WebGLRenderTarget.js';\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n  constructor() {\n    let width = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    let height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    let count = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super(width, height, options);\n    this.isWebGLMultipleRenderTargets = true;\n    const texture = this.texture;\n    this.texture = [];\n    for (let i = 0; i < count; i++) {\n      this.texture[i] = texture.clone();\n      this.texture[i].isRenderTargetTexture = true;\n    }\n  }\n  setSize(width, height) {\n    let depth = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    if (this.width !== width || this.height !== height || this.depth !== depth) {\n      this.width = width;\n      this.height = height;\n      this.depth = depth;\n      for (let i = 0, il = this.texture.length; i < il; i++) {\n        this.texture[i].image.width = width;\n        this.texture[i].image.height = height;\n        this.texture[i].image.depth = depth;\n      }\n      this.dispose();\n    }\n    this.viewport.set(0, 0, width, height);\n    this.scissor.set(0, 0, width, height);\n    return this;\n  }\n  copy(source) {\n    this.dispose();\n    this.width = source.width;\n    this.height = source.height;\n    this.depth = source.depth;\n    this.viewport.set(0, 0, this.width, this.height);\n    this.scissor.set(0, 0, this.width, this.height);\n    this.depthBuffer = source.depthBuffer;\n    this.stencilBuffer = source.stencilBuffer;\n    if (source.depthTexture !== null) this.depthTexture = source.depthTexture.clone();\n    this.texture.length = 0;\n    for (let i = 0, il = source.texture.length; i < il; i++) {\n      this.texture[i] = source.texture[i].clone();\n      this.texture[i].isRenderTargetTexture = true;\n    }\n    return this;\n  }\n}\nexport { WebGLMultipleRenderTargets };","map":{"version":3,"names":["WebGLRenderTarget","WebGLMultipleRenderTargets","constructor","width","height","count","options","isWebGLMultipleRenderTargets","texture","i","clone","isRenderTargetTexture","setSize","depth","il","length","image","dispose","viewport","set","scissor","copy","source","depthBuffer","stencilBuffer","depthTexture"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/WebGLMultipleRenderTargets.js"],"sourcesContent":["import { WebGLRenderTarget } from './WebGLRenderTarget.js';\n\nclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\n\tconstructor( width = 1, height = 1, count = 1, options = {} ) {\n\n\t\tsuper( width, height, options );\n\n\t\tthis.isWebGLMultipleRenderTargets = true;\n\n\t\tconst texture = this.texture;\n\n\t\tthis.texture = [];\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tthis.texture[ i ] = texture.clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t}\n\n\tsetSize( width, height, depth = 1 ) {\n\n\t\tif ( this.width !== width || this.height !== height || this.depth !== depth ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = depth;\n\n\t\t\tfor ( let i = 0, il = this.texture.length; i < il; i ++ ) {\n\n\t\t\t\tthis.texture[ i ].image.width = width;\n\t\t\t\tthis.texture[ i ].image.height = height;\n\t\t\t\tthis.texture[ i ].image.depth = depth;\n\n\t\t\t}\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\treturn this;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.dispose();\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\t\tthis.depth = source.depth;\n\n\t\tthis.viewport.set( 0, 0, this.width, this.height );\n\t\tthis.scissor.set( 0, 0, this.width, this.height );\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\n\t\tif ( source.depthTexture !== null ) this.depthTexture = source.depthTexture.clone();\n\n\t\tthis.texture.length = 0;\n\n\t\tfor ( let i = 0, il = source.texture.length; i < il; i ++ ) {\n\n\t\t\tthis.texture[ i ] = source.texture[ i ].clone();\n\t\t\tthis.texture[ i ].isRenderTargetTexture = true;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { WebGLMultipleRenderTargets };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}