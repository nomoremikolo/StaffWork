{"ast":null,"code":"class Vector4 {\n  constructor() {\n    let x = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    let z = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    let w = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    Vector4.prototype.isVector4 = true;\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n  }\n  get width() {\n    return this.z;\n  }\n  set width(value) {\n    this.z = value;\n  }\n  get height() {\n    return this.w;\n  }\n  set height(value) {\n    this.w = value;\n  }\n  set(x, y, z, w) {\n    this.x = x;\n    this.y = y;\n    this.z = z;\n    this.w = w;\n    return this;\n  }\n  setScalar(scalar) {\n    this.x = scalar;\n    this.y = scalar;\n    this.z = scalar;\n    this.w = scalar;\n    return this;\n  }\n  setX(x) {\n    this.x = x;\n    return this;\n  }\n  setY(y) {\n    this.y = y;\n    return this;\n  }\n  setZ(z) {\n    this.z = z;\n    return this;\n  }\n  setW(w) {\n    this.w = w;\n    return this;\n  }\n  setComponent(index, value) {\n    switch (index) {\n      case 0:\n        this.x = value;\n        break;\n      case 1:\n        this.y = value;\n        break;\n      case 2:\n        this.z = value;\n        break;\n      case 3:\n        this.w = value;\n        break;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n    return this;\n  }\n  getComponent(index) {\n    switch (index) {\n      case 0:\n        return this.x;\n      case 1:\n        return this.y;\n      case 2:\n        return this.z;\n      case 3:\n        return this.w;\n      default:\n        throw new Error('index is out of range: ' + index);\n    }\n  }\n  clone() {\n    return new this.constructor(this.x, this.y, this.z, this.w);\n  }\n  copy(v) {\n    this.x = v.x;\n    this.y = v.y;\n    this.z = v.z;\n    this.w = v.w !== undefined ? v.w : 1;\n    return this;\n  }\n  add(v) {\n    this.x += v.x;\n    this.y += v.y;\n    this.z += v.z;\n    this.w += v.w;\n    return this;\n  }\n  addScalar(s) {\n    this.x += s;\n    this.y += s;\n    this.z += s;\n    this.w += s;\n    return this;\n  }\n  addVectors(a, b) {\n    this.x = a.x + b.x;\n    this.y = a.y + b.y;\n    this.z = a.z + b.z;\n    this.w = a.w + b.w;\n    return this;\n  }\n  addScaledVector(v, s) {\n    this.x += v.x * s;\n    this.y += v.y * s;\n    this.z += v.z * s;\n    this.w += v.w * s;\n    return this;\n  }\n  sub(v) {\n    this.x -= v.x;\n    this.y -= v.y;\n    this.z -= v.z;\n    this.w -= v.w;\n    return this;\n  }\n  subScalar(s) {\n    this.x -= s;\n    this.y -= s;\n    this.z -= s;\n    this.w -= s;\n    return this;\n  }\n  subVectors(a, b) {\n    this.x = a.x - b.x;\n    this.y = a.y - b.y;\n    this.z = a.z - b.z;\n    this.w = a.w - b.w;\n    return this;\n  }\n  multiply(v) {\n    this.x *= v.x;\n    this.y *= v.y;\n    this.z *= v.z;\n    this.w *= v.w;\n    return this;\n  }\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n    this.z *= scalar;\n    this.w *= scalar;\n    return this;\n  }\n  applyMatrix4(m) {\n    const x = this.x,\n      y = this.y,\n      z = this.z,\n      w = this.w;\n    const e = m.elements;\n    this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n    this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n    this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n    this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n    return this;\n  }\n  divideScalar(scalar) {\n    return this.multiplyScalar(1 / scalar);\n  }\n  setAxisAngleFromQuaternion(q) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n    // q is assumed to be normalized\n\n    this.w = 2 * Math.acos(q.w);\n    const s = Math.sqrt(1 - q.w * q.w);\n    if (s < 0.0001) {\n      this.x = 1;\n      this.y = 0;\n      this.z = 0;\n    } else {\n      this.x = q.x / s;\n      this.y = q.y / s;\n      this.z = q.z / s;\n    }\n    return this;\n  }\n  setAxisAngleFromRotationMatrix(m) {\n    // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n    // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n    let angle, x, y, z; // variables for result\n    const epsilon = 0.01,\n      // margin to allow for rounding errors\n      epsilon2 = 0.1,\n      // margin to distinguish between 0 and 180 degrees\n\n      te = m.elements,\n      m11 = te[0],\n      m12 = te[4],\n      m13 = te[8],\n      m21 = te[1],\n      m22 = te[5],\n      m23 = te[9],\n      m31 = te[2],\n      m32 = te[6],\n      m33 = te[10];\n    if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n      // singularity found\n      // first check for identity matrix which must have +1 for all terms\n      // in leading diagonal and zero in other terms\n\n      if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n        // this singularity is identity matrix so angle = 0\n\n        this.set(1, 0, 0, 0);\n        return this; // zero angle, arbitrary axis\n      }\n\n      // otherwise this singularity is angle = 180\n\n      angle = Math.PI;\n      const xx = (m11 + 1) / 2;\n      const yy = (m22 + 1) / 2;\n      const zz = (m33 + 1) / 2;\n      const xy = (m12 + m21) / 4;\n      const xz = (m13 + m31) / 4;\n      const yz = (m23 + m32) / 4;\n      if (xx > yy && xx > zz) {\n        // m11 is the largest diagonal term\n\n        if (xx < epsilon) {\n          x = 0;\n          y = 0.707106781;\n          z = 0.707106781;\n        } else {\n          x = Math.sqrt(xx);\n          y = xy / x;\n          z = xz / x;\n        }\n      } else if (yy > zz) {\n        // m22 is the largest diagonal term\n\n        if (yy < epsilon) {\n          x = 0.707106781;\n          y = 0;\n          z = 0.707106781;\n        } else {\n          y = Math.sqrt(yy);\n          x = xy / y;\n          z = yz / y;\n        }\n      } else {\n        // m33 is the largest diagonal term so base result on this\n\n        if (zz < epsilon) {\n          x = 0.707106781;\n          y = 0.707106781;\n          z = 0;\n        } else {\n          z = Math.sqrt(zz);\n          x = xz / z;\n          y = yz / z;\n        }\n      }\n      this.set(x, y, z, angle);\n      return this; // return 180 deg rotation\n    }\n\n    // as we have reached here there are no singularities so we can handle normally\n\n    let s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n    if (Math.abs(s) < 0.001) s = 1;\n\n    // prevent divide by zero, should not happen if matrix is orthogonal and should be\n    // caught by singularity test above, but I've left it in just in case\n\n    this.x = (m32 - m23) / s;\n    this.y = (m13 - m31) / s;\n    this.z = (m21 - m12) / s;\n    this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n    return this;\n  }\n  min(v) {\n    this.x = Math.min(this.x, v.x);\n    this.y = Math.min(this.y, v.y);\n    this.z = Math.min(this.z, v.z);\n    this.w = Math.min(this.w, v.w);\n    return this;\n  }\n  max(v) {\n    this.x = Math.max(this.x, v.x);\n    this.y = Math.max(this.y, v.y);\n    this.z = Math.max(this.z, v.z);\n    this.w = Math.max(this.w, v.w);\n    return this;\n  }\n  clamp(min, max) {\n    // assumes min < max, componentwise\n\n    this.x = Math.max(min.x, Math.min(max.x, this.x));\n    this.y = Math.max(min.y, Math.min(max.y, this.y));\n    this.z = Math.max(min.z, Math.min(max.z, this.z));\n    this.w = Math.max(min.w, Math.min(max.w, this.w));\n    return this;\n  }\n  clampScalar(minVal, maxVal) {\n    this.x = Math.max(minVal, Math.min(maxVal, this.x));\n    this.y = Math.max(minVal, Math.min(maxVal, this.y));\n    this.z = Math.max(minVal, Math.min(maxVal, this.z));\n    this.w = Math.max(minVal, Math.min(maxVal, this.w));\n    return this;\n  }\n  clampLength(min, max) {\n    const length = this.length();\n    return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n  }\n  floor() {\n    this.x = Math.floor(this.x);\n    this.y = Math.floor(this.y);\n    this.z = Math.floor(this.z);\n    this.w = Math.floor(this.w);\n    return this;\n  }\n  ceil() {\n    this.x = Math.ceil(this.x);\n    this.y = Math.ceil(this.y);\n    this.z = Math.ceil(this.z);\n    this.w = Math.ceil(this.w);\n    return this;\n  }\n  round() {\n    this.x = Math.round(this.x);\n    this.y = Math.round(this.y);\n    this.z = Math.round(this.z);\n    this.w = Math.round(this.w);\n    return this;\n  }\n  roundToZero() {\n    this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n    this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n    this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n    this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n    return this;\n  }\n  negate() {\n    this.x = -this.x;\n    this.y = -this.y;\n    this.z = -this.z;\n    this.w = -this.w;\n    return this;\n  }\n  dot(v) {\n    return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n  }\n  lengthSq() {\n    return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n  }\n  length() {\n    return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n  }\n  manhattanLength() {\n    return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n  }\n  normalize() {\n    return this.divideScalar(this.length() || 1);\n  }\n  setLength(length) {\n    return this.normalize().multiplyScalar(length);\n  }\n  lerp(v, alpha) {\n    this.x += (v.x - this.x) * alpha;\n    this.y += (v.y - this.y) * alpha;\n    this.z += (v.z - this.z) * alpha;\n    this.w += (v.w - this.w) * alpha;\n    return this;\n  }\n  lerpVectors(v1, v2, alpha) {\n    this.x = v1.x + (v2.x - v1.x) * alpha;\n    this.y = v1.y + (v2.y - v1.y) * alpha;\n    this.z = v1.z + (v2.z - v1.z) * alpha;\n    this.w = v1.w + (v2.w - v1.w) * alpha;\n    return this;\n  }\n  equals(v) {\n    return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n  }\n  fromArray(array) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    this.x = array[offset];\n    this.y = array[offset + 1];\n    this.z = array[offset + 2];\n    this.w = array[offset + 3];\n    return this;\n  }\n  toArray() {\n    let array = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    array[offset] = this.x;\n    array[offset + 1] = this.y;\n    array[offset + 2] = this.z;\n    array[offset + 3] = this.w;\n    return array;\n  }\n  fromBufferAttribute(attribute, index) {\n    this.x = attribute.getX(index);\n    this.y = attribute.getY(index);\n    this.z = attribute.getZ(index);\n    this.w = attribute.getW(index);\n    return this;\n  }\n  random() {\n    this.x = Math.random();\n    this.y = Math.random();\n    this.z = Math.random();\n    this.w = Math.random();\n    return this;\n  }\n  *[Symbol.iterator]() {\n    yield this.x;\n    yield this.y;\n    yield this.z;\n    yield this.w;\n  }\n}\nexport { Vector4 };","map":{"version":3,"names":["Vector4","constructor","x","y","z","w","prototype","isVector4","width","value","height","set","setScalar","scalar","setX","setY","setZ","setW","setComponent","index","Error","getComponent","clone","copy","v","undefined","add","addScalar","s","addVectors","a","b","addScaledVector","sub","subScalar","subVectors","multiply","multiplyScalar","applyMatrix4","m","e","elements","divideScalar","setAxisAngleFromQuaternion","q","Math","acos","sqrt","setAxisAngleFromRotationMatrix","angle","epsilon","epsilon2","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","abs","PI","xx","yy","zz","xy","xz","yz","min","max","clamp","clampScalar","minVal","maxVal","clampLength","length","floor","ceil","round","roundToZero","negate","dot","lengthSq","manhattanLength","normalize","setLength","lerp","alpha","lerpVectors","v1","v2","equals","fromArray","array","offset","toArray","fromBufferAttribute","attribute","getX","getY","getZ","getW","random","Symbol","iterator"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/math/Vector4.js"],"sourcesContent":["class Vector4 {\n\n\tconstructor( x = 0, y = 0, z = 0, w = 1 ) {\n\n\t\tVector4.prototype.isVector4 = true;\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t}\n\n\tget width() {\n\n\t\treturn this.z;\n\n\t}\n\n\tset width( value ) {\n\n\t\tthis.z = value;\n\n\t}\n\n\tget height() {\n\n\t\treturn this.w;\n\n\t}\n\n\tset height( value ) {\n\n\t\tthis.w = value;\n\n\t}\n\n\tset( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetScalar( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t}\n\n\tsetX( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t}\n\n\tsetY( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t}\n\n\tsetZ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t}\n\n\tsetW( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t}\n\n\tsetComponent( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tgetComponent( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t}\n\n\tcopy( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t}\n\n\tadd( v ) {\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScalar( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t}\n\n\taddVectors( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t}\n\n\taddScaledVector( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t}\n\n\tsub( v ) {\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tsubScalar( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t}\n\n\tsubVectors( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiply( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\t\tthis.w *= v.w;\n\n\t\treturn this;\n\n\t}\n\n\tmultiplyScalar( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t}\n\n\tapplyMatrix4( m ) {\n\n\t\tconst x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tconst e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t}\n\n\tdivideScalar( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t}\n\n\tsetAxisAngleFromQuaternion( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tconst s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tsetAxisAngleFromRotationMatrix( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tlet angle, x, y, z; // variables for result\n\t\tconst epsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tconst xx = ( m11 + 1 ) / 2;\n\t\t\tconst yy = ( m22 + 1 ) / 2;\n\t\t\tconst zz = ( m33 + 1 ) / 2;\n\t\t\tconst xy = ( m12 + m21 ) / 4;\n\t\t\tconst xz = ( m13 + m31 ) / 4;\n\t\t\tconst yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tlet s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t}\n\n\tmin( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tmax( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t}\n\n\tclamp( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampScalar( minVal, maxVal ) {\n\n\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\treturn this;\n\n\t}\n\n\tclampLength( min, max ) {\n\n\t\tconst length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t}\n\n\tfloor() {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tceil() {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tround() {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t}\n\n\troundToZero() {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t}\n\n\tnegate() {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t}\n\n\tdot( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t}\n\n\tlengthSq() {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t}\n\n\tlength() {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t}\n\n\tmanhattanLength() {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t}\n\n\tnormalize() {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t}\n\n\tsetLength( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t}\n\n\tlerp( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tlerpVectors( v1, v2, alpha ) {\n\n\t\tthis.x = v1.x + ( v2.x - v1.x ) * alpha;\n\t\tthis.y = v1.y + ( v2.y - v1.y ) * alpha;\n\t\tthis.z = v1.z + ( v2.z - v1.z ) * alpha;\n\t\tthis.w = v1.w + ( v2.w - v1.w ) * alpha;\n\n\t\treturn this;\n\n\t}\n\n\tequals( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t}\n\n\tfromArray( array, offset = 0 ) {\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t}\n\n\ttoArray( array = [], offset = 0 ) {\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t}\n\n\tfromBufferAttribute( attribute, index ) {\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n\trandom() {\n\n\t\tthis.x = Math.random();\n\t\tthis.y = Math.random();\n\t\tthis.z = Math.random();\n\t\tthis.w = Math.random();\n\n\t\treturn this;\n\n\t}\n\n\t*[ Symbol.iterator ]() {\n\n\t\tyield this.x;\n\t\tyield this.y;\n\t\tyield this.z;\n\t\tyield this.w;\n\n\t}\n\n}\n\nexport { Vector4 };\n"],"mappings":"AAAA,MAAMA,OAAO,CAAC;EAEbC,WAAW,GAA+B;IAAA,IAA7BC,CAAC,uEAAG,CAAC;IAAA,IAAEC,CAAC,uEAAG,CAAC;IAAA,IAAEC,CAAC,uEAAG,CAAC;IAAA,IAAEC,CAAC,uEAAG,CAAC;IAEtCL,OAAO,CAACM,SAAS,CAACC,SAAS,GAAG,IAAI;IAElC,IAAI,CAACL,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;EAEX;EAEA,IAAIG,KAAK,GAAG;IAEX,OAAO,IAAI,CAACJ,CAAC;EAEd;EAEA,IAAII,KAAK,CAAEC,KAAK,EAAG;IAElB,IAAI,CAACL,CAAC,GAAGK,KAAK;EAEf;EAEA,IAAIC,MAAM,GAAG;IAEZ,OAAO,IAAI,CAACL,CAAC;EAEd;EAEA,IAAIK,MAAM,CAAED,KAAK,EAAG;IAEnB,IAAI,CAACJ,CAAC,GAAGI,KAAK;EAEf;EAEAE,GAAG,CAAET,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAG;IAEjB,IAAI,CAACH,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IACV,IAAI,CAACC,CAAC,GAAGA,CAAC;IAEV,OAAO,IAAI;EAEZ;EAEAO,SAAS,CAAEC,MAAM,EAAG;IAEnB,IAAI,CAACX,CAAC,GAAGW,MAAM;IACf,IAAI,CAACV,CAAC,GAAGU,MAAM;IACf,IAAI,CAACT,CAAC,GAAGS,MAAM;IACf,IAAI,CAACR,CAAC,GAAGQ,MAAM;IAEf,OAAO,IAAI;EAEZ;EAEAC,IAAI,CAAEZ,CAAC,EAAG;IAET,IAAI,CAACA,CAAC,GAAGA,CAAC;IAEV,OAAO,IAAI;EAEZ;EAEAa,IAAI,CAAEZ,CAAC,EAAG;IAET,IAAI,CAACA,CAAC,GAAGA,CAAC;IAEV,OAAO,IAAI;EAEZ;EAEAa,IAAI,CAAEZ,CAAC,EAAG;IAET,IAAI,CAACA,CAAC,GAAGA,CAAC;IAEV,OAAO,IAAI;EAEZ;EAEAa,IAAI,CAAEZ,CAAC,EAAG;IAET,IAAI,CAACA,CAAC,GAAGA,CAAC;IAEV,OAAO,IAAI;EAEZ;EAEAa,YAAY,CAAEC,KAAK,EAAEV,KAAK,EAAG;IAE5B,QAASU,KAAK;MAEb,KAAK,CAAC;QAAE,IAAI,CAACjB,CAAC,GAAGO,KAAK;QAAE;MACxB,KAAK,CAAC;QAAE,IAAI,CAACN,CAAC,GAAGM,KAAK;QAAE;MACxB,KAAK,CAAC;QAAE,IAAI,CAACL,CAAC,GAAGK,KAAK;QAAE;MACxB,KAAK,CAAC;QAAE,IAAI,CAACJ,CAAC,GAAGI,KAAK;QAAE;MACxB;QAAS,MAAM,IAAIW,KAAK,CAAE,yBAAyB,GAAGD,KAAK,CAAE;IAAC;IAI/D,OAAO,IAAI;EAEZ;EAEAE,YAAY,CAAEF,KAAK,EAAG;IAErB,QAASA,KAAK;MAEb,KAAK,CAAC;QAAE,OAAO,IAAI,CAACjB,CAAC;MACrB,KAAK,CAAC;QAAE,OAAO,IAAI,CAACC,CAAC;MACrB,KAAK,CAAC;QAAE,OAAO,IAAI,CAACC,CAAC;MACrB,KAAK,CAAC;QAAE,OAAO,IAAI,CAACC,CAAC;MACrB;QAAS,MAAM,IAAIe,KAAK,CAAE,yBAAyB,GAAGD,KAAK,CAAE;IAAC;EAIhE;EAEAG,KAAK,GAAG;IAEP,OAAO,IAAI,IAAI,CAACrB,WAAW,CAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACC,CAAC,CAAE;EAE9D;EAEAkB,IAAI,CAAEC,CAAC,EAAG;IAET,IAAI,CAACtB,CAAC,GAAGsB,CAAC,CAACtB,CAAC;IACZ,IAAI,CAACC,CAAC,GAAGqB,CAAC,CAACrB,CAAC;IACZ,IAAI,CAACC,CAAC,GAAGoB,CAAC,CAACpB,CAAC;IACZ,IAAI,CAACC,CAAC,GAAKmB,CAAC,CAACnB,CAAC,KAAKoB,SAAS,GAAKD,CAAC,CAACnB,CAAC,GAAG,CAAC;IAExC,OAAO,IAAI;EAEZ;EAEAqB,GAAG,CAAEF,CAAC,EAAG;IAER,IAAI,CAACtB,CAAC,IAAIsB,CAAC,CAACtB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIqB,CAAC,CAACrB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIoB,CAAC,CAACpB,CAAC;IACb,IAAI,CAACC,CAAC,IAAImB,CAAC,CAACnB,CAAC;IAEb,OAAO,IAAI;EAEZ;EAEAsB,SAAS,CAAEC,CAAC,EAAG;IAEd,IAAI,CAAC1B,CAAC,IAAI0B,CAAC;IACX,IAAI,CAACzB,CAAC,IAAIyB,CAAC;IACX,IAAI,CAACxB,CAAC,IAAIwB,CAAC;IACX,IAAI,CAACvB,CAAC,IAAIuB,CAAC;IAEX,OAAO,IAAI;EAEZ;EAEAC,UAAU,CAAEC,CAAC,EAAEC,CAAC,EAAG;IAElB,IAAI,CAAC7B,CAAC,GAAG4B,CAAC,CAAC5B,CAAC,GAAG6B,CAAC,CAAC7B,CAAC;IAClB,IAAI,CAACC,CAAC,GAAG2B,CAAC,CAAC3B,CAAC,GAAG4B,CAAC,CAAC5B,CAAC;IAClB,IAAI,CAACC,CAAC,GAAG0B,CAAC,CAAC1B,CAAC,GAAG2B,CAAC,CAAC3B,CAAC;IAClB,IAAI,CAACC,CAAC,GAAGyB,CAAC,CAACzB,CAAC,GAAG0B,CAAC,CAAC1B,CAAC;IAElB,OAAO,IAAI;EAEZ;EAEA2B,eAAe,CAAER,CAAC,EAAEI,CAAC,EAAG;IAEvB,IAAI,CAAC1B,CAAC,IAAIsB,CAAC,CAACtB,CAAC,GAAG0B,CAAC;IACjB,IAAI,CAACzB,CAAC,IAAIqB,CAAC,CAACrB,CAAC,GAAGyB,CAAC;IACjB,IAAI,CAACxB,CAAC,IAAIoB,CAAC,CAACpB,CAAC,GAAGwB,CAAC;IACjB,IAAI,CAACvB,CAAC,IAAImB,CAAC,CAACnB,CAAC,GAAGuB,CAAC;IAEjB,OAAO,IAAI;EAEZ;EAEAK,GAAG,CAAET,CAAC,EAAG;IAER,IAAI,CAACtB,CAAC,IAAIsB,CAAC,CAACtB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIqB,CAAC,CAACrB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIoB,CAAC,CAACpB,CAAC;IACb,IAAI,CAACC,CAAC,IAAImB,CAAC,CAACnB,CAAC;IAEb,OAAO,IAAI;EAEZ;EAEA6B,SAAS,CAAEN,CAAC,EAAG;IAEd,IAAI,CAAC1B,CAAC,IAAI0B,CAAC;IACX,IAAI,CAACzB,CAAC,IAAIyB,CAAC;IACX,IAAI,CAACxB,CAAC,IAAIwB,CAAC;IACX,IAAI,CAACvB,CAAC,IAAIuB,CAAC;IAEX,OAAO,IAAI;EAEZ;EAEAO,UAAU,CAAEL,CAAC,EAAEC,CAAC,EAAG;IAElB,IAAI,CAAC7B,CAAC,GAAG4B,CAAC,CAAC5B,CAAC,GAAG6B,CAAC,CAAC7B,CAAC;IAClB,IAAI,CAACC,CAAC,GAAG2B,CAAC,CAAC3B,CAAC,GAAG4B,CAAC,CAAC5B,CAAC;IAClB,IAAI,CAACC,CAAC,GAAG0B,CAAC,CAAC1B,CAAC,GAAG2B,CAAC,CAAC3B,CAAC;IAClB,IAAI,CAACC,CAAC,GAAGyB,CAAC,CAACzB,CAAC,GAAG0B,CAAC,CAAC1B,CAAC;IAElB,OAAO,IAAI;EAEZ;EAEA+B,QAAQ,CAAEZ,CAAC,EAAG;IAEb,IAAI,CAACtB,CAAC,IAAIsB,CAAC,CAACtB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIqB,CAAC,CAACrB,CAAC;IACb,IAAI,CAACC,CAAC,IAAIoB,CAAC,CAACpB,CAAC;IACb,IAAI,CAACC,CAAC,IAAImB,CAAC,CAACnB,CAAC;IAEb,OAAO,IAAI;EAEZ;EAEAgC,cAAc,CAAExB,MAAM,EAAG;IAExB,IAAI,CAACX,CAAC,IAAIW,MAAM;IAChB,IAAI,CAACV,CAAC,IAAIU,MAAM;IAChB,IAAI,CAACT,CAAC,IAAIS,MAAM;IAChB,IAAI,CAACR,CAAC,IAAIQ,MAAM;IAEhB,OAAO,IAAI;EAEZ;EAEAyB,YAAY,CAAEC,CAAC,EAAG;IAEjB,MAAMrC,CAAC,GAAG,IAAI,CAACA,CAAC;MAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;MAAEC,CAAC,GAAG,IAAI,CAACA,CAAC;IACpD,MAAMmC,CAAC,GAAGD,CAAC,CAACE,QAAQ;IAEpB,IAAI,CAACvC,CAAC,GAAGsC,CAAC,CAAE,CAAC,CAAE,GAAGtC,CAAC,GAAGsC,CAAC,CAAE,CAAC,CAAE,GAAGrC,CAAC,GAAGqC,CAAC,CAAE,CAAC,CAAE,GAAGpC,CAAC,GAAGoC,CAAC,CAAE,EAAE,CAAE,GAAGnC,CAAC;IAC3D,IAAI,CAACF,CAAC,GAAGqC,CAAC,CAAE,CAAC,CAAE,GAAGtC,CAAC,GAAGsC,CAAC,CAAE,CAAC,CAAE,GAAGrC,CAAC,GAAGqC,CAAC,CAAE,CAAC,CAAE,GAAGpC,CAAC,GAAGoC,CAAC,CAAE,EAAE,CAAE,GAAGnC,CAAC;IAC3D,IAAI,CAACD,CAAC,GAAGoC,CAAC,CAAE,CAAC,CAAE,GAAGtC,CAAC,GAAGsC,CAAC,CAAE,CAAC,CAAE,GAAGrC,CAAC,GAAGqC,CAAC,CAAE,EAAE,CAAE,GAAGpC,CAAC,GAAGoC,CAAC,CAAE,EAAE,CAAE,GAAGnC,CAAC;IAC5D,IAAI,CAACA,CAAC,GAAGmC,CAAC,CAAE,CAAC,CAAE,GAAGtC,CAAC,GAAGsC,CAAC,CAAE,CAAC,CAAE,GAAGrC,CAAC,GAAGqC,CAAC,CAAE,EAAE,CAAE,GAAGpC,CAAC,GAAGoC,CAAC,CAAE,EAAE,CAAE,GAAGnC,CAAC;IAE5D,OAAO,IAAI;EAEZ;EAEAqC,YAAY,CAAE7B,MAAM,EAAG;IAEtB,OAAO,IAAI,CAACwB,cAAc,CAAE,CAAC,GAAGxB,MAAM,CAAE;EAEzC;EAEA8B,0BAA0B,CAAEC,CAAC,EAAG;IAE/B;;IAEA;;IAEA,IAAI,CAACvC,CAAC,GAAG,CAAC,GAAGwC,IAAI,CAACC,IAAI,CAAEF,CAAC,CAACvC,CAAC,CAAE;IAE7B,MAAMuB,CAAC,GAAGiB,IAAI,CAACE,IAAI,CAAE,CAAC,GAAGH,CAAC,CAACvC,CAAC,GAAGuC,CAAC,CAACvC,CAAC,CAAE;IAEpC,IAAKuB,CAAC,GAAG,MAAM,EAAG;MAEjB,IAAI,CAAC1B,CAAC,GAAG,CAAC;MACV,IAAI,CAACC,CAAC,GAAG,CAAC;MACV,IAAI,CAACC,CAAC,GAAG,CAAC;IAEX,CAAC,MAAM;MAEN,IAAI,CAACF,CAAC,GAAG0C,CAAC,CAAC1C,CAAC,GAAG0B,CAAC;MAChB,IAAI,CAACzB,CAAC,GAAGyC,CAAC,CAACzC,CAAC,GAAGyB,CAAC;MAChB,IAAI,CAACxB,CAAC,GAAGwC,CAAC,CAACxC,CAAC,GAAGwB,CAAC;IAEjB;IAEA,OAAO,IAAI;EAEZ;EAEAoB,8BAA8B,CAAET,CAAC,EAAG;IAEnC;;IAEA;;IAEA,IAAIU,KAAK,EAAE/C,CAAC,EAAEC,CAAC,EAAEC,CAAC,CAAC,CAAC;IACpB,MAAM8C,OAAO,GAAG,IAAI;MAAG;MACtBC,QAAQ,GAAG,GAAG;MAAG;;MAEjBC,EAAE,GAAGb,CAAC,CAACE,QAAQ;MAEfY,GAAG,GAAGD,EAAE,CAAE,CAAC,CAAE;MAAEE,GAAG,GAAGF,EAAE,CAAE,CAAC,CAAE;MAAEG,GAAG,GAAGH,EAAE,CAAE,CAAC,CAAE;MAC3CI,GAAG,GAAGJ,EAAE,CAAE,CAAC,CAAE;MAAEK,GAAG,GAAGL,EAAE,CAAE,CAAC,CAAE;MAAEM,GAAG,GAAGN,EAAE,CAAE,CAAC,CAAE;MAC3CO,GAAG,GAAGP,EAAE,CAAE,CAAC,CAAE;MAAEQ,GAAG,GAAGR,EAAE,CAAE,CAAC,CAAE;MAAES,GAAG,GAAGT,EAAE,CAAE,EAAE,CAAE;IAE7C,IAAOP,IAAI,CAACiB,GAAG,CAAER,GAAG,GAAGE,GAAG,CAAE,GAAGN,OAAO,IAC/BL,IAAI,CAACiB,GAAG,CAAEP,GAAG,GAAGI,GAAG,CAAE,GAAGT,OAAS,IACjCL,IAAI,CAACiB,GAAG,CAAEJ,GAAG,GAAGE,GAAG,CAAE,GAAGV,OAAS,EAAG;MAE1C;MACA;MACA;;MAEA,IAAOL,IAAI,CAACiB,GAAG,CAAER,GAAG,GAAGE,GAAG,CAAE,GAAGL,QAAQ,IAChCN,IAAI,CAACiB,GAAG,CAAEP,GAAG,GAAGI,GAAG,CAAE,GAAGR,QAAU,IAClCN,IAAI,CAACiB,GAAG,CAAEJ,GAAG,GAAGE,GAAG,CAAE,GAAGT,QAAU,IAClCN,IAAI,CAACiB,GAAG,CAAET,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,CAAE,GAAGV,QAAU,EAAG;QAErD;;QAEA,IAAI,CAACxC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAE;QAEtB,OAAO,IAAI,CAAC,CAAC;MAEd;;MAEA;;MAEAsC,KAAK,GAAGJ,IAAI,CAACkB,EAAE;MAEf,MAAMC,EAAE,GAAG,CAAEX,GAAG,GAAG,CAAC,IAAK,CAAC;MAC1B,MAAMY,EAAE,GAAG,CAAER,GAAG,GAAG,CAAC,IAAK,CAAC;MAC1B,MAAMS,EAAE,GAAG,CAAEL,GAAG,GAAG,CAAC,IAAK,CAAC;MAC1B,MAAMM,EAAE,GAAG,CAAEb,GAAG,GAAGE,GAAG,IAAK,CAAC;MAC5B,MAAMY,EAAE,GAAG,CAAEb,GAAG,GAAGI,GAAG,IAAK,CAAC;MAC5B,MAAMU,EAAE,GAAG,CAAEX,GAAG,GAAGE,GAAG,IAAK,CAAC;MAE5B,IAAOI,EAAE,GAAGC,EAAE,IAAQD,EAAE,GAAGE,EAAI,EAAG;QAEjC;;QAEA,IAAKF,EAAE,GAAGd,OAAO,EAAG;UAEnBhD,CAAC,GAAG,CAAC;UACLC,CAAC,GAAG,WAAW;UACfC,CAAC,GAAG,WAAW;QAEhB,CAAC,MAAM;UAENF,CAAC,GAAG2C,IAAI,CAACE,IAAI,CAAEiB,EAAE,CAAE;UACnB7D,CAAC,GAAGgE,EAAE,GAAGjE,CAAC;UACVE,CAAC,GAAGgE,EAAE,GAAGlE,CAAC;QAEX;MAED,CAAC,MAAM,IAAK+D,EAAE,GAAGC,EAAE,EAAG;QAErB;;QAEA,IAAKD,EAAE,GAAGf,OAAO,EAAG;UAEnBhD,CAAC,GAAG,WAAW;UACfC,CAAC,GAAG,CAAC;UACLC,CAAC,GAAG,WAAW;QAEhB,CAAC,MAAM;UAEND,CAAC,GAAG0C,IAAI,CAACE,IAAI,CAAEkB,EAAE,CAAE;UACnB/D,CAAC,GAAGiE,EAAE,GAAGhE,CAAC;UACVC,CAAC,GAAGiE,EAAE,GAAGlE,CAAC;QAEX;MAED,CAAC,MAAM;QAEN;;QAEA,IAAK+D,EAAE,GAAGhB,OAAO,EAAG;UAEnBhD,CAAC,GAAG,WAAW;UACfC,CAAC,GAAG,WAAW;UACfC,CAAC,GAAG,CAAC;QAEN,CAAC,MAAM;UAENA,CAAC,GAAGyC,IAAI,CAACE,IAAI,CAAEmB,EAAE,CAAE;UACnBhE,CAAC,GAAGkE,EAAE,GAAGhE,CAAC;UACVD,CAAC,GAAGkE,EAAE,GAAGjE,CAAC;QAEX;MAED;MAEA,IAAI,CAACO,GAAG,CAAET,CAAC,EAAEC,CAAC,EAAEC,CAAC,EAAE6C,KAAK,CAAE;MAE1B,OAAO,IAAI,CAAC,CAAC;IAEd;;IAEA;;IAEA,IAAIrB,CAAC,GAAGiB,IAAI,CAACE,IAAI,CAAE,CAAEa,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,GAC/C,CAAEH,GAAG,GAAGI,GAAG,KAAOJ,GAAG,GAAGI,GAAG,CAAE,GAC7B,CAAEH,GAAG,GAAGF,GAAG,KAAOE,GAAG,GAAGF,GAAG,CAAE,CAAE,CAAC,CAAC;;IAElC,IAAKT,IAAI,CAACiB,GAAG,CAAElC,CAAC,CAAE,GAAG,KAAK,EAAGA,CAAC,GAAG,CAAC;;IAElC;IACA;;IAEA,IAAI,CAAC1B,CAAC,GAAG,CAAE0D,GAAG,GAAGF,GAAG,IAAK9B,CAAC;IAC1B,IAAI,CAACzB,CAAC,GAAG,CAAEoD,GAAG,GAAGI,GAAG,IAAK/B,CAAC;IAC1B,IAAI,CAACxB,CAAC,GAAG,CAAEoD,GAAG,GAAGF,GAAG,IAAK1B,CAAC;IAC1B,IAAI,CAACvB,CAAC,GAAGwC,IAAI,CAACC,IAAI,CAAE,CAAEO,GAAG,GAAGI,GAAG,GAAGI,GAAG,GAAG,CAAC,IAAK,CAAC,CAAE;IAEjD,OAAO,IAAI;EAEZ;EAEAS,GAAG,CAAE9C,CAAC,EAAG;IAER,IAAI,CAACtB,CAAC,GAAG2C,IAAI,CAACyB,GAAG,CAAE,IAAI,CAACpE,CAAC,EAAEsB,CAAC,CAACtB,CAAC,CAAE;IAChC,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAACyB,GAAG,CAAE,IAAI,CAACnE,CAAC,EAAEqB,CAAC,CAACrB,CAAC,CAAE;IAChC,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAACyB,GAAG,CAAE,IAAI,CAAClE,CAAC,EAAEoB,CAAC,CAACpB,CAAC,CAAE;IAChC,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAACyB,GAAG,CAAE,IAAI,CAACjE,CAAC,EAAEmB,CAAC,CAACnB,CAAC,CAAE;IAEhC,OAAO,IAAI;EAEZ;EAEAkE,GAAG,CAAE/C,CAAC,EAAG;IAER,IAAI,CAACtB,CAAC,GAAG2C,IAAI,CAAC0B,GAAG,CAAE,IAAI,CAACrE,CAAC,EAAEsB,CAAC,CAACtB,CAAC,CAAE;IAChC,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAAC0B,GAAG,CAAE,IAAI,CAACpE,CAAC,EAAEqB,CAAC,CAACrB,CAAC,CAAE;IAChC,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAAC0B,GAAG,CAAE,IAAI,CAACnE,CAAC,EAAEoB,CAAC,CAACpB,CAAC,CAAE;IAChC,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAAC0B,GAAG,CAAE,IAAI,CAAClE,CAAC,EAAEmB,CAAC,CAACnB,CAAC,CAAE;IAEhC,OAAO,IAAI;EAEZ;EAEAmE,KAAK,CAAEF,GAAG,EAAEC,GAAG,EAAG;IAEjB;;IAEA,IAAI,CAACrE,CAAC,GAAG2C,IAAI,CAAC0B,GAAG,CAAED,GAAG,CAACpE,CAAC,EAAE2C,IAAI,CAACyB,GAAG,CAAEC,GAAG,CAACrE,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;IACrD,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAAC0B,GAAG,CAAED,GAAG,CAACnE,CAAC,EAAE0C,IAAI,CAACyB,GAAG,CAAEC,GAAG,CAACpE,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;IACrD,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAAC0B,GAAG,CAAED,GAAG,CAAClE,CAAC,EAAEyC,IAAI,CAACyB,GAAG,CAAEC,GAAG,CAACnE,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;IACrD,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAAC0B,GAAG,CAAED,GAAG,CAACjE,CAAC,EAAEwC,IAAI,CAACyB,GAAG,CAAEC,GAAG,CAAClE,CAAC,EAAE,IAAI,CAACA,CAAC,CAAE,CAAE;IAErD,OAAO,IAAI;EAEZ;EAEAoE,WAAW,CAAEC,MAAM,EAAEC,MAAM,EAAG;IAE7B,IAAI,CAACzE,CAAC,GAAG2C,IAAI,CAAC0B,GAAG,CAAEG,MAAM,EAAE7B,IAAI,CAACyB,GAAG,CAAEK,MAAM,EAAE,IAAI,CAACzE,CAAC,CAAE,CAAE;IACvD,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAAC0B,GAAG,CAAEG,MAAM,EAAE7B,IAAI,CAACyB,GAAG,CAAEK,MAAM,EAAE,IAAI,CAACxE,CAAC,CAAE,CAAE;IACvD,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAAC0B,GAAG,CAAEG,MAAM,EAAE7B,IAAI,CAACyB,GAAG,CAAEK,MAAM,EAAE,IAAI,CAACvE,CAAC,CAAE,CAAE;IACvD,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAAC0B,GAAG,CAAEG,MAAM,EAAE7B,IAAI,CAACyB,GAAG,CAAEK,MAAM,EAAE,IAAI,CAACtE,CAAC,CAAE,CAAE;IAEvD,OAAO,IAAI;EAEZ;EAEAuE,WAAW,CAAEN,GAAG,EAAEC,GAAG,EAAG;IAEvB,MAAMM,MAAM,GAAG,IAAI,CAACA,MAAM,EAAE;IAE5B,OAAO,IAAI,CAACnC,YAAY,CAAEmC,MAAM,IAAI,CAAC,CAAE,CAACxC,cAAc,CAAEQ,IAAI,CAAC0B,GAAG,CAAED,GAAG,EAAEzB,IAAI,CAACyB,GAAG,CAAEC,GAAG,EAAEM,MAAM,CAAE,CAAE,CAAE;EAEnG;EAEAC,KAAK,GAAG;IAEP,IAAI,CAAC5E,CAAC,GAAG2C,IAAI,CAACiC,KAAK,CAAE,IAAI,CAAC5E,CAAC,CAAE;IAC7B,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAACiC,KAAK,CAAE,IAAI,CAAC3E,CAAC,CAAE;IAC7B,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAACiC,KAAK,CAAE,IAAI,CAAC1E,CAAC,CAAE;IAC7B,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAACiC,KAAK,CAAE,IAAI,CAACzE,CAAC,CAAE;IAE7B,OAAO,IAAI;EAEZ;EAEA0E,IAAI,GAAG;IAEN,IAAI,CAAC7E,CAAC,GAAG2C,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC7E,CAAC,CAAE;IAC5B,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC5E,CAAC,CAAE;IAC5B,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC3E,CAAC,CAAE;IAC5B,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC1E,CAAC,CAAE;IAE5B,OAAO,IAAI;EAEZ;EAEA2E,KAAK,GAAG;IAEP,IAAI,CAAC9E,CAAC,GAAG2C,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAC9E,CAAC,CAAE;IAC7B,IAAI,CAACC,CAAC,GAAG0C,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAC7E,CAAC,CAAE;IAC7B,IAAI,CAACC,CAAC,GAAGyC,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAC5E,CAAC,CAAE;IAC7B,IAAI,CAACC,CAAC,GAAGwC,IAAI,CAACmC,KAAK,CAAE,IAAI,CAAC3E,CAAC,CAAE;IAE7B,OAAO,IAAI;EAEZ;EAEA4E,WAAW,GAAG;IAEb,IAAI,CAAC/E,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAK2C,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC7E,CAAC,CAAE,GAAG2C,IAAI,CAACiC,KAAK,CAAE,IAAI,CAAC5E,CAAC,CAAE;IACpE,IAAI,CAACC,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAK0C,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC5E,CAAC,CAAE,GAAG0C,IAAI,CAACiC,KAAK,CAAE,IAAI,CAAC3E,CAAC,CAAE;IACpE,IAAI,CAACC,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKyC,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC3E,CAAC,CAAE,GAAGyC,IAAI,CAACiC,KAAK,CAAE,IAAI,CAAC1E,CAAC,CAAE;IACpE,IAAI,CAACC,CAAC,GAAK,IAAI,CAACA,CAAC,GAAG,CAAC,GAAKwC,IAAI,CAACkC,IAAI,CAAE,IAAI,CAAC1E,CAAC,CAAE,GAAGwC,IAAI,CAACiC,KAAK,CAAE,IAAI,CAACzE,CAAC,CAAE;IAEpE,OAAO,IAAI;EAEZ;EAEA6E,MAAM,GAAG;IAER,IAAI,CAAChF,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IACjB,IAAI,CAACC,CAAC,GAAG,CAAE,IAAI,CAACA,CAAC;IAEjB,OAAO,IAAI;EAEZ;EAEA8E,GAAG,CAAE3D,CAAC,EAAG;IAER,OAAO,IAAI,CAACtB,CAAC,GAAGsB,CAAC,CAACtB,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGqB,CAAC,CAACrB,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGoB,CAAC,CAACpB,CAAC,GAAG,IAAI,CAACC,CAAC,GAAGmB,CAAC,CAACnB,CAAC;EAEjE;EAEA+E,QAAQ,GAAG;IAEV,OAAO,IAAI,CAAClF,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC;EAE7E;EAEAwE,MAAM,GAAG;IAER,OAAOhC,IAAI,CAACE,IAAI,CAAE,IAAI,CAAC7C,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,GAAG,IAAI,CAACC,CAAC,GAAG,IAAI,CAACA,CAAC,CAAE;EAE1F;EAEAgF,eAAe,GAAG;IAEjB,OAAOxC,IAAI,CAACiB,GAAG,CAAE,IAAI,CAAC5D,CAAC,CAAE,GAAG2C,IAAI,CAACiB,GAAG,CAAE,IAAI,CAAC3D,CAAC,CAAE,GAAG0C,IAAI,CAACiB,GAAG,CAAE,IAAI,CAAC1D,CAAC,CAAE,GAAGyC,IAAI,CAACiB,GAAG,CAAE,IAAI,CAACzD,CAAC,CAAE;EAEzF;EAEAiF,SAAS,GAAG;IAEX,OAAO,IAAI,CAAC5C,YAAY,CAAE,IAAI,CAACmC,MAAM,EAAE,IAAI,CAAC,CAAE;EAE/C;EAEAU,SAAS,CAAEV,MAAM,EAAG;IAEnB,OAAO,IAAI,CAACS,SAAS,EAAE,CAACjD,cAAc,CAAEwC,MAAM,CAAE;EAEjD;EAEAW,IAAI,CAAEhE,CAAC,EAAEiE,KAAK,EAAG;IAEhB,IAAI,CAACvF,CAAC,IAAI,CAAEsB,CAAC,CAACtB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKuF,KAAK;IAClC,IAAI,CAACtF,CAAC,IAAI,CAAEqB,CAAC,CAACrB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKsF,KAAK;IAClC,IAAI,CAACrF,CAAC,IAAI,CAAEoB,CAAC,CAACpB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKqF,KAAK;IAClC,IAAI,CAACpF,CAAC,IAAI,CAAEmB,CAAC,CAACnB,CAAC,GAAG,IAAI,CAACA,CAAC,IAAKoF,KAAK;IAElC,OAAO,IAAI;EAEZ;EAEAC,WAAW,CAAEC,EAAE,EAAEC,EAAE,EAAEH,KAAK,EAAG;IAE5B,IAAI,CAACvF,CAAC,GAAGyF,EAAE,CAACzF,CAAC,GAAG,CAAE0F,EAAE,CAAC1F,CAAC,GAAGyF,EAAE,CAACzF,CAAC,IAAKuF,KAAK;IACvC,IAAI,CAACtF,CAAC,GAAGwF,EAAE,CAACxF,CAAC,GAAG,CAAEyF,EAAE,CAACzF,CAAC,GAAGwF,EAAE,CAACxF,CAAC,IAAKsF,KAAK;IACvC,IAAI,CAACrF,CAAC,GAAGuF,EAAE,CAACvF,CAAC,GAAG,CAAEwF,EAAE,CAACxF,CAAC,GAAGuF,EAAE,CAACvF,CAAC,IAAKqF,KAAK;IACvC,IAAI,CAACpF,CAAC,GAAGsF,EAAE,CAACtF,CAAC,GAAG,CAAEuF,EAAE,CAACvF,CAAC,GAAGsF,EAAE,CAACtF,CAAC,IAAKoF,KAAK;IAEvC,OAAO,IAAI;EAEZ;EAEAI,MAAM,CAAErE,CAAC,EAAG;IAEX,OAAWA,CAAC,CAACtB,CAAC,KAAK,IAAI,CAACA,CAAC,IAAQsB,CAAC,CAACrB,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMqB,CAAC,CAACpB,CAAC,KAAK,IAAI,CAACA,CAAG,IAAMoB,CAAC,CAACnB,CAAC,KAAK,IAAI,CAACA,CAAG;EAE9F;EAEAyF,SAAS,CAAEC,KAAK,EAAe;IAAA,IAAbC,MAAM,uEAAG,CAAC;IAE3B,IAAI,CAAC9F,CAAC,GAAG6F,KAAK,CAAEC,MAAM,CAAE;IACxB,IAAI,CAAC7F,CAAC,GAAG4F,KAAK,CAAEC,MAAM,GAAG,CAAC,CAAE;IAC5B,IAAI,CAAC5F,CAAC,GAAG2F,KAAK,CAAEC,MAAM,GAAG,CAAC,CAAE;IAC5B,IAAI,CAAC3F,CAAC,GAAG0F,KAAK,CAAEC,MAAM,GAAG,CAAC,CAAE;IAE5B,OAAO,IAAI;EAEZ;EAEAC,OAAO,GAA2B;IAAA,IAAzBF,KAAK,uEAAG,EAAE;IAAA,IAAEC,MAAM,uEAAG,CAAC;IAE9BD,KAAK,CAAEC,MAAM,CAAE,GAAG,IAAI,CAAC9F,CAAC;IACxB6F,KAAK,CAAEC,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC7F,CAAC;IAC5B4F,KAAK,CAAEC,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC5F,CAAC;IAC5B2F,KAAK,CAAEC,MAAM,GAAG,CAAC,CAAE,GAAG,IAAI,CAAC3F,CAAC;IAE5B,OAAO0F,KAAK;EAEb;EAEAG,mBAAmB,CAAEC,SAAS,EAAEhF,KAAK,EAAG;IAEvC,IAAI,CAACjB,CAAC,GAAGiG,SAAS,CAACC,IAAI,CAAEjF,KAAK,CAAE;IAChC,IAAI,CAAChB,CAAC,GAAGgG,SAAS,CAACE,IAAI,CAAElF,KAAK,CAAE;IAChC,IAAI,CAACf,CAAC,GAAG+F,SAAS,CAACG,IAAI,CAAEnF,KAAK,CAAE;IAChC,IAAI,CAACd,CAAC,GAAG8F,SAAS,CAACI,IAAI,CAAEpF,KAAK,CAAE;IAEhC,OAAO,IAAI;EAEZ;EAEAqF,MAAM,GAAG;IAER,IAAI,CAACtG,CAAC,GAAG2C,IAAI,CAAC2D,MAAM,EAAE;IACtB,IAAI,CAACrG,CAAC,GAAG0C,IAAI,CAAC2D,MAAM,EAAE;IACtB,IAAI,CAACpG,CAAC,GAAGyC,IAAI,CAAC2D,MAAM,EAAE;IACtB,IAAI,CAACnG,CAAC,GAAGwC,IAAI,CAAC2D,MAAM,EAAE;IAEtB,OAAO,IAAI;EAEZ;EAEA,EAAGC,MAAM,CAACC,QAAQ,IAAK;IAEtB,MAAM,IAAI,CAACxG,CAAC;IACZ,MAAM,IAAI,CAACC,CAAC;IACZ,MAAM,IAAI,CAACC,CAAC;IACZ,MAAM,IAAI,CAACC,CAAC;EAEb;AAED;AAEA,SAASL,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}