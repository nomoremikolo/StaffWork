{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import{authorizationReducer}from\"../reducers/authorizationReducer\";import axios from\"axios\";import{GraphQlEndpoint}from\"../../global_variables\";export var login=function login(username,password){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:graphqlQuery={\"query\":\"\\n            query login{\\n                authorization{\\n                  login(userLogin: {\\n                    username: \\\"\".concat(username,\"\\\"\\n                    password: \\\"\").concat(password,\"\\\"\\n                  }){\\n                    errors\\n                    refreshToken\\n                    statusCode\\n                    token\\n                    user{\\n                      id\\n                      username\\n                      name\\n                      surname\\n                      age\\n                      email\\n                      adress\\n                      role\\n                      isActivated\\n                      permissions\\n                    }\\n                  }\\n                }\\n              }\\n        \")};dispatch(authorizationReducer.actions.LOGIN());_context.prev=2;_context.next=5;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\"},data:graphqlQuery});case 5:response=_context.sent;r=response.data.data.authorization.login;if(r.statusCode===200){dispatch(authorizationReducer.actions.LOGIN_SUCCESS(r.user));localStorage.setItem('accessToken',r.token);}else{dispatch(authorizationReducer.actions.LOGIN_ERROR(r.errors));}_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);dispatch(authorizationReducer.actions.LOGIN_ERROR(_context.t0));localStorage.removeItem('accessToken');case 14:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var refresh_token=function refresh_token(){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;graphqlQuery={\"query\":\"\\n                mutation refresh{\\n                  authorization{\\n                    refreshToken{\\n                      errors\\n                      refreshToken\\n                      statusCode\\n                      token\\n                      user{\\n                        id\\n                        username\\n                        name\\n                        surname\\n                        age\\n                        email\\n                        adress\\n                        role\\n                        isActivated\\n                        permissions\\n                      }\\n                    }\\n                  }\\n                }\\n            \"};dispatch(authorizationReducer.actions.REFRESH_TOKEN());_context2.next=5;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\"},data:graphqlQuery});case 5:response=_context2.sent;r=response.data.data.authorization.refreshToken;if(r.statusCode===200){dispatch(authorizationReducer.actions.REFRESH_TOKEN_SUCCESS(r.user));localStorage.setItem('accessToken',r.token);}else{dispatch(authorizationReducer.actions.REFRESH_TOKEN_ERROR(r.errors));localStorage.removeItem('accessToken');}_context2.next=13;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 13:case\"end\":return _context2.stop();}}},_callee2,null,[[0,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var sign_out=function sign_out(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;graphqlQuery={\"query\":\"\\n                mutation sign_out{\\n                  authorization{\\n                    signOut{\\n                      errors\\n                      statusCode\\n                    }\\n                  }\\n                }\\n            \"};dispatch(authorizationReducer.actions.SIGN_OUT());_context3.next=5;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('accessToken'))},data:graphqlQuery});case 5:response=_context3.sent;r=response.data.data.authorization.signOut;if(r.statusCode===200){dispatch(authorizationReducer.actions.SIGN_OUT_SUCCESS());localStorage.removeItem('accessToken');}else{dispatch(authorizationReducer.actions.SIGN_OUT_ERROR(r.errors));}_context3.next=13;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);console.log(_context3.t0);case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,10]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var sign_in=function sign_in(user){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(dispatch){var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;graphqlQuery={\"query\":\"\\n                mutation reg{\\n                  user{\\n                    signIn(user: {\\n                      name: \\\"\".concat(user.name,\"\\\",\\n                      surname: \\\"\").concat(user.surname,\"\\\",\\n                      age: \").concat(user.age,\",\\n                      adress: \\\"\").concat(user.adress,\"\\\",\\n                      email: \\\"\").concat(user.email,\"\\\"\\n                      password: \\\"\").concat(user.password,\"\\\",\\n                      username: \\\"\").concat(user.username,\"\\\",\\n                    }){\\n                      errors\\n                      statusCode\\n                      refreshToken\\n                      token\\n                      user{\\n                        id\\n                        username\\n                        name\\n                        surname\\n                        age\\n                        email\\n                        adress\\n                        role\\n                        isActivated\\n                        permissions\\n                      }\\n                    }\\n                  }\\n                }\\n\\n            \")};dispatch(authorizationReducer.actions.SIGN_IN());_context4.next=5;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('accessToken'))},data:graphqlQuery});case 5:response=_context4.sent;r=response.data.data.user.signIn;if(r.statusCode===201){dispatch(authorizationReducer.actions.SIGN_IN_SUCCESS(r.user));localStorage.setItem('accessToken',r.token);}else{dispatch(authorizationReducer.actions.SIGN_IN_ERROR(r.errors));localStorage.removeItem('accessToken');}_context4.next=13;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);case 13:case\"end\":return _context4.stop();}}},_callee4,null,[[0,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};","map":{"version":3,"names":["authorizationReducer","axios","GraphQlEndpoint","login","username","password","dispatch","graphqlQuery","actions","LOGIN","url","method","withCredentials","headers","data","response","r","authorization","statusCode","LOGIN_SUCCESS","user","localStorage","setItem","token","LOGIN_ERROR","errors","removeItem","refresh_token","REFRESH_TOKEN","refreshToken","REFRESH_TOKEN_SUCCESS","REFRESH_TOKEN_ERROR","console","log","sign_out","SIGN_OUT","getItem","signOut","SIGN_OUT_SUCCESS","SIGN_OUT_ERROR","sign_in","name","surname","age","adress","email","SIGN_IN","signIn","SIGN_IN_SUCCESS","SIGN_IN_ERROR"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/src/redux/action_creators/authorization_action_creator.ts"],"sourcesContent":["import {AppDispatch} from \"../store\";\r\nimport {authorizationReducer} from \"../reducers/authorizationReducer\";\r\nimport axios from \"axios\";\r\nimport {GraphQlEndpoint} from \"../../global_variables\";\r\nimport {INewUser} from \"../../types/user\";\r\n\r\nexport const login = (username: string, password: string) => async (dispatch: AppDispatch) => {\r\n    const graphqlQuery = {\r\n        \"query\": `\r\n            query login{\r\n                authorization{\r\n                  login(userLogin: {\r\n                    username: \"${username}\"\r\n                    password: \"${password}\"\r\n                  }){\r\n                    errors\r\n                    refreshToken\r\n                    statusCode\r\n                    token\r\n                    user{\r\n                      id\r\n                      username\r\n                      name\r\n                      surname\r\n                      age\r\n                      email\r\n                      adress\r\n                      role\r\n                      isActivated\r\n                      permissions\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n        `,\r\n    };\r\n    dispatch(authorizationReducer.actions.LOGIN())\r\n    try {\r\n        const response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        let r = response.data.data.authorization.login\r\n        if (r.statusCode === 200){\r\n            dispatch(authorizationReducer.actions.LOGIN_SUCCESS(r.user))\r\n            localStorage.setItem('accessToken', r.token)\r\n        }else{\r\n            dispatch(authorizationReducer.actions.LOGIN_ERROR(r.errors))\r\n        }\r\n    } catch (e) {\r\n        dispatch(authorizationReducer.actions.LOGIN_ERROR(e))\r\n        localStorage.removeItem('accessToken')\r\n    }\r\n}\r\n\r\nexport const refresh_token = () => async (dispatch: AppDispatch) => {\r\n    try{\r\n        const graphqlQuery = {\r\n            \"query\": `\r\n                mutation refresh{\r\n                  authorization{\r\n                    refreshToken{\r\n                      errors\r\n                      refreshToken\r\n                      statusCode\r\n                      token\r\n                      user{\r\n                        id\r\n                        username\r\n                        name\r\n                        surname\r\n                        age\r\n                        email\r\n                        adress\r\n                        role\r\n                        isActivated\r\n                        permissions\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n            `\r\n        }\r\n        dispatch(authorizationReducer.actions.REFRESH_TOKEN())\r\n        let response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n\r\n        let r = response.data.data.authorization.refreshToken\r\n        if (r.statusCode === 200){\r\n            dispatch(authorizationReducer.actions.REFRESH_TOKEN_SUCCESS(r.user))\r\n            localStorage.setItem('accessToken', r.token)\r\n        }else{\r\n            dispatch(authorizationReducer.actions.REFRESH_TOKEN_ERROR(r.errors))\r\n            localStorage.removeItem('accessToken')\r\n        }\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const sign_out = () => async (dispatch: AppDispatch) => {\r\n    try{\r\n        const graphqlQuery = {\r\n            \"query\": `\r\n                mutation sign_out{\r\n                  authorization{\r\n                    signOut{\r\n                      errors\r\n                      statusCode\r\n                    }\r\n                  }\r\n                }\r\n            `\r\n        }\r\n        dispatch(authorizationReducer.actions.SIGN_OUT())\r\n        let response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`,\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        let r = response.data.data.authorization.signOut\r\n        if (r.statusCode === 200){\r\n            dispatch(authorizationReducer.actions.SIGN_OUT_SUCCESS())\r\n            localStorage.removeItem('accessToken')\r\n        }else{\r\n            dispatch(authorizationReducer.actions.SIGN_OUT_ERROR(r.errors))\r\n        }\r\n    }\r\n    catch (e){\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const sign_in = (user: INewUser) => async (dispatch: AppDispatch) => {\r\n    try{\r\n        const graphqlQuery = {\r\n            \"query\": `\r\n                mutation reg{\r\n                  user{\r\n                    signIn(user: {\r\n                      name: \"${user.name}\",\r\n                      surname: \"${user.surname}\",\r\n                      age: ${user.age},\r\n                      adress: \"${user.adress}\",\r\n                      email: \"${user.email}\"\r\n                      password: \"${user.password}\",\r\n                      username: \"${user.username}\",\r\n                    }){\r\n                      errors\r\n                      statusCode\r\n                      refreshToken\r\n                      token\r\n                      user{\r\n                        id\r\n                        username\r\n                        name\r\n                        surname\r\n                        age\r\n                        email\r\n                        adress\r\n                        role\r\n                        isActivated\r\n                        permissions\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n\r\n            `\r\n        }\r\n        dispatch(authorizationReducer.actions.SIGN_IN())\r\n        let response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`,\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        let r = response.data.data.user.signIn\r\n        if (r.statusCode === 201){\r\n            dispatch(authorizationReducer.actions.SIGN_IN_SUCCESS(r.user))\r\n            localStorage.setItem('accessToken', r.token)\r\n        }else{\r\n            dispatch(authorizationReducer.actions.SIGN_IN_ERROR(r.errors))\r\n            localStorage.removeItem('accessToken')\r\n        }\r\n    }\r\n    catch (e){\r\n        console.log(e)\r\n    }\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}