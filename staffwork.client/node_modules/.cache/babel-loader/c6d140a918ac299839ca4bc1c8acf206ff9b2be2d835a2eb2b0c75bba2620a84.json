{"ast":null,"code":"import { Light } from './Light.js';\nclass RectAreaLight extends Light {\n  constructor(color, intensity) {\n    let width = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 10;\n    let height = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 10;\n    super(color, intensity);\n    this.isRectAreaLight = true;\n    this.type = 'RectAreaLight';\n    this.width = width;\n    this.height = height;\n  }\n  get power() {\n    // compute the light's luminous power (in lumens) from its intensity (in nits)\n    return this.intensity * this.width * this.height * Math.PI;\n  }\n  set power(power) {\n    // set the light's intensity (in nits) from the desired luminous power (in lumens)\n    this.intensity = power / (this.width * this.height * Math.PI);\n  }\n  copy(source) {\n    super.copy(source);\n    this.width = source.width;\n    this.height = source.height;\n    return this;\n  }\n  toJSON(meta) {\n    const data = super.toJSON(meta);\n    data.object.width = this.width;\n    data.object.height = this.height;\n    return data;\n  }\n}\nexport { RectAreaLight };","map":{"version":3,"names":["Light","RectAreaLight","constructor","color","intensity","width","height","isRectAreaLight","type","power","Math","PI","copy","source","toJSON","meta","data","object"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/lights/RectAreaLight.js"],"sourcesContent":["import { Light } from './Light.js';\n\nclass RectAreaLight extends Light {\n\n\tconstructor( color, intensity, width = 10, height = 10 ) {\n\n\t\tsuper( color, intensity );\n\n\t\tthis.isRectAreaLight = true;\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t}\n\n\tget power() {\n\n\t\t// compute the light's luminous power (in lumens) from its intensity (in nits)\n\t\treturn this.intensity * this.width * this.height * Math.PI;\n\n\t}\n\n\tset power( power ) {\n\n\t\t// set the light's intensity (in nits) from the desired luminous power (in lumens)\n\t\tthis.intensity = power / ( this.width * this.height * Math.PI );\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst data = super.toJSON( meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n}\n\nexport { RectAreaLight };\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,YAAY;AAElC,MAAMC,aAAa,SAASD,KAAK,CAAC;EAEjCE,WAAW,CAAEC,KAAK,EAAEC,SAAS,EAA4B;IAAA,IAA1BC,KAAK,uEAAG,EAAE;IAAA,IAAEC,MAAM,uEAAG,EAAE;IAErD,KAAK,CAAEH,KAAK,EAAEC,SAAS,CAAE;IAEzB,IAAI,CAACG,eAAe,GAAG,IAAI;IAE3B,IAAI,CAACC,IAAI,GAAG,eAAe;IAE3B,IAAI,CAACH,KAAK,GAAGA,KAAK;IAClB,IAAI,CAACC,MAAM,GAAGA,MAAM;EAErB;EAEA,IAAIG,KAAK,GAAG;IAEX;IACA,OAAO,IAAI,CAACL,SAAS,GAAG,IAAI,CAACC,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGI,IAAI,CAACC,EAAE;EAE3D;EAEA,IAAIF,KAAK,CAAEA,KAAK,EAAG;IAElB;IACA,IAAI,CAACL,SAAS,GAAGK,KAAK,IAAK,IAAI,CAACJ,KAAK,GAAG,IAAI,CAACC,MAAM,GAAGI,IAAI,CAACC,EAAE,CAAE;EAEhE;EAEAC,IAAI,CAAEC,MAAM,EAAG;IAEd,KAAK,CAACD,IAAI,CAAEC,MAAM,CAAE;IAEpB,IAAI,CAACR,KAAK,GAAGQ,MAAM,CAACR,KAAK;IACzB,IAAI,CAACC,MAAM,GAAGO,MAAM,CAACP,MAAM;IAE3B,OAAO,IAAI;EAEZ;EAEAQ,MAAM,CAAEC,IAAI,EAAG;IAEd,MAAMC,IAAI,GAAG,KAAK,CAACF,MAAM,CAAEC,IAAI,CAAE;IAEjCC,IAAI,CAACC,MAAM,CAACZ,KAAK,GAAG,IAAI,CAACA,KAAK;IAC9BW,IAAI,CAACC,MAAM,CAACX,MAAM,GAAG,IAAI,CAACA,MAAM;IAEhC,OAAOU,IAAI;EAEZ;AAED;AAEA,SAASf,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}