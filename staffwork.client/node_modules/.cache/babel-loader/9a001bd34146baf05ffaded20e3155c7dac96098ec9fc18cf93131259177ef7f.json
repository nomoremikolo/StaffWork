{"ast":null,"code":"import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { arrayNeedsUint32 } from '../../utils.js';\nfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n  const geometries = {};\n  const wireframeAttributes = new WeakMap();\n  function onGeometryDispose(event) {\n    const geometry = event.target;\n    if (geometry.index !== null) {\n      attributes.remove(geometry.index);\n    }\n    for (const name in geometry.attributes) {\n      attributes.remove(geometry.attributes[name]);\n    }\n    geometry.removeEventListener('dispose', onGeometryDispose);\n    delete geometries[geometry.id];\n    const attribute = wireframeAttributes.get(geometry);\n    if (attribute) {\n      attributes.remove(attribute);\n      wireframeAttributes.delete(geometry);\n    }\n    bindingStates.releaseStatesOfGeometry(geometry);\n    if (geometry.isInstancedBufferGeometry === true) {\n      delete geometry._maxInstanceCount;\n    }\n\n    //\n\n    info.memory.geometries--;\n  }\n  function get(object, geometry) {\n    if (geometries[geometry.id] === true) return geometry;\n    geometry.addEventListener('dispose', onGeometryDispose);\n    geometries[geometry.id] = true;\n    info.memory.geometries++;\n    return geometry;\n  }\n  function update(geometry) {\n    const geometryAttributes = geometry.attributes;\n\n    // Updating index buffer in VAO now. See WebGLBindingStates.\n\n    for (const name in geometryAttributes) {\n      attributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n    }\n\n    // morph targets\n\n    const morphAttributes = geometry.morphAttributes;\n    for (const name in morphAttributes) {\n      const array = morphAttributes[name];\n      for (let i = 0, l = array.length; i < l; i++) {\n        attributes.update(array[i], gl.ARRAY_BUFFER);\n      }\n    }\n  }\n  function updateWireframeAttribute(geometry) {\n    const indices = [];\n    const geometryIndex = geometry.index;\n    const geometryPosition = geometry.attributes.position;\n    let version = 0;\n    if (geometryIndex !== null) {\n      const array = geometryIndex.array;\n      version = geometryIndex.version;\n      for (let i = 0, l = array.length; i < l; i += 3) {\n        const a = array[i + 0];\n        const b = array[i + 1];\n        const c = array[i + 2];\n        indices.push(a, b, b, c, c, a);\n      }\n    } else {\n      const array = geometryPosition.array;\n      version = geometryPosition.version;\n      for (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n        const a = i + 0;\n        const b = i + 1;\n        const c = i + 2;\n        indices.push(a, b, b, c, c, a);\n      }\n    }\n    const attribute = new (arrayNeedsUint32(indices) ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n    attribute.version = version;\n\n    // Updating index buffer in VAO now. See WebGLBindingStates\n\n    //\n\n    const previousAttribute = wireframeAttributes.get(geometry);\n    if (previousAttribute) attributes.remove(previousAttribute);\n\n    //\n\n    wireframeAttributes.set(geometry, attribute);\n  }\n  function getWireframeAttribute(geometry) {\n    const currentAttribute = wireframeAttributes.get(geometry);\n    if (currentAttribute) {\n      const geometryIndex = geometry.index;\n      if (geometryIndex !== null) {\n        // if the attribute is obsolete, create a new one\n\n        if (currentAttribute.version < geometryIndex.version) {\n          updateWireframeAttribute(geometry);\n        }\n      }\n    } else {\n      updateWireframeAttribute(geometry);\n    }\n    return wireframeAttributes.get(geometry);\n  }\n  return {\n    get: get,\n    update: update,\n    getWireframeAttribute: getWireframeAttribute\n  };\n}\nexport { WebGLGeometries };","map":{"version":3,"names":["Uint16BufferAttribute","Uint32BufferAttribute","arrayNeedsUint32","WebGLGeometries","gl","attributes","info","bindingStates","geometries","wireframeAttributes","WeakMap","onGeometryDispose","event","geometry","target","index","remove","name","removeEventListener","id","attribute","get","delete","releaseStatesOfGeometry","isInstancedBufferGeometry","_maxInstanceCount","memory","object","addEventListener","update","geometryAttributes","ARRAY_BUFFER","morphAttributes","array","i","l","length","updateWireframeAttribute","indices","geometryIndex","geometryPosition","position","version","a","b","c","push","previousAttribute","set","getWireframeAttribute","currentAttribute"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLGeometries.js"],"sourcesContent":["import { Uint16BufferAttribute, Uint32BufferAttribute } from '../../core/BufferAttribute.js';\nimport { arrayNeedsUint32 } from '../../utils.js';\n\nfunction WebGLGeometries( gl, attributes, info, bindingStates ) {\n\n\tconst geometries = {};\n\tconst wireframeAttributes = new WeakMap();\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tconst geometry = event.target;\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\tattributes.remove( geometry.index );\n\n\t\t}\n\n\t\tfor ( const name in geometry.attributes ) {\n\n\t\t\tattributes.remove( geometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\tconst attribute = wireframeAttributes.get( geometry );\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\twireframeAttributes.delete( geometry );\n\n\t\t}\n\n\t\tbindingStates.releaseStatesOfGeometry( geometry );\n\n\t\tif ( geometry.isInstancedBufferGeometry === true ) {\n\n\t\t\tdelete geometry._maxInstanceCount;\n\n\t\t}\n\n\t\t//\n\n\t\tinfo.memory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tif ( geometries[ geometry.id ] === true ) return geometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tgeometries[ geometry.id ] = true;\n\n\t\tinfo.memory.geometries ++;\n\n\t\treturn geometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tconst geometryAttributes = geometry.attributes;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\tfor ( const name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( const name in morphAttributes ) {\n\n\t\t\tconst array = morphAttributes[ name ];\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction updateWireframeAttribute( geometry ) {\n\n\t\tconst indices = [];\n\n\t\tconst geometryIndex = geometry.index;\n\t\tconst geometryPosition = geometry.attributes.position;\n\t\tlet version = 0;\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tconst array = geometryIndex.array;\n\t\t\tversion = geometryIndex.version;\n\n\t\t\tfor ( let i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tconst a = array[ i + 0 ];\n\t\t\t\tconst b = array[ i + 1 ];\n\t\t\t\tconst c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconst array = geometryPosition.array;\n\t\t\tversion = geometryPosition.version;\n\n\t\t\tfor ( let i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tconst a = i + 0;\n\t\t\t\tconst b = i + 1;\n\t\t\t\tconst c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst attribute = new ( arrayNeedsUint32( indices ) ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\tattribute.version = version;\n\n\t\t// Updating index buffer in VAO now. See WebGLBindingStates\n\n\t\t//\n\n\t\tconst previousAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( previousAttribute ) attributes.remove( previousAttribute );\n\n\t\t//\n\n\t\twireframeAttributes.set( geometry, attribute );\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tconst currentAttribute = wireframeAttributes.get( geometry );\n\n\t\tif ( currentAttribute ) {\n\n\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t}\n\n\t\treturn wireframeAttributes.get( geometry );\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n\nexport { WebGLGeometries };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}