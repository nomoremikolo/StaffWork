{"ast":null,"code":"import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\nfunction WebGLState(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n  function ColorBuffer() {\n    let locked = false;\n    const color = new Vector4();\n    let currentColorMask = null;\n    const currentColorClear = new Vector4(0, 0, 0, 0);\n    return {\n      setMask: function (colorMask) {\n        if (currentColorMask !== colorMask && !locked) {\n          gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n          currentColorMask = colorMask;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (r, g, b, a, premultipliedAlpha) {\n        if (premultipliedAlpha === true) {\n          r *= a;\n          g *= a;\n          b *= a;\n        }\n        color.set(r, g, b, a);\n        if (currentColorClear.equals(color) === false) {\n          gl.clearColor(r, g, b, a);\n          currentColorClear.copy(color);\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentColorMask = null;\n        currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n      }\n    };\n  }\n\n  function DepthBuffer() {\n    let locked = false;\n    let currentDepthMask = null;\n    let currentDepthFunc = null;\n    let currentDepthClear = null;\n    return {\n      setTest: function (depthTest) {\n        if (depthTest) {\n          enable(gl.DEPTH_TEST);\n        } else {\n          disable(gl.DEPTH_TEST);\n        }\n      },\n      setMask: function (depthMask) {\n        if (currentDepthMask !== depthMask && !locked) {\n          gl.depthMask(depthMask);\n          currentDepthMask = depthMask;\n        }\n      },\n      setFunc: function (depthFunc) {\n        if (currentDepthFunc !== depthFunc) {\n          switch (depthFunc) {\n            case NeverDepth:\n              gl.depthFunc(gl.NEVER);\n              break;\n            case AlwaysDepth:\n              gl.depthFunc(gl.ALWAYS);\n              break;\n            case LessDepth:\n              gl.depthFunc(gl.LESS);\n              break;\n            case LessEqualDepth:\n              gl.depthFunc(gl.LEQUAL);\n              break;\n            case EqualDepth:\n              gl.depthFunc(gl.EQUAL);\n              break;\n            case GreaterEqualDepth:\n              gl.depthFunc(gl.GEQUAL);\n              break;\n            case GreaterDepth:\n              gl.depthFunc(gl.GREATER);\n              break;\n            case NotEqualDepth:\n              gl.depthFunc(gl.NOTEQUAL);\n              break;\n            default:\n              gl.depthFunc(gl.LEQUAL);\n          }\n          currentDepthFunc = depthFunc;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (depth) {\n        if (currentDepthClear !== depth) {\n          gl.clearDepth(depth);\n          currentDepthClear = depth;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentDepthMask = null;\n        currentDepthFunc = null;\n        currentDepthClear = null;\n      }\n    };\n  }\n  function StencilBuffer() {\n    let locked = false;\n    let currentStencilMask = null;\n    let currentStencilFunc = null;\n    let currentStencilRef = null;\n    let currentStencilFuncMask = null;\n    let currentStencilFail = null;\n    let currentStencilZFail = null;\n    let currentStencilZPass = null;\n    let currentStencilClear = null;\n    return {\n      setTest: function (stencilTest) {\n        if (!locked) {\n          if (stencilTest) {\n            enable(gl.STENCIL_TEST);\n          } else {\n            disable(gl.STENCIL_TEST);\n          }\n        }\n      },\n      setMask: function (stencilMask) {\n        if (currentStencilMask !== stencilMask && !locked) {\n          gl.stencilMask(stencilMask);\n          currentStencilMask = stencilMask;\n        }\n      },\n      setFunc: function (stencilFunc, stencilRef, stencilMask) {\n        if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n          gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n          currentStencilFunc = stencilFunc;\n          currentStencilRef = stencilRef;\n          currentStencilFuncMask = stencilMask;\n        }\n      },\n      setOp: function (stencilFail, stencilZFail, stencilZPass) {\n        if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n          gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n          currentStencilFail = stencilFail;\n          currentStencilZFail = stencilZFail;\n          currentStencilZPass = stencilZPass;\n        }\n      },\n      setLocked: function (lock) {\n        locked = lock;\n      },\n      setClear: function (stencil) {\n        if (currentStencilClear !== stencil) {\n          gl.clearStencil(stencil);\n          currentStencilClear = stencil;\n        }\n      },\n      reset: function () {\n        locked = false;\n        currentStencilMask = null;\n        currentStencilFunc = null;\n        currentStencilRef = null;\n        currentStencilFuncMask = null;\n        currentStencilFail = null;\n        currentStencilZFail = null;\n        currentStencilZPass = null;\n        currentStencilClear = null;\n      }\n    };\n  }\n\n  //\n\n  const colorBuffer = new ColorBuffer();\n  const depthBuffer = new DepthBuffer();\n  const stencilBuffer = new StencilBuffer();\n  const uboBindings = new WeakMap();\n  const uboProgamMap = new WeakMap();\n  let enabledCapabilities = {};\n  let currentBoundFramebuffers = {};\n  let currentDrawbuffers = new WeakMap();\n  let defaultDrawbuffers = [];\n  let currentProgram = null;\n  let currentBlendingEnabled = false;\n  let currentBlending = null;\n  let currentBlendEquation = null;\n  let currentBlendSrc = null;\n  let currentBlendDst = null;\n  let currentBlendEquationAlpha = null;\n  let currentBlendSrcAlpha = null;\n  let currentBlendDstAlpha = null;\n  let currentPremultipledAlpha = false;\n  let currentFlipSided = null;\n  let currentCullFace = null;\n  let currentLineWidth = null;\n  let currentPolygonOffsetFactor = null;\n  let currentPolygonOffsetUnits = null;\n  const maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n  let lineWidthAvailable = false;\n  let version = 0;\n  const glVersion = gl.getParameter(gl.VERSION);\n  if (glVersion.indexOf('WebGL') !== -1) {\n    version = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 1.0;\n  } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n    version = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n    lineWidthAvailable = version >= 2.0;\n  }\n  let currentTextureSlot = null;\n  let currentBoundTextures = {};\n  const scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n  const viewportParam = gl.getParameter(gl.VIEWPORT);\n  const currentScissor = new Vector4().fromArray(scissorParam);\n  const currentViewport = new Vector4().fromArray(viewportParam);\n  function createTexture(type, target, count) {\n    const data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n    const texture = gl.createTexture();\n    gl.bindTexture(type, texture);\n    gl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    for (let i = 0; i < count; i++) {\n      gl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n    }\n    return texture;\n  }\n  const emptyTextures = {};\n  emptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n  emptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6);\n\n  // init\n\n  colorBuffer.setClear(0, 0, 0, 1);\n  depthBuffer.setClear(1);\n  stencilBuffer.setClear(0);\n  enable(gl.DEPTH_TEST);\n  depthBuffer.setFunc(LessEqualDepth);\n  setFlipSided(false);\n  setCullFace(CullFaceBack);\n  enable(gl.CULL_FACE);\n  setBlending(NoBlending);\n\n  //\n\n  function enable(id) {\n    if (enabledCapabilities[id] !== true) {\n      gl.enable(id);\n      enabledCapabilities[id] = true;\n    }\n  }\n  function disable(id) {\n    if (enabledCapabilities[id] !== false) {\n      gl.disable(id);\n      enabledCapabilities[id] = false;\n    }\n  }\n  function bindFramebuffer(target, framebuffer) {\n    if (currentBoundFramebuffers[target] !== framebuffer) {\n      gl.bindFramebuffer(target, framebuffer);\n      currentBoundFramebuffers[target] = framebuffer;\n      if (isWebGL2) {\n        // gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n        if (target === gl.DRAW_FRAMEBUFFER) {\n          currentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n        }\n        if (target === gl.FRAMEBUFFER) {\n          currentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n  function drawBuffers(renderTarget, framebuffer) {\n    let drawBuffers = defaultDrawbuffers;\n    let needsUpdate = false;\n    if (renderTarget) {\n      drawBuffers = currentDrawbuffers.get(framebuffer);\n      if (drawBuffers === undefined) {\n        drawBuffers = [];\n        currentDrawbuffers.set(framebuffer, drawBuffers);\n      }\n      if (renderTarget.isWebGLMultipleRenderTargets) {\n        const textures = renderTarget.texture;\n        if (drawBuffers.length !== textures.length || drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n          for (let i = 0, il = textures.length; i < il; i++) {\n            drawBuffers[i] = gl.COLOR_ATTACHMENT0 + i;\n          }\n          drawBuffers.length = textures.length;\n          needsUpdate = true;\n        }\n      } else {\n        if (drawBuffers[0] !== gl.COLOR_ATTACHMENT0) {\n          drawBuffers[0] = gl.COLOR_ATTACHMENT0;\n          needsUpdate = true;\n        }\n      }\n    } else {\n      if (drawBuffers[0] !== gl.BACK) {\n        drawBuffers[0] = gl.BACK;\n        needsUpdate = true;\n      }\n    }\n    if (needsUpdate) {\n      if (capabilities.isWebGL2) {\n        gl.drawBuffers(drawBuffers);\n      } else {\n        extensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(drawBuffers);\n      }\n    }\n  }\n  function useProgram(program) {\n    if (currentProgram !== program) {\n      gl.useProgram(program);\n      currentProgram = program;\n      return true;\n    }\n    return false;\n  }\n  const equationToGL = {\n    [AddEquation]: gl.FUNC_ADD,\n    [SubtractEquation]: gl.FUNC_SUBTRACT,\n    [ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n  };\n  if (isWebGL2) {\n    equationToGL[MinEquation] = gl.MIN;\n    equationToGL[MaxEquation] = gl.MAX;\n  } else {\n    const extension = extensions.get('EXT_blend_minmax');\n    if (extension !== null) {\n      equationToGL[MinEquation] = extension.MIN_EXT;\n      equationToGL[MaxEquation] = extension.MAX_EXT;\n    }\n  }\n  const factorToGL = {\n    [ZeroFactor]: gl.ZERO,\n    [OneFactor]: gl.ONE,\n    [SrcColorFactor]: gl.SRC_COLOR,\n    [SrcAlphaFactor]: gl.SRC_ALPHA,\n    [SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n    [DstColorFactor]: gl.DST_COLOR,\n    [DstAlphaFactor]: gl.DST_ALPHA,\n    [OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n    [OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n    [OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n    [OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n  };\n  function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n    if (blending === NoBlending) {\n      if (currentBlendingEnabled === true) {\n        disable(gl.BLEND);\n        currentBlendingEnabled = false;\n      }\n      return;\n    }\n    if (currentBlendingEnabled === false) {\n      enable(gl.BLEND);\n      currentBlendingEnabled = true;\n    }\n    if (blending !== CustomBlending) {\n      if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n        if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n          gl.blendEquation(gl.FUNC_ADD);\n          currentBlendEquation = AddEquation;\n          currentBlendEquationAlpha = AddEquation;\n        }\n        if (premultipliedAlpha) {\n          switch (blending) {\n            case NormalBlending:\n              gl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n              break;\n            case AdditiveBlending:\n              gl.blendFunc(gl.ONE, gl.ONE);\n              break;\n            case SubtractiveBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n              break;\n            case MultiplyBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n              break;\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        } else {\n          switch (blending) {\n            case NormalBlending:\n              gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n              break;\n            case AdditiveBlending:\n              gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n              break;\n            case SubtractiveBlending:\n              gl.blendFuncSeparate(gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE);\n              break;\n            case MultiplyBlending:\n              gl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n              break;\n            default:\n              console.error('THREE.WebGLState: Invalid blending: ', blending);\n              break;\n          }\n        }\n        currentBlendSrc = null;\n        currentBlendDst = null;\n        currentBlendSrcAlpha = null;\n        currentBlendDstAlpha = null;\n        currentBlending = blending;\n        currentPremultipledAlpha = premultipliedAlpha;\n      }\n      return;\n    }\n\n    // custom blending\n\n    blendEquationAlpha = blendEquationAlpha || blendEquation;\n    blendSrcAlpha = blendSrcAlpha || blendSrc;\n    blendDstAlpha = blendDstAlpha || blendDst;\n    if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n      gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n      currentBlendEquation = blendEquation;\n      currentBlendEquationAlpha = blendEquationAlpha;\n    }\n    if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n      gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n      currentBlendSrc = blendSrc;\n      currentBlendDst = blendDst;\n      currentBlendSrcAlpha = blendSrcAlpha;\n      currentBlendDstAlpha = blendDstAlpha;\n    }\n    currentBlending = blending;\n    currentPremultipledAlpha = false;\n  }\n  function setMaterial(material, frontFaceCW) {\n    material.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n    let flipSided = material.side === BackSide;\n    if (frontFaceCW) flipSided = !flipSided;\n    setFlipSided(flipSided);\n    material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n    depthBuffer.setFunc(material.depthFunc);\n    depthBuffer.setTest(material.depthTest);\n    depthBuffer.setMask(material.depthWrite);\n    colorBuffer.setMask(material.colorWrite);\n    const stencilWrite = material.stencilWrite;\n    stencilBuffer.setTest(stencilWrite);\n    if (stencilWrite) {\n      stencilBuffer.setMask(material.stencilWriteMask);\n      stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n      stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n    }\n    setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    material.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n  }\n\n  //\n\n  function setFlipSided(flipSided) {\n    if (currentFlipSided !== flipSided) {\n      if (flipSided) {\n        gl.frontFace(gl.CW);\n      } else {\n        gl.frontFace(gl.CCW);\n      }\n      currentFlipSided = flipSided;\n    }\n  }\n  function setCullFace(cullFace) {\n    if (cullFace !== CullFaceNone) {\n      enable(gl.CULL_FACE);\n      if (cullFace !== currentCullFace) {\n        if (cullFace === CullFaceBack) {\n          gl.cullFace(gl.BACK);\n        } else if (cullFace === CullFaceFront) {\n          gl.cullFace(gl.FRONT);\n        } else {\n          gl.cullFace(gl.FRONT_AND_BACK);\n        }\n      }\n    } else {\n      disable(gl.CULL_FACE);\n    }\n    currentCullFace = cullFace;\n  }\n  function setLineWidth(width) {\n    if (width !== currentLineWidth) {\n      if (lineWidthAvailable) gl.lineWidth(width);\n      currentLineWidth = width;\n    }\n  }\n  function setPolygonOffset(polygonOffset, factor, units) {\n    if (polygonOffset) {\n      enable(gl.POLYGON_OFFSET_FILL);\n      if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n        gl.polygonOffset(factor, units);\n        currentPolygonOffsetFactor = factor;\n        currentPolygonOffsetUnits = units;\n      }\n    } else {\n      disable(gl.POLYGON_OFFSET_FILL);\n    }\n  }\n  function setScissorTest(scissorTest) {\n    if (scissorTest) {\n      enable(gl.SCISSOR_TEST);\n    } else {\n      disable(gl.SCISSOR_TEST);\n    }\n  }\n\n  // texture\n\n  function activeTexture(webglSlot) {\n    if (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n    if (currentTextureSlot !== webglSlot) {\n      gl.activeTexture(webglSlot);\n      currentTextureSlot = webglSlot;\n    }\n  }\n  function bindTexture(webglType, webglTexture, webglSlot) {\n    if (webglSlot === undefined) {\n      if (currentTextureSlot === null) {\n        webglSlot = gl.TEXTURE0 + maxTextures - 1;\n      } else {\n        webglSlot = currentTextureSlot;\n      }\n    }\n    let boundTexture = currentBoundTextures[webglSlot];\n    if (boundTexture === undefined) {\n      boundTexture = {\n        type: undefined,\n        texture: undefined\n      };\n      currentBoundTextures[webglSlot] = boundTexture;\n    }\n    if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n      gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n      boundTexture.type = webglType;\n      boundTexture.texture = webglTexture;\n    }\n  }\n  function unbindTexture() {\n    const boundTexture = currentBoundTextures[currentTextureSlot];\n    if (boundTexture !== undefined && boundTexture.type !== undefined) {\n      gl.bindTexture(boundTexture.type, null);\n      boundTexture.type = undefined;\n      boundTexture.texture = undefined;\n    }\n  }\n  function compressedTexImage2D() {\n    try {\n      gl.compressedTexImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function compressedTexImage3D() {\n    try {\n      gl.compressedTexImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function texSubImage2D() {\n    try {\n      gl.texSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function texSubImage3D() {\n    try {\n      gl.texSubImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function compressedTexSubImage2D() {\n    try {\n      gl.compressedTexSubImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function compressedTexSubImage3D() {\n    try {\n      gl.compressedTexSubImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function texStorage2D() {\n    try {\n      gl.texStorage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function texStorage3D() {\n    try {\n      gl.texStorage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function texImage2D() {\n    try {\n      gl.texImage2D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n  function texImage3D() {\n    try {\n      gl.texImage3D.apply(gl, arguments);\n    } catch (error) {\n      console.error('THREE.WebGLState:', error);\n    }\n  }\n\n  //\n\n  function scissor(scissor) {\n    if (currentScissor.equals(scissor) === false) {\n      gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n      currentScissor.copy(scissor);\n    }\n  }\n  function viewport(viewport) {\n    if (currentViewport.equals(viewport) === false) {\n      gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n      currentViewport.copy(viewport);\n    }\n  }\n  function updateUBOMapping(uniformsGroup, program) {\n    let mapping = uboProgamMap.get(program);\n    if (mapping === undefined) {\n      mapping = new WeakMap();\n      uboProgamMap.set(program, mapping);\n    }\n    let blockIndex = mapping.get(uniformsGroup);\n    if (blockIndex === undefined) {\n      blockIndex = gl.getUniformBlockIndex(program, uniformsGroup.name);\n      mapping.set(uniformsGroup, blockIndex);\n    }\n  }\n  function uniformBlockBinding(uniformsGroup, program) {\n    const mapping = uboProgamMap.get(program);\n    const blockIndex = mapping.get(uniformsGroup);\n    if (uboBindings.get(uniformsGroup) !== blockIndex) {\n      // bind shader specific block index to global block point\n\n      gl.uniformBlockBinding(program, blockIndex, uniformsGroup.__bindingPointIndex);\n      uboBindings.set(uniformsGroup, blockIndex);\n    }\n  }\n\n  //\n\n  function reset() {\n    // reset state\n\n    gl.disable(gl.BLEND);\n    gl.disable(gl.CULL_FACE);\n    gl.disable(gl.DEPTH_TEST);\n    gl.disable(gl.POLYGON_OFFSET_FILL);\n    gl.disable(gl.SCISSOR_TEST);\n    gl.disable(gl.STENCIL_TEST);\n    gl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n    gl.blendEquation(gl.FUNC_ADD);\n    gl.blendFunc(gl.ONE, gl.ZERO);\n    gl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n    gl.colorMask(true, true, true, true);\n    gl.clearColor(0, 0, 0, 0);\n    gl.depthMask(true);\n    gl.depthFunc(gl.LESS);\n    gl.clearDepth(1);\n    gl.stencilMask(0xffffffff);\n    gl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n    gl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n    gl.clearStencil(0);\n    gl.cullFace(gl.BACK);\n    gl.frontFace(gl.CCW);\n    gl.polygonOffset(0, 0);\n    gl.activeTexture(gl.TEXTURE0);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    if (isWebGL2 === true) {\n      gl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n      gl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n    }\n    gl.useProgram(null);\n    gl.lineWidth(1);\n    gl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    // reset internals\n\n    enabledCapabilities = {};\n    currentTextureSlot = null;\n    currentBoundTextures = {};\n    currentBoundFramebuffers = {};\n    currentDrawbuffers = new WeakMap();\n    defaultDrawbuffers = [];\n    currentProgram = null;\n    currentBlendingEnabled = false;\n    currentBlending = null;\n    currentBlendEquation = null;\n    currentBlendSrc = null;\n    currentBlendDst = null;\n    currentBlendEquationAlpha = null;\n    currentBlendSrcAlpha = null;\n    currentBlendDstAlpha = null;\n    currentPremultipledAlpha = false;\n    currentFlipSided = null;\n    currentCullFace = null;\n    currentLineWidth = null;\n    currentPolygonOffsetFactor = null;\n    currentPolygonOffsetUnits = null;\n    currentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n    currentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n    colorBuffer.reset();\n    depthBuffer.reset();\n    stencilBuffer.reset();\n  }\n  return {\n    buffers: {\n      color: colorBuffer,\n      depth: depthBuffer,\n      stencil: stencilBuffer\n    },\n    enable: enable,\n    disable: disable,\n    bindFramebuffer: bindFramebuffer,\n    drawBuffers: drawBuffers,\n    useProgram: useProgram,\n    setBlending: setBlending,\n    setMaterial: setMaterial,\n    setFlipSided: setFlipSided,\n    setCullFace: setCullFace,\n    setLineWidth: setLineWidth,\n    setPolygonOffset: setPolygonOffset,\n    setScissorTest: setScissorTest,\n    activeTexture: activeTexture,\n    bindTexture: bindTexture,\n    unbindTexture: unbindTexture,\n    compressedTexImage2D: compressedTexImage2D,\n    compressedTexImage3D: compressedTexImage3D,\n    texImage2D: texImage2D,\n    texImage3D: texImage3D,\n    updateUBOMapping: updateUBOMapping,\n    uniformBlockBinding: uniformBlockBinding,\n    texStorage2D: texStorage2D,\n    texStorage3D: texStorage3D,\n    texSubImage2D: texSubImage2D,\n    texSubImage3D: texSubImage3D,\n    compressedTexSubImage2D: compressedTexSubImage2D,\n    compressedTexSubImage3D: compressedTexSubImage3D,\n    scissor: scissor,\n    viewport: viewport,\n    reset: reset\n  };\n}\nexport { WebGLState };","map":{"version":3,"names":["NotEqualDepth","GreaterDepth","GreaterEqualDepth","EqualDepth","LessEqualDepth","LessDepth","AlwaysDepth","NeverDepth","CullFaceFront","CullFaceBack","CullFaceNone","DoubleSide","BackSide","CustomBlending","MultiplyBlending","SubtractiveBlending","AdditiveBlending","NoBlending","NormalBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","SrcAlphaFactor","SrcAlphaSaturateFactor","DstColorFactor","DstAlphaFactor","OneMinusSrcColorFactor","OneMinusSrcAlphaFactor","OneMinusDstColorFactor","OneMinusDstAlphaFactor","Vector4","WebGLState","gl","extensions","capabilities","isWebGL2","ColorBuffer","locked","color","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","setClear","r","g","b","a","premultipliedAlpha","set","equals","clearColor","copy","reset","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","setTest","depthTest","enable","DEPTH_TEST","disable","depthMask","setFunc","depthFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","depth","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","depthBuffer","stencilBuffer","uboBindings","WeakMap","uboProgamMap","enabledCapabilities","currentBoundFramebuffers","currentDrawbuffers","defaultDrawbuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","maxTextures","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","version","glVersion","VERSION","indexOf","parseFloat","exec","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","fromArray","currentViewport","createTexture","type","target","count","data","Uint8Array","texture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","i","texImage2D","RGBA","UNSIGNED_BYTE","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","setBlending","id","bindFramebuffer","framebuffer","DRAW_FRAMEBUFFER","FRAMEBUFFER","drawBuffers","renderTarget","needsUpdate","get","undefined","isWebGLMultipleRenderTargets","textures","length","COLOR_ATTACHMENT0","il","BACK","drawBuffersWEBGL","useProgram","program","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","extension","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","blending","blendEquation","blendSrc","blendDst","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","BLEND","blendFuncSeparate","blendFunc","console","error","blendEquationSeparate","setMaterial","material","frontFaceCW","side","flipSided","transparent","depthWrite","colorWrite","stencilWrite","stencilWriteMask","stencilFuncMask","setPolygonOffset","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","alphaToCoverage","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","FRONT","FRONT_AND_BACK","setLineWidth","width","lineWidth","factor","units","POLYGON_OFFSET_FILL","setScissorTest","scissorTest","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","arguments","compressedTexImage3D","texSubImage2D","texSubImage3D","compressedTexSubImage2D","compressedTexSubImage3D","texStorage2D","texStorage3D","texImage3D","scissor","x","y","z","w","viewport","updateUBOMapping","uniformsGroup","mapping","blockIndex","getUniformBlockIndex","name","uniformBlockBinding","__bindingPointIndex","KEEP","READ_FRAMEBUFFER","canvas","height","buffers"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLState.js"],"sourcesContent":["import { NotEqualDepth, GreaterDepth, GreaterEqualDepth, EqualDepth, LessEqualDepth, LessDepth, AlwaysDepth, NeverDepth, CullFaceFront, CullFaceBack, CullFaceNone, DoubleSide, BackSide, CustomBlending, MultiplyBlending, SubtractiveBlending, AdditiveBlending, NoBlending, NormalBlending, AddEquation, SubtractEquation, ReverseSubtractEquation, MinEquation, MaxEquation, ZeroFactor, OneFactor, SrcColorFactor, SrcAlphaFactor, SrcAlphaSaturateFactor, DstColorFactor, DstAlphaFactor, OneMinusSrcColorFactor, OneMinusSrcAlphaFactor, OneMinusDstColorFactor, OneMinusDstAlphaFactor } from '../../constants.js';\nimport { Vector4 } from '../../math/Vector4.js';\n\nfunction WebGLState( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction ColorBuffer() {\n\n\t\tlet locked = false;\n\n\t\tconst color = new Vector4();\n\t\tlet currentColorMask = null;\n\t\tconst currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentDepthMask = null;\n\t\tlet currentDepthFunc = null;\n\t\tlet currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tlet locked = false;\n\n\t\tlet currentStencilMask = null;\n\t\tlet currentStencilFunc = null;\n\t\tlet currentStencilRef = null;\n\t\tlet currentStencilFuncMask = null;\n\t\tlet currentStencilFail = null;\n\t\tlet currentStencilZFail = null;\n\t\tlet currentStencilZPass = null;\n\t\tlet currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef !== stencilRef ||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail !== stencilFail ||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tconst colorBuffer = new ColorBuffer();\n\tconst depthBuffer = new DepthBuffer();\n\tconst stencilBuffer = new StencilBuffer();\n\n\tconst uboBindings = new WeakMap();\n\tconst uboProgamMap = new WeakMap();\n\n\tlet enabledCapabilities = {};\n\n\tlet currentBoundFramebuffers = {};\n\tlet currentDrawbuffers = new WeakMap();\n\tlet defaultDrawbuffers = [];\n\n\tlet currentProgram = null;\n\n\tlet currentBlendingEnabled = false;\n\tlet currentBlending = null;\n\tlet currentBlendEquation = null;\n\tlet currentBlendSrc = null;\n\tlet currentBlendDst = null;\n\tlet currentBlendEquationAlpha = null;\n\tlet currentBlendSrcAlpha = null;\n\tlet currentBlendDstAlpha = null;\n\tlet currentPremultipledAlpha = false;\n\n\tlet currentFlipSided = null;\n\tlet currentCullFace = null;\n\n\tlet currentLineWidth = null;\n\n\tlet currentPolygonOffsetFactor = null;\n\tlet currentPolygonOffsetUnits = null;\n\n\tconst maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tlet lineWidthAvailable = false;\n\tlet version = 0;\n\tconst glVersion = gl.getParameter( gl.VERSION );\n\n\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^WebGL (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\tversion = parseFloat( /^OpenGL ES (\\d)/.exec( glVersion )[ 1 ] );\n\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t}\n\n\tlet currentTextureSlot = null;\n\tlet currentBoundTextures = {};\n\n\tconst scissorParam = gl.getParameter( gl.SCISSOR_BOX );\n\tconst viewportParam = gl.getParameter( gl.VIEWPORT );\n\n\tconst currentScissor = new Vector4().fromArray( scissorParam );\n\tconst currentViewport = new Vector4().fromArray( viewportParam );\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tconst data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tconst texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( let i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tconst emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tsetBlending( NoBlending );\n\n\t//\n\n\tfunction enable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction bindFramebuffer( target, framebuffer ) {\n\n\t\tif ( currentBoundFramebuffers[ target ] !== framebuffer ) {\n\n\t\t\tgl.bindFramebuffer( target, framebuffer );\n\n\t\t\tcurrentBoundFramebuffers[ target ] = framebuffer;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\n\t\t\t\tif ( target === gl.DRAW_FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t\tif ( target === gl.FRAMEBUFFER ) {\n\n\t\t\t\t\tcurrentBoundFramebuffers[ gl.DRAW_FRAMEBUFFER ] = framebuffer;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction drawBuffers( renderTarget, framebuffer ) {\n\n\t\tlet drawBuffers = defaultDrawbuffers;\n\n\t\tlet needsUpdate = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tdrawBuffers = currentDrawbuffers.get( framebuffer );\n\n\t\t\tif ( drawBuffers === undefined ) {\n\n\t\t\t\tdrawBuffers = [];\n\t\t\t\tcurrentDrawbuffers.set( framebuffer, drawBuffers );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultipleRenderTargets ) {\n\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tif ( drawBuffers.length !== textures.length || drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tfor ( let i = 0, il = textures.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tdrawBuffers[ i ] = gl.COLOR_ATTACHMENT0 + i;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tdrawBuffers.length = textures.length;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( drawBuffers[ 0 ] !== gl.COLOR_ATTACHMENT0 ) {\n\n\t\t\t\t\tdrawBuffers[ 0 ] = gl.COLOR_ATTACHMENT0;\n\n\t\t\t\t\tneedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( drawBuffers[ 0 ] !== gl.BACK ) {\n\n\t\t\t\tdrawBuffers[ 0 ] = gl.BACK;\n\n\t\t\t\tneedsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( needsUpdate ) {\n\n\t\t\tif ( capabilities.isWebGL2 ) {\n\n\t\t\t\tgl.drawBuffers( drawBuffers );\n\n\t\t\t} else {\n\n\t\t\t\textensions.get( 'WEBGL_draw_buffers' ).drawBuffersWEBGL( drawBuffers );\n\n\t\t\t}\n\n\t\t}\n\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tconst equationToGL = {\n\t\t[ AddEquation ]: gl.FUNC_ADD,\n\t\t[ SubtractEquation ]: gl.FUNC_SUBTRACT,\n\t\t[ ReverseSubtractEquation ]: gl.FUNC_REVERSE_SUBTRACT\n\t};\n\n\tif ( isWebGL2 ) {\n\n\t\tequationToGL[ MinEquation ] = gl.MIN;\n\t\tequationToGL[ MaxEquation ] = gl.MAX;\n\n\t} else {\n\n\t\tconst extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t}\n\n\t}\n\n\tconst factorToGL = {\n\t\t[ ZeroFactor ]: gl.ZERO,\n\t\t[ OneFactor ]: gl.ONE,\n\t\t[ SrcColorFactor ]: gl.SRC_COLOR,\n\t\t[ SrcAlphaFactor ]: gl.SRC_ALPHA,\n\t\t[ SrcAlphaSaturateFactor ]: gl.SRC_ALPHA_SATURATE,\n\t\t[ DstColorFactor ]: gl.DST_COLOR,\n\t\t[ DstAlphaFactor ]: gl.DST_ALPHA,\n\t\t[ OneMinusSrcColorFactor ]: gl.ONE_MINUS_SRC_COLOR,\n\t\t[ OneMinusSrcAlphaFactor ]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t[ OneMinusDstColorFactor ]: gl.ONE_MINUS_DST_COLOR,\n\t\t[ OneMinusDstAlphaFactor ]: gl.ONE_MINUS_DST_ALPHA\n\t};\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending === NoBlending ) {\n\n\t\t\tif ( currentBlendingEnabled === true ) {\n\n\t\t\t\tdisable( gl.BLEND );\n\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( currentBlendingEnabled === false ) {\n\n\t\t\tenable( gl.BLEND );\n\t\t\tcurrentBlendingEnabled = true;\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\n\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ONE, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ZERO, gl.ONE );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\tcurrentBlendDst = null;\n\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\tcurrentBlending = blending;\n\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t}\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// custom blending\n\n\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t}\n\n\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\tcurrentBlendDst = blendDst;\n\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = false;\n\n\t}\n\n\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tlet flipSided = ( material.side === BackSide );\n\t\tif ( frontFaceCW ) flipSided = ! flipSided;\n\n\t\tsetFlipSided( flipSided );\n\n\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t? setBlending( NoBlending )\n\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tconst stencilWrite = material.stencilWrite;\n\t\tstencilBuffer.setTest( stencilWrite );\n\t\tif ( stencilWrite ) {\n\n\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t}\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\tmaterial.alphaToCoverage === true\n\t\t\t? enable( gl.SAMPLE_ALPHA_TO_COVERAGE )\n\t\t\t: disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture, webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\twebglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\t} else {\n\n\t\t\t\twebglSlot = currentTextureSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlet boundTexture = currentBoundTextures[ webglSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ webglSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction unbindTexture() {\n\n\t\tconst boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\tboundTexture.type = undefined;\n\t\t\tboundTexture.texture = undefined;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexSubImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexSubImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texStorage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texStorage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage3D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\tfunction updateUBOMapping( uniformsGroup, program ) {\n\n\t\tlet mapping = uboProgamMap.get( program );\n\n\t\tif ( mapping === undefined ) {\n\n\t\t\tmapping = new WeakMap();\n\n\t\t\tuboProgamMap.set( program, mapping );\n\n\t\t}\n\n\t\tlet blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( blockIndex === undefined ) {\n\n\t\t\tblockIndex = gl.getUniformBlockIndex( program, uniformsGroup.name );\n\n\t\t\tmapping.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\tfunction uniformBlockBinding( uniformsGroup, program ) {\n\n\t\tconst mapping = uboProgamMap.get( program );\n\t\tconst blockIndex = mapping.get( uniformsGroup );\n\n\t\tif ( uboBindings.get( uniformsGroup ) !== blockIndex ) {\n\n\t\t\t// bind shader specific block index to global block point\n\n\t\t\tgl.uniformBlockBinding( program, blockIndex, uniformsGroup.__bindingPointIndex );\n\n\t\t\tuboBindings.set( uniformsGroup, blockIndex );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\t// reset state\n\n\t\tgl.disable( gl.BLEND );\n\t\tgl.disable( gl.CULL_FACE );\n\t\tgl.disable( gl.DEPTH_TEST );\n\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\n\t\tgl.disable( gl.SCISSOR_TEST );\n\t\tgl.disable( gl.STENCIL_TEST );\n\t\tgl.disable( gl.SAMPLE_ALPHA_TO_COVERAGE );\n\n\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\tgl.blendFunc( gl.ONE, gl.ZERO );\n\t\tgl.blendFuncSeparate( gl.ONE, gl.ZERO, gl.ONE, gl.ZERO );\n\n\t\tgl.colorMask( true, true, true, true );\n\t\tgl.clearColor( 0, 0, 0, 0 );\n\n\t\tgl.depthMask( true );\n\t\tgl.depthFunc( gl.LESS );\n\t\tgl.clearDepth( 1 );\n\n\t\tgl.stencilMask( 0xffffffff );\n\t\tgl.stencilFunc( gl.ALWAYS, 0, 0xffffffff );\n\t\tgl.stencilOp( gl.KEEP, gl.KEEP, gl.KEEP );\n\t\tgl.clearStencil( 0 );\n\n\t\tgl.cullFace( gl.BACK );\n\t\tgl.frontFace( gl.CCW );\n\n\t\tgl.polygonOffset( 0, 0 );\n\n\t\tgl.activeTexture( gl.TEXTURE0 );\n\n\t\tgl.bindFramebuffer( gl.FRAMEBUFFER, null );\n\n\t\tif ( isWebGL2 === true ) {\n\n\t\t\tgl.bindFramebuffer( gl.DRAW_FRAMEBUFFER, null );\n\t\t\tgl.bindFramebuffer( gl.READ_FRAMEBUFFER, null );\n\n\t\t}\n\n\t\tgl.useProgram( null );\n\n\t\tgl.lineWidth( 1 );\n\n\t\tgl.scissor( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tgl.viewport( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\t// reset internals\n\n\t\tenabledCapabilities = {};\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentBoundFramebuffers = {};\n\t\tcurrentDrawbuffers = new WeakMap();\n\t\tdefaultDrawbuffers = [];\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlendingEnabled = false;\n\t\tcurrentBlending = null;\n\t\tcurrentBlendEquation = null;\n\t\tcurrentBlendSrc = null;\n\t\tcurrentBlendDst = null;\n\t\tcurrentBlendEquationAlpha = null;\n\t\tcurrentBlendSrcAlpha = null;\n\t\tcurrentBlendDstAlpha = null;\n\t\tcurrentPremultipledAlpha = false;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcurrentLineWidth = null;\n\n\t\tcurrentPolygonOffsetFactor = null;\n\t\tcurrentPolygonOffsetUnits = null;\n\n\t\tcurrentScissor.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\t\tcurrentViewport.set( 0, 0, gl.canvas.width, gl.canvas.height );\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tenable: enable,\n\t\tdisable: disable,\n\n\t\tbindFramebuffer: bindFramebuffer,\n\t\tdrawBuffers: drawBuffers,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tunbindTexture: unbindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\tcompressedTexImage3D: compressedTexImage3D,\n\t\ttexImage2D: texImage2D,\n\t\ttexImage3D: texImage3D,\n\n\t\tupdateUBOMapping: updateUBOMapping,\n\t\tuniformBlockBinding: uniformBlockBinding,\n\n\t\ttexStorage2D: texStorage2D,\n\t\ttexStorage3D: texStorage3D,\n\t\ttexSubImage2D: texSubImage2D,\n\t\ttexSubImage3D: texSubImage3D,\n\t\tcompressedTexSubImage2D: compressedTexSubImage2D,\n\t\tcompressedTexSubImage3D: compressedTexSubImage3D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\nexport { WebGLState };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}