{"ast":null,"code":"import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nconst _vector = /*@__PURE__*/new Vector3();\nclass SpotLightHelper extends Object3D {\n  constructor(light, color) {\n    super();\n    this.light = light;\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    this.type = 'SpotLightHelper';\n    const geometry = new BufferGeometry();\n    const positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n    for (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n      const p1 = i / l * Math.PI * 2;\n      const p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    const material = new LineBasicMaterial({\n      fog: false,\n      toneMapped: false\n    });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n  dispose() {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  }\n  update() {\n    this.light.updateWorldMatrix(true, false);\n    this.light.target.updateWorldMatrix(true, false);\n    const coneLength = this.light.distance ? this.light.distance : 1000;\n    const coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n    _vector.setFromMatrixPosition(this.light.target.matrixWorld);\n    this.cone.lookAt(_vector);\n    if (this.color !== undefined) {\n      this.cone.material.color.set(this.color);\n    } else {\n      this.cone.material.color.copy(this.light.color);\n    }\n  }\n}\nexport { SpotLightHelper };","map":{"version":3,"names":["Vector3","Object3D","LineSegments","LineBasicMaterial","Float32BufferAttribute","BufferGeometry","_vector","SpotLightHelper","constructor","light","color","matrix","matrixWorld","matrixAutoUpdate","type","geometry","positions","i","j","l","p1","Math","PI","p2","push","cos","sin","setAttribute","material","fog","toneMapped","cone","add","update","dispose","updateWorldMatrix","target","coneLength","distance","coneWidth","tan","angle","scale","set","setFromMatrixPosition","lookAt","undefined","copy"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/helpers/SpotLightHelper.js"],"sourcesContent":["import { Vector3 } from '../math/Vector3.js';\nimport { Object3D } from '../core/Object3D.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\n\nclass SpotLightHelper extends Object3D {\n\n\tconstructor( light, color ) {\n\n\t\tsuper();\n\n\t\tthis.light = light;\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tthis.type = 'SpotLightHelper';\n\n\t\tconst geometry = new BufferGeometry();\n\n\t\tconst positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( let i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tconst p1 = ( i / l ) * Math.PI * 2;\n\t\t\tconst p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { fog: false, toneMapped: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tdispose() {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t}\n\n\tupdate() {\n\n\t\tthis.light.updateWorldMatrix( true, false );\n\t\tthis.light.target.updateWorldMatrix( true, false );\n\n\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tconst coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t}\n\n}\n\n\nexport { SpotLightHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}