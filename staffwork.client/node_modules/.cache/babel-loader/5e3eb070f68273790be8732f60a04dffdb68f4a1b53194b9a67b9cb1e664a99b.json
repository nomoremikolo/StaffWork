{"ast":null,"code":"import Node from '../core/Node.js';\nimport VaryingNode from '../core/VaryingNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport NormalNode from './NormalNode.js';\nimport TangentNode from './TangentNode.js';\nclass BitangentNode extends Node {\n  static GEOMETRY = 'geometry';\n  static LOCAL = 'local';\n  static VIEW = 'view';\n  static WORLD = 'world';\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : BitangentNode.LOCAL;\n    super('vec3');\n    this.scope = scope;\n  }\n  getHash( /*builder*/\n  ) {\n    return `bitangent-${this.scope}`;\n  }\n  generate(builder) {\n    const scope = this.scope;\n    const crossNormalTangent = new MathNode(MathNode.CROSS, new NormalNode(scope), new TangentNode(scope));\n    const tangentW = new SplitNode(new TangentNode(TangentNode.GEOMETRY), 'w');\n    const vertexNode = new SplitNode(new OperatorNode('*', crossNormalTangent, tangentW), 'xyz');\n    const outputNode = new MathNode(MathNode.NORMALIZE, new VaryingNode(vertexNode));\n    return outputNode.build(builder, this.getNodeType(builder));\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\nexport default BitangentNode;","map":{"version":3,"names":["Node","VaryingNode","OperatorNode","MathNode","SplitNode","NormalNode","TangentNode","BitangentNode","GEOMETRY","LOCAL","VIEW","WORLD","constructor","scope","getHash","generate","builder","crossNormalTangent","CROSS","tangentW","vertexNode","outputNode","NORMALIZE","build","getNodeType","serialize","data","deserialize"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/accessors/BitangentNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport VaryingNode from '../core/VaryingNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport NormalNode from './NormalNode.js';\nimport TangentNode from './TangentNode.js';\n\nclass BitangentNode extends Node {\n\n\tstatic GEOMETRY = 'geometry';\n\tstatic LOCAL = 'local';\n\tstatic VIEW = 'view';\n\tstatic WORLD = 'world';\n\n\tconstructor( scope = BitangentNode.LOCAL ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `bitangent-${this.scope}`;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tconst crossNormalTangent = new MathNode( MathNode.CROSS, new NormalNode( scope ), new TangentNode( scope ) );\n\t\tconst tangentW = new SplitNode( new TangentNode( TangentNode.GEOMETRY ), 'w' );\n\t\tconst vertexNode = new SplitNode( new OperatorNode( '*', crossNormalTangent, tangentW ), 'xyz' );\n\n\t\tconst outputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nexport default BitangentNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,UAAU,MAAM,iBAAiB;AACxC,OAAOC,WAAW,MAAM,kBAAkB;AAE1C,MAAMC,aAAa,SAASP,IAAI,CAAC;EAEhC,OAAOQ,QAAQ,GAAG,UAAU;EAC5B,OAAOC,KAAK,GAAG,OAAO;EACtB,OAAOC,IAAI,GAAG,MAAM;EACpB,OAAOC,KAAK,GAAG,OAAO;EAEtBC,WAAW,GAAgC;IAAA,IAA9BC,KAAK,uEAAGN,aAAa,CAACE,KAAK;IAEvC,KAAK,CAAE,MAAM,CAAE;IAEf,IAAI,CAACI,KAAK,GAAGA,KAAK;EAEnB;EAEAC,OAAO,EAAE;EAAA,EAAc;IAEtB,OAAQ,aAAY,IAAI,CAACD,KAAM,EAAC;EAEjC;EAEAE,QAAQ,CAAEC,OAAO,EAAG;IAEnB,MAAMH,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,MAAMI,kBAAkB,GAAG,IAAId,QAAQ,CAAEA,QAAQ,CAACe,KAAK,EAAE,IAAIb,UAAU,CAAEQ,KAAK,CAAE,EAAE,IAAIP,WAAW,CAAEO,KAAK,CAAE,CAAE;IAC5G,MAAMM,QAAQ,GAAG,IAAIf,SAAS,CAAE,IAAIE,WAAW,CAAEA,WAAW,CAACE,QAAQ,CAAE,EAAE,GAAG,CAAE;IAC9E,MAAMY,UAAU,GAAG,IAAIhB,SAAS,CAAE,IAAIF,YAAY,CAAE,GAAG,EAAEe,kBAAkB,EAAEE,QAAQ,CAAE,EAAE,KAAK,CAAE;IAEhG,MAAME,UAAU,GAAG,IAAIlB,QAAQ,CAAEA,QAAQ,CAACmB,SAAS,EAAE,IAAIrB,WAAW,CAAEmB,UAAU,CAAE,CAAE;IAEpF,OAAOC,UAAU,CAACE,KAAK,CAAEP,OAAO,EAAE,IAAI,CAACQ,WAAW,CAAER,OAAO,CAAE,CAAE;EAEhE;EAEAS,SAAS,CAAEC,IAAI,EAAG;IAEjB,KAAK,CAACD,SAAS,CAAEC,IAAI,CAAE;IAEvBA,IAAI,CAACb,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB;EAEAc,WAAW,CAAED,IAAI,EAAG;IAEnB,KAAK,CAACC,WAAW,CAAED,IAAI,CAAE;IAEzB,IAAI,CAACb,KAAK,GAAGa,IAAI,CAACb,KAAK;EAExB;AAED;AAEA,eAAeN,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}