{"ast":null,"code":"import { Earcut } from './Earcut.js';\nclass ShapeUtils {\n  // calculate area of the contour polygon\n\n  static area(contour) {\n    const n = contour.length;\n    let a = 0.0;\n    for (let p = n - 1, q = 0; q < n; p = q++) {\n      a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n    }\n    return a * 0.5;\n  }\n  static isClockWise(pts) {\n    return ShapeUtils.area(pts) < 0;\n  }\n  static triangulateShape(contour, holes) {\n    const vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n    const holeIndices = []; // array of hole indices\n    const faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n    removeDupEndPts(contour);\n    addContour(vertices, contour);\n\n    //\n\n    let holeIndex = contour.length;\n    holes.forEach(removeDupEndPts);\n    for (let i = 0; i < holes.length; i++) {\n      holeIndices.push(holeIndex);\n      holeIndex += holes[i].length;\n      addContour(vertices, holes[i]);\n    }\n\n    //\n\n    const triangles = Earcut.triangulate(vertices, holeIndices);\n\n    //\n\n    for (let i = 0; i < triangles.length; i += 3) {\n      faces.push(triangles.slice(i, i + 3));\n    }\n    return faces;\n  }\n}\nfunction removeDupEndPts(points) {\n  const l = points.length;\n  if (l > 2 && points[l - 1].equals(points[0])) {\n    points.pop();\n  }\n}\nfunction addContour(vertices, contour) {\n  for (let i = 0; i < contour.length; i++) {\n    vertices.push(contour[i].x);\n    vertices.push(contour[i].y);\n  }\n}\nexport { ShapeUtils };","map":{"version":3,"names":["Earcut","ShapeUtils","area","contour","n","length","a","p","q","x","y","isClockWise","pts","triangulateShape","holes","vertices","holeIndices","faces","removeDupEndPts","addContour","holeIndex","forEach","i","push","triangles","triangulate","slice","points","l","equals","pop"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/extras/ShapeUtils.js"],"sourcesContent":["import { Earcut } from './Earcut.js';\n\nclass ShapeUtils {\n\n\t// calculate area of the contour polygon\n\n\tstatic area( contour ) {\n\n\t\tconst n = contour.length;\n\t\tlet a = 0.0;\n\n\t\tfor ( let p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t}\n\n\tstatic isClockWise( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n\tstatic triangulateShape( contour, holes ) {\n\n\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\tconst holeIndices = []; // array of hole indices\n\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\tremoveDupEndPts( contour );\n\t\taddContour( vertices, contour );\n\n\t\t//\n\n\t\tlet holeIndex = contour.length;\n\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfor ( let i = 0; i < holes.length; i ++ ) {\n\n\t\t\tholeIndices.push( holeIndex );\n\t\t\tholeIndex += holes[ i ].length;\n\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t}\n\n\t\t//\n\n\t\tconst triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t//\n\n\t\tfor ( let i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t}\n\n\t\treturn faces;\n\n\t}\n\n}\n\nfunction removeDupEndPts( points ) {\n\n\tconst l = points.length;\n\n\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\tpoints.pop();\n\n\t}\n\n}\n\nfunction addContour( vertices, contour ) {\n\n\tfor ( let i = 0; i < contour.length; i ++ ) {\n\n\t\tvertices.push( contour[ i ].x );\n\t\tvertices.push( contour[ i ].y );\n\n\t}\n\n}\n\nexport { ShapeUtils };\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,aAAa;AAEpC,MAAMC,UAAU,CAAC;EAEhB;;EAEA,OAAOC,IAAI,CAAEC,OAAO,EAAG;IAEtB,MAAMC,CAAC,GAAGD,OAAO,CAACE,MAAM;IACxB,IAAIC,CAAC,GAAG,GAAG;IAEX,KAAM,IAAIC,CAAC,GAAGH,CAAC,GAAG,CAAC,EAAEI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,CAAC,EAAEG,CAAC,GAAGC,CAAC,EAAG,EAAG;MAE7CF,CAAC,IAAIH,OAAO,CAAEI,CAAC,CAAE,CAACE,CAAC,GAAGN,OAAO,CAAEK,CAAC,CAAE,CAACE,CAAC,GAAGP,OAAO,CAAEK,CAAC,CAAE,CAACC,CAAC,GAAGN,OAAO,CAAEI,CAAC,CAAE,CAACG,CAAC;IAEvE;IAEA,OAAOJ,CAAC,GAAG,GAAG;EAEf;EAEA,OAAOK,WAAW,CAAEC,GAAG,EAAG;IAEzB,OAAOX,UAAU,CAACC,IAAI,CAAEU,GAAG,CAAE,GAAG,CAAC;EAElC;EAEA,OAAOC,gBAAgB,CAAEV,OAAO,EAAEW,KAAK,EAAG;IAEzC,MAAMC,QAAQ,GAAG,EAAE,CAAC,CAAC;IACrB,MAAMC,WAAW,GAAG,EAAE,CAAC,CAAC;IACxB,MAAMC,KAAK,GAAG,EAAE,CAAC,CAAC;;IAElBC,eAAe,CAAEf,OAAO,CAAE;IAC1BgB,UAAU,CAAEJ,QAAQ,EAAEZ,OAAO,CAAE;;IAE/B;;IAEA,IAAIiB,SAAS,GAAGjB,OAAO,CAACE,MAAM;IAE9BS,KAAK,CAACO,OAAO,CAAEH,eAAe,CAAE;IAEhC,KAAM,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGR,KAAK,CAACT,MAAM,EAAEiB,CAAC,EAAG,EAAG;MAEzCN,WAAW,CAACO,IAAI,CAAEH,SAAS,CAAE;MAC7BA,SAAS,IAAIN,KAAK,CAAEQ,CAAC,CAAE,CAACjB,MAAM;MAC9Bc,UAAU,CAAEJ,QAAQ,EAAED,KAAK,CAAEQ,CAAC,CAAE,CAAE;IAEnC;;IAEA;;IAEA,MAAME,SAAS,GAAGxB,MAAM,CAACyB,WAAW,CAAEV,QAAQ,EAAEC,WAAW,CAAE;;IAE7D;;IAEA,KAAM,IAAIM,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGE,SAAS,CAACnB,MAAM,EAAEiB,CAAC,IAAI,CAAC,EAAG;MAE/CL,KAAK,CAACM,IAAI,CAAEC,SAAS,CAACE,KAAK,CAAEJ,CAAC,EAAEA,CAAC,GAAG,CAAC,CAAE,CAAE;IAE1C;IAEA,OAAOL,KAAK;EAEb;AAED;AAEA,SAASC,eAAe,CAAES,MAAM,EAAG;EAElC,MAAMC,CAAC,GAAGD,MAAM,CAACtB,MAAM;EAEvB,IAAKuB,CAAC,GAAG,CAAC,IAAID,MAAM,CAAEC,CAAC,GAAG,CAAC,CAAE,CAACC,MAAM,CAAEF,MAAM,CAAE,CAAC,CAAE,CAAE,EAAG;IAErDA,MAAM,CAACG,GAAG,EAAE;EAEb;AAED;AAEA,SAASX,UAAU,CAAEJ,QAAQ,EAAEZ,OAAO,EAAG;EAExC,KAAM,IAAImB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGnB,OAAO,CAACE,MAAM,EAAEiB,CAAC,EAAG,EAAG;IAE3CP,QAAQ,CAACQ,IAAI,CAAEpB,OAAO,CAAEmB,CAAC,CAAE,CAACb,CAAC,CAAE;IAC/BM,QAAQ,CAACQ,IAAI,CAAEpB,OAAO,CAAEmB,CAAC,CAAE,CAACZ,CAAC,CAAE;EAEhC;AAED;AAEA,SAAST,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}