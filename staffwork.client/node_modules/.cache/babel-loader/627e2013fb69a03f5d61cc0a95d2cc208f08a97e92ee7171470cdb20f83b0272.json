{"ast":null,"code":"import { BackSide, DoubleSide, CubeUVReflectionMapping, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping, LinearEncoding, sRGBEncoding, NormalBlending } from '../../constants.js';\nimport { Layers } from '../../core/Layers.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { WebGLShaderCache } from './WebGLShaderCache.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\nfunction WebGLPrograms(renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping) {\n  const _programLayers = new Layers();\n  const _customShaders = new WebGLShaderCache();\n  const programs = [];\n  const isWebGL2 = capabilities.isWebGL2;\n  const logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n  const vertexTextures = capabilities.vertexTextures;\n  let precision = capabilities.precision;\n  const shaderIDs = {\n    MeshDepthMaterial: 'depth',\n    MeshDistanceMaterial: 'distanceRGBA',\n    MeshNormalMaterial: 'normal',\n    MeshBasicMaterial: 'basic',\n    MeshLambertMaterial: 'lambert',\n    MeshPhongMaterial: 'phong',\n    MeshToonMaterial: 'toon',\n    MeshStandardMaterial: 'physical',\n    MeshPhysicalMaterial: 'physical',\n    MeshMatcapMaterial: 'matcap',\n    LineBasicMaterial: 'basic',\n    LineDashedMaterial: 'dashed',\n    PointsMaterial: 'points',\n    ShadowMaterial: 'shadow',\n    SpriteMaterial: 'sprite'\n  };\n  function getParameters(material, lights, shadows, scene, object) {\n    const fog = scene.fog;\n    const geometry = object.geometry;\n    const environment = material.isMeshStandardMaterial ? scene.environment : null;\n    const envMap = (material.isMeshStandardMaterial ? cubeuvmaps : cubemaps).get(material.envMap || environment);\n    const envMapCubeUVHeight = !!envMap && envMap.mapping === CubeUVReflectionMapping ? envMap.image.height : null;\n    const shaderID = shaderIDs[material.type];\n\n    // heuristics to create shader parameters according to lights in the scene\n    // (not to blow over maxLights budget)\n\n    if (material.precision !== null) {\n      precision = capabilities.getMaxPrecision(material.precision);\n      if (precision !== material.precision) {\n        console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n      }\n    }\n\n    //\n\n    const morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n    const morphTargetsCount = morphAttribute !== undefined ? morphAttribute.length : 0;\n    let morphTextureStride = 0;\n    if (geometry.morphAttributes.position !== undefined) morphTextureStride = 1;\n    if (geometry.morphAttributes.normal !== undefined) morphTextureStride = 2;\n    if (geometry.morphAttributes.color !== undefined) morphTextureStride = 3;\n\n    //\n\n    let vertexShader, fragmentShader;\n    let customVertexShaderID, customFragmentShaderID;\n    if (shaderID) {\n      const shader = ShaderLib[shaderID];\n      vertexShader = shader.vertexShader;\n      fragmentShader = shader.fragmentShader;\n    } else {\n      vertexShader = material.vertexShader;\n      fragmentShader = material.fragmentShader;\n      _customShaders.update(material);\n      customVertexShaderID = _customShaders.getVertexShaderID(material);\n      customFragmentShaderID = _customShaders.getFragmentShaderID(material);\n    }\n    const currentRenderTarget = renderer.getRenderTarget();\n    const useAlphaTest = material.alphaTest > 0;\n    const useClearcoat = material.clearcoat > 0;\n    const useIridescence = material.iridescence > 0;\n    const parameters = {\n      isWebGL2: isWebGL2,\n      shaderID: shaderID,\n      shaderName: material.type,\n      vertexShader: vertexShader,\n      fragmentShader: fragmentShader,\n      defines: material.defines,\n      customVertexShaderID: customVertexShaderID,\n      customFragmentShaderID: customFragmentShaderID,\n      isRawShaderMaterial: material.isRawShaderMaterial === true,\n      glslVersion: material.glslVersion,\n      precision: precision,\n      instancing: object.isInstancedMesh === true,\n      instancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n      supportsVertexTextures: vertexTextures,\n      outputEncoding: currentRenderTarget === null ? renderer.outputEncoding : currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding,\n      map: !!material.map,\n      matcap: !!material.matcap,\n      envMap: !!envMap,\n      envMapMode: envMap && envMap.mapping,\n      envMapCubeUVHeight: envMapCubeUVHeight,\n      lightMap: !!material.lightMap,\n      aoMap: !!material.aoMap,\n      emissiveMap: !!material.emissiveMap,\n      bumpMap: !!material.bumpMap,\n      normalMap: !!material.normalMap,\n      objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n      tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n      decodeVideoTexture: !!material.map && material.map.isVideoTexture === true && material.map.encoding === sRGBEncoding,\n      clearcoat: useClearcoat,\n      clearcoatMap: useClearcoat && !!material.clearcoatMap,\n      clearcoatRoughnessMap: useClearcoat && !!material.clearcoatRoughnessMap,\n      clearcoatNormalMap: useClearcoat && !!material.clearcoatNormalMap,\n      iridescence: useIridescence,\n      iridescenceMap: useIridescence && !!material.iridescenceMap,\n      iridescenceThicknessMap: useIridescence && !!material.iridescenceThicknessMap,\n      displacementMap: !!material.displacementMap,\n      roughnessMap: !!material.roughnessMap,\n      metalnessMap: !!material.metalnessMap,\n      specularMap: !!material.specularMap,\n      specularIntensityMap: !!material.specularIntensityMap,\n      specularColorMap: !!material.specularColorMap,\n      opaque: material.transparent === false && material.blending === NormalBlending,\n      alphaMap: !!material.alphaMap,\n      alphaTest: useAlphaTest,\n      gradientMap: !!material.gradientMap,\n      sheen: material.sheen > 0,\n      sheenColorMap: !!material.sheenColorMap,\n      sheenRoughnessMap: !!material.sheenRoughnessMap,\n      transmission: material.transmission > 0,\n      transmissionMap: !!material.transmissionMap,\n      thicknessMap: !!material.thicknessMap,\n      combine: material.combine,\n      vertexTangents: !!material.normalMap && !!geometry.attributes.tangent,\n      vertexColors: material.vertexColors,\n      vertexAlphas: material.vertexColors === true && !!geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n      vertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.iridescenceMap || !!material.iridescenceThicknessMap || !!material.displacementMap || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || !!material.sheenColorMap || !!material.sheenRoughnessMap,\n      uvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.iridescenceMap || !!material.iridescenceThicknessMap || material.transmission > 0 || !!material.transmissionMap || !!material.thicknessMap || !!material.specularIntensityMap || !!material.specularColorMap || material.sheen > 0 || !!material.sheenColorMap || !!material.sheenRoughnessMap) && !!material.displacementMap,\n      fog: !!fog,\n      useFog: material.fog === true,\n      fogExp2: fog && fog.isFogExp2,\n      flatShading: !!material.flatShading,\n      sizeAttenuation: material.sizeAttenuation,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      skinning: object.isSkinnedMesh === true,\n      morphTargets: geometry.morphAttributes.position !== undefined,\n      morphNormals: geometry.morphAttributes.normal !== undefined,\n      morphColors: geometry.morphAttributes.color !== undefined,\n      morphTargetsCount: morphTargetsCount,\n      morphTextureStride: morphTextureStride,\n      numDirLights: lights.directional.length,\n      numPointLights: lights.point.length,\n      numSpotLights: lights.spot.length,\n      numSpotLightMaps: lights.spotLightMap.length,\n      numRectAreaLights: lights.rectArea.length,\n      numHemiLights: lights.hemi.length,\n      numDirLightShadows: lights.directionalShadowMap.length,\n      numPointLightShadows: lights.pointShadowMap.length,\n      numSpotLightShadows: lights.spotShadowMap.length,\n      numSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n      numClippingPlanes: clipping.numPlanes,\n      numClipIntersection: clipping.numIntersection,\n      dithering: material.dithering,\n      shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n      shadowMapType: renderer.shadowMap.type,\n      toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n      physicallyCorrectLights: renderer.physicallyCorrectLights,\n      premultipliedAlpha: material.premultipliedAlpha,\n      doubleSided: material.side === DoubleSide,\n      flipSided: material.side === BackSide,\n      useDepthPacking: !!material.depthPacking,\n      depthPacking: material.depthPacking || 0,\n      index0AttributeName: material.index0AttributeName,\n      extensionDerivatives: material.extensions && material.extensions.derivatives,\n      extensionFragDepth: material.extensions && material.extensions.fragDepth,\n      extensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n      extensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n      rendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n      rendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n      rendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n      customProgramCacheKey: material.customProgramCacheKey()\n    };\n    return parameters;\n  }\n  function getProgramCacheKey(parameters) {\n    const array = [];\n    if (parameters.shaderID) {\n      array.push(parameters.shaderID);\n    } else {\n      array.push(parameters.customVertexShaderID);\n      array.push(parameters.customFragmentShaderID);\n    }\n    if (parameters.defines !== undefined) {\n      for (const name in parameters.defines) {\n        array.push(name);\n        array.push(parameters.defines[name]);\n      }\n    }\n    if (parameters.isRawShaderMaterial === false) {\n      getProgramCacheKeyParameters(array, parameters);\n      getProgramCacheKeyBooleans(array, parameters);\n      array.push(renderer.outputEncoding);\n    }\n    array.push(parameters.customProgramCacheKey);\n    return array.join();\n  }\n  function getProgramCacheKeyParameters(array, parameters) {\n    array.push(parameters.precision);\n    array.push(parameters.outputEncoding);\n    array.push(parameters.envMapMode);\n    array.push(parameters.envMapCubeUVHeight);\n    array.push(parameters.combine);\n    array.push(parameters.vertexUvs);\n    array.push(parameters.fogExp2);\n    array.push(parameters.sizeAttenuation);\n    array.push(parameters.morphTargetsCount);\n    array.push(parameters.morphAttributeCount);\n    array.push(parameters.numDirLights);\n    array.push(parameters.numPointLights);\n    array.push(parameters.numSpotLights);\n    array.push(parameters.numSpotLightMaps);\n    array.push(parameters.numHemiLights);\n    array.push(parameters.numRectAreaLights);\n    array.push(parameters.numDirLightShadows);\n    array.push(parameters.numPointLightShadows);\n    array.push(parameters.numSpotLightShadows);\n    array.push(parameters.numSpotLightShadowsWithMaps);\n    array.push(parameters.shadowMapType);\n    array.push(parameters.toneMapping);\n    array.push(parameters.numClippingPlanes);\n    array.push(parameters.numClipIntersection);\n    array.push(parameters.depthPacking);\n  }\n  function getProgramCacheKeyBooleans(array, parameters) {\n    _programLayers.disableAll();\n    if (parameters.isWebGL2) _programLayers.enable(0);\n    if (parameters.supportsVertexTextures) _programLayers.enable(1);\n    if (parameters.instancing) _programLayers.enable(2);\n    if (parameters.instancingColor) _programLayers.enable(3);\n    if (parameters.map) _programLayers.enable(4);\n    if (parameters.matcap) _programLayers.enable(5);\n    if (parameters.envMap) _programLayers.enable(6);\n    if (parameters.lightMap) _programLayers.enable(7);\n    if (parameters.aoMap) _programLayers.enable(8);\n    if (parameters.emissiveMap) _programLayers.enable(9);\n    if (parameters.bumpMap) _programLayers.enable(10);\n    if (parameters.normalMap) _programLayers.enable(11);\n    if (parameters.objectSpaceNormalMap) _programLayers.enable(12);\n    if (parameters.tangentSpaceNormalMap) _programLayers.enable(13);\n    if (parameters.clearcoat) _programLayers.enable(14);\n    if (parameters.clearcoatMap) _programLayers.enable(15);\n    if (parameters.clearcoatRoughnessMap) _programLayers.enable(16);\n    if (parameters.clearcoatNormalMap) _programLayers.enable(17);\n    if (parameters.iridescence) _programLayers.enable(18);\n    if (parameters.iridescenceMap) _programLayers.enable(19);\n    if (parameters.iridescenceThicknessMap) _programLayers.enable(20);\n    if (parameters.displacementMap) _programLayers.enable(21);\n    if (parameters.specularMap) _programLayers.enable(22);\n    if (parameters.roughnessMap) _programLayers.enable(23);\n    if (parameters.metalnessMap) _programLayers.enable(24);\n    if (parameters.gradientMap) _programLayers.enable(25);\n    if (parameters.alphaMap) _programLayers.enable(26);\n    if (parameters.alphaTest) _programLayers.enable(27);\n    if (parameters.vertexColors) _programLayers.enable(28);\n    if (parameters.vertexAlphas) _programLayers.enable(29);\n    if (parameters.vertexUvs) _programLayers.enable(30);\n    if (parameters.vertexTangents) _programLayers.enable(31);\n    if (parameters.uvsVertexOnly) _programLayers.enable(32);\n    array.push(_programLayers.mask);\n    _programLayers.disableAll();\n    if (parameters.fog) _programLayers.enable(0);\n    if (parameters.useFog) _programLayers.enable(1);\n    if (parameters.flatShading) _programLayers.enable(2);\n    if (parameters.logarithmicDepthBuffer) _programLayers.enable(3);\n    if (parameters.skinning) _programLayers.enable(4);\n    if (parameters.morphTargets) _programLayers.enable(5);\n    if (parameters.morphNormals) _programLayers.enable(6);\n    if (parameters.morphColors) _programLayers.enable(7);\n    if (parameters.premultipliedAlpha) _programLayers.enable(8);\n    if (parameters.shadowMapEnabled) _programLayers.enable(9);\n    if (parameters.physicallyCorrectLights) _programLayers.enable(10);\n    if (parameters.doubleSided) _programLayers.enable(11);\n    if (parameters.flipSided) _programLayers.enable(12);\n    if (parameters.useDepthPacking) _programLayers.enable(13);\n    if (parameters.dithering) _programLayers.enable(14);\n    if (parameters.specularIntensityMap) _programLayers.enable(15);\n    if (parameters.specularColorMap) _programLayers.enable(16);\n    if (parameters.transmission) _programLayers.enable(17);\n    if (parameters.transmissionMap) _programLayers.enable(18);\n    if (parameters.thicknessMap) _programLayers.enable(19);\n    if (parameters.sheen) _programLayers.enable(20);\n    if (parameters.sheenColorMap) _programLayers.enable(21);\n    if (parameters.sheenRoughnessMap) _programLayers.enable(22);\n    if (parameters.decodeVideoTexture) _programLayers.enable(23);\n    if (parameters.opaque) _programLayers.enable(24);\n    array.push(_programLayers.mask);\n  }\n  function getUniforms(material) {\n    const shaderID = shaderIDs[material.type];\n    let uniforms;\n    if (shaderID) {\n      const shader = ShaderLib[shaderID];\n      uniforms = UniformsUtils.clone(shader.uniforms);\n    } else {\n      uniforms = material.uniforms;\n    }\n    return uniforms;\n  }\n  function acquireProgram(parameters, cacheKey) {\n    let program;\n\n    // Check if code has been already compiled\n    for (let p = 0, pl = programs.length; p < pl; p++) {\n      const preexistingProgram = programs[p];\n      if (preexistingProgram.cacheKey === cacheKey) {\n        program = preexistingProgram;\n        ++program.usedTimes;\n        break;\n      }\n    }\n    if (program === undefined) {\n      program = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n      programs.push(program);\n    }\n    return program;\n  }\n  function releaseProgram(program) {\n    if (--program.usedTimes === 0) {\n      // Remove from unordered set\n      const i = programs.indexOf(program);\n      programs[i] = programs[programs.length - 1];\n      programs.pop();\n\n      // Free WebGL resources\n      program.destroy();\n    }\n  }\n  function releaseShaderCache(material) {\n    _customShaders.remove(material);\n  }\n  function dispose() {\n    _customShaders.dispose();\n  }\n  return {\n    getParameters: getParameters,\n    getProgramCacheKey: getProgramCacheKey,\n    getUniforms: getUniforms,\n    acquireProgram: acquireProgram,\n    releaseProgram: releaseProgram,\n    releaseShaderCache: releaseShaderCache,\n    // Exposed for resource monitoring & error feedback via renderer.info:\n    programs: programs,\n    dispose: dispose\n  };\n}\nexport { WebGLPrograms };","map":{"version":3,"names":["BackSide","DoubleSide","CubeUVReflectionMapping","ObjectSpaceNormalMap","TangentSpaceNormalMap","NoToneMapping","LinearEncoding","sRGBEncoding","NormalBlending","Layers","WebGLProgram","WebGLShaderCache","ShaderLib","UniformsUtils","WebGLPrograms","renderer","cubemaps","cubeuvmaps","extensions","capabilities","bindingStates","clipping","_programLayers","_customShaders","programs","isWebGL2","logarithmicDepthBuffer","vertexTextures","precision","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshBasicMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","getParameters","material","lights","shadows","scene","object","fog","geometry","environment","isMeshStandardMaterial","envMap","get","envMapCubeUVHeight","mapping","image","height","shaderID","type","getMaxPrecision","console","warn","morphAttribute","morphAttributes","position","normal","color","morphTargetsCount","undefined","length","morphTextureStride","vertexShader","fragmentShader","customVertexShaderID","customFragmentShaderID","shader","update","getVertexShaderID","getFragmentShaderID","currentRenderTarget","getRenderTarget","useAlphaTest","alphaTest","useClearcoat","clearcoat","useIridescence","iridescence","parameters","shaderName","defines","isRawShaderMaterial","glslVersion","instancing","isInstancedMesh","instancingColor","instanceColor","supportsVertexTextures","outputEncoding","isXRRenderTarget","texture","encoding","map","matcap","envMapMode","lightMap","aoMap","emissiveMap","bumpMap","normalMap","objectSpaceNormalMap","normalMapType","tangentSpaceNormalMap","decodeVideoTexture","isVideoTexture","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","iridescenceMap","iridescenceThicknessMap","displacementMap","roughnessMap","metalnessMap","specularMap","specularIntensityMap","specularColorMap","opaque","transparent","blending","alphaMap","gradientMap","sheen","sheenColorMap","sheenRoughnessMap","transmission","transmissionMap","thicknessMap","combine","vertexTangents","attributes","tangent","vertexColors","vertexAlphas","itemSize","vertexUvs","uvsVertexOnly","useFog","fogExp2","isFogExp2","flatShading","sizeAttenuation","skinning","isSkinnedMesh","morphTargets","morphNormals","morphColors","numDirLights","directional","numPointLights","point","numSpotLights","spot","numSpotLightMaps","spotLightMap","numRectAreaLights","rectArea","numHemiLights","hemi","numDirLightShadows","directionalShadowMap","numPointLightShadows","pointShadowMap","numSpotLightShadows","spotShadowMap","numSpotLightShadowsWithMaps","numClippingPlanes","numPlanes","numClipIntersection","numIntersection","dithering","shadowMapEnabled","shadowMap","enabled","shadowMapType","toneMapping","toneMapped","physicallyCorrectLights","premultipliedAlpha","doubleSided","side","flipSided","useDepthPacking","depthPacking","index0AttributeName","extensionDerivatives","derivatives","extensionFragDepth","fragDepth","extensionDrawBuffers","drawBuffers","extensionShaderTextureLOD","shaderTextureLOD","rendererExtensionFragDepth","has","rendererExtensionDrawBuffers","rendererExtensionShaderTextureLod","customProgramCacheKey","getProgramCacheKey","array","push","name","getProgramCacheKeyParameters","getProgramCacheKeyBooleans","join","morphAttributeCount","disableAll","enable","mask","getUniforms","uniforms","clone","acquireProgram","cacheKey","program","p","pl","preexistingProgram","usedTimes","releaseProgram","i","indexOf","pop","destroy","releaseShaderCache","remove","dispose"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLPrograms.js"],"sourcesContent":["import { BackSide, DoubleSide, CubeUVReflectionMapping, ObjectSpaceNormalMap, TangentSpaceNormalMap, NoToneMapping, LinearEncoding, sRGBEncoding, NormalBlending } from '../../constants.js';\nimport { Layers } from '../../core/Layers.js';\nimport { WebGLProgram } from './WebGLProgram.js';\nimport { WebGLShaderCache } from './WebGLShaderCache.js';\nimport { ShaderLib } from '../shaders/ShaderLib.js';\nimport { UniformsUtils } from '../shaders/UniformsUtils.js';\n\nfunction WebGLPrograms( renderer, cubemaps, cubeuvmaps, extensions, capabilities, bindingStates, clipping ) {\n\n\tconst _programLayers = new Layers();\n\tconst _customShaders = new WebGLShaderCache();\n\tconst programs = [];\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\tconst vertexTextures = capabilities.vertexTextures;\n\tlet precision = capabilities.precision;\n\n\tconst shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'toon',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tMeshMatcapMaterial: 'matcap',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow',\n\t\tSpriteMaterial: 'sprite'\n\t};\n\n\tfunction getParameters( material, lights, shadows, scene, object ) {\n\n\t\tconst fog = scene.fog;\n\t\tconst geometry = object.geometry;\n\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\n\t\tconst envMap = ( material.isMeshStandardMaterial ? cubeuvmaps : cubemaps ).get( material.envMap || environment );\n\t\tconst envMapCubeUVHeight = ( !! envMap ) && ( envMap.mapping === CubeUVReflectionMapping ) ? envMap.image.height : null;\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tconst morphAttribute = geometry.morphAttributes.position || geometry.morphAttributes.normal || geometry.morphAttributes.color;\n\t\tconst morphTargetsCount = ( morphAttribute !== undefined ) ? morphAttribute.length : 0;\n\n\t\tlet morphTextureStride = 0;\n\n\t\tif ( geometry.morphAttributes.position !== undefined ) morphTextureStride = 1;\n\t\tif ( geometry.morphAttributes.normal !== undefined ) morphTextureStride = 2;\n\t\tif ( geometry.morphAttributes.color !== undefined ) morphTextureStride = 3;\n\n\t\t//\n\n\t\tlet vertexShader, fragmentShader;\n\t\tlet customVertexShaderID, customFragmentShaderID;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\n\t\t\tvertexShader = shader.vertexShader;\n\t\t\tfragmentShader = shader.fragmentShader;\n\n\t\t} else {\n\n\t\t\tvertexShader = material.vertexShader;\n\t\t\tfragmentShader = material.fragmentShader;\n\n\t\t\t_customShaders.update( material );\n\n\t\t\tcustomVertexShaderID = _customShaders.getVertexShaderID( material );\n\t\t\tcustomFragmentShaderID = _customShaders.getFragmentShaderID( material );\n\n\t\t}\n\n\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\tconst useAlphaTest = material.alphaTest > 0;\n\t\tconst useClearcoat = material.clearcoat > 0;\n\t\tconst useIridescence = material.iridescence > 0;\n\n\t\tconst parameters = {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tshaderID: shaderID,\n\t\t\tshaderName: material.type,\n\n\t\t\tvertexShader: vertexShader,\n\t\t\tfragmentShader: fragmentShader,\n\t\t\tdefines: material.defines,\n\n\t\t\tcustomVertexShaderID: customVertexShaderID,\n\t\t\tcustomFragmentShaderID: customFragmentShaderID,\n\n\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\tglslVersion: material.glslVersion,\n\n\t\t\tprecision: precision,\n\n\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\n\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\toutputEncoding: ( currentRenderTarget === null ) ? renderer.outputEncoding : ( currentRenderTarget.isXRRenderTarget === true ? currentRenderTarget.texture.encoding : LinearEncoding ),\n\t\t\tmap: !! material.map,\n\t\t\tmatcap: !! material.matcap,\n\t\t\tenvMap: !! envMap,\n\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\tenvMapCubeUVHeight: envMapCubeUVHeight,\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\n\t\t\tdecodeVideoTexture: !! material.map && ( material.map.isVideoTexture === true ) && ( material.map.encoding === sRGBEncoding ),\n\n\t\t\tclearcoat: useClearcoat,\n\t\t\tclearcoatMap: useClearcoat && !! material.clearcoatMap,\n\t\t\tclearcoatRoughnessMap: useClearcoat && !! material.clearcoatRoughnessMap,\n\t\t\tclearcoatNormalMap: useClearcoat && !! material.clearcoatNormalMap,\n\n\t\t\tiridescence: useIridescence,\n\t\t\tiridescenceMap: useIridescence && !! material.iridescenceMap,\n\t\t\tiridescenceThicknessMap: useIridescence && !! material.iridescenceThicknessMap,\n\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\tspecularIntensityMap: !! material.specularIntensityMap,\n\t\t\tspecularColorMap: !! material.specularColorMap,\n\n\t\t\topaque: material.transparent === false && material.blending === NormalBlending,\n\n\t\t\talphaMap: !! material.alphaMap,\n\t\t\talphaTest: useAlphaTest,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tsheen: material.sheen > 0,\n\t\t\tsheenColorMap: !! material.sheenColorMap,\n\t\t\tsheenRoughnessMap: !! material.sheenRoughnessMap,\n\n\t\t\ttransmission: material.transmission > 0,\n\t\t\ttransmissionMap: !! material.transmissionMap,\n\t\t\tthicknessMap: !! material.thicknessMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexTangents: ( !! material.normalMap && !! geometry.attributes.tangent ),\n\t\t\tvertexColors: material.vertexColors,\n\t\t\tvertexAlphas: material.vertexColors === true && !! geometry.attributes.color && geometry.attributes.color.itemSize === 4,\n\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatMap || !! material.clearcoatRoughnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || !! material.displacementMap || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || !! material.sheenColorMap || !! material.sheenRoughnessMap,\n\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.iridescenceMap || !! material.iridescenceThicknessMap || material.transmission > 0 || !! material.transmissionMap || !! material.thicknessMap || !! material.specularIntensityMap || !! material.specularColorMap || material.sheen > 0 || !! material.sheenColorMap || !! material.sheenRoughnessMap ) && !! material.displacementMap,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog === true,\n\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: !! material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tskinning: object.isSkinnedMesh === true,\n\n\t\t\tmorphTargets: geometry.morphAttributes.position !== undefined,\n\t\t\tmorphNormals: geometry.morphAttributes.normal !== undefined,\n\t\t\tmorphColors: geometry.morphAttributes.color !== undefined,\n\t\t\tmorphTargetsCount: morphTargetsCount,\n\t\t\tmorphTextureStride: morphTextureStride,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumSpotLightMaps: lights.spotLightMap.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\tnumSpotLightShadowsWithMaps: lights.numSpotLightShadowsWithMaps,\n\n\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\tnumClipIntersection: clipping.numIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tuseDepthPacking: !! material.depthPacking,\n\t\t\tdepthPacking: material.depthPacking || 0,\n\n\t\t\tindex0AttributeName: material.index0AttributeName,\n\n\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\n\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has( 'EXT_frag_depth' ),\n\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has( 'WEBGL_draw_buffers' ),\n\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has( 'EXT_shader_texture_lod' ),\n\n\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\n\t\t};\n\n\t\treturn parameters;\n\n\t}\n\n\tfunction getProgramCacheKey( parameters ) {\n\n\t\tconst array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( parameters.customVertexShaderID );\n\t\t\tarray.push( parameters.customFragmentShaderID );\n\n\t\t}\n\n\t\tif ( parameters.defines !== undefined ) {\n\n\t\t\tfor ( const name in parameters.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( parameters.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( parameters.isRawShaderMaterial === false ) {\n\n\t\t\tgetProgramCacheKeyParameters( array, parameters );\n\t\t\tgetProgramCacheKeyBooleans( array, parameters );\n\t\t\tarray.push( renderer.outputEncoding );\n\n\t\t}\n\n\t\tarray.push( parameters.customProgramCacheKey );\n\n\t\treturn array.join();\n\n\t}\n\n\tfunction getProgramCacheKeyParameters( array, parameters ) {\n\n\t\tarray.push( parameters.precision );\n\t\tarray.push( parameters.outputEncoding );\n\t\tarray.push( parameters.envMapMode );\n\t\tarray.push( parameters.envMapCubeUVHeight );\n\t\tarray.push( parameters.combine );\n\t\tarray.push( parameters.vertexUvs );\n\t\tarray.push( parameters.fogExp2 );\n\t\tarray.push( parameters.sizeAttenuation );\n\t\tarray.push( parameters.morphTargetsCount );\n\t\tarray.push( parameters.morphAttributeCount );\n\t\tarray.push( parameters.numDirLights );\n\t\tarray.push( parameters.numPointLights );\n\t\tarray.push( parameters.numSpotLights );\n\t\tarray.push( parameters.numSpotLightMaps );\n\t\tarray.push( parameters.numHemiLights );\n\t\tarray.push( parameters.numRectAreaLights );\n\t\tarray.push( parameters.numDirLightShadows );\n\t\tarray.push( parameters.numPointLightShadows );\n\t\tarray.push( parameters.numSpotLightShadows );\n\t\tarray.push( parameters.numSpotLightShadowsWithMaps );\n\t\tarray.push( parameters.shadowMapType );\n\t\tarray.push( parameters.toneMapping );\n\t\tarray.push( parameters.numClippingPlanes );\n\t\tarray.push( parameters.numClipIntersection );\n\t\tarray.push( parameters.depthPacking );\n\n\t}\n\n\tfunction getProgramCacheKeyBooleans( array, parameters ) {\n\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.isWebGL2 )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.supportsVertexTextures )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.instancing )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.instancingColor )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.map )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.matcap )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.envMap )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.lightMap )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.aoMap )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.emissiveMap )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.bumpMap )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.normalMap )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.objectSpaceNormalMap )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.tangentSpaceNormalMap )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.clearcoat )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.clearcoatMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.clearcoatRoughnessMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.clearcoatNormalMap )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.iridescence )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.iridescenceMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.iridescenceThicknessMap )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.displacementMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.specularMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.roughnessMap )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.metalnessMap )\n\t\t\t_programLayers.enable( 24 );\n\t\tif ( parameters.gradientMap )\n\t\t\t_programLayers.enable( 25 );\n\t\tif ( parameters.alphaMap )\n\t\t\t_programLayers.enable( 26 );\n\t\tif ( parameters.alphaTest )\n\t\t\t_programLayers.enable( 27 );\n\t\tif ( parameters.vertexColors )\n\t\t\t_programLayers.enable( 28 );\n\t\tif ( parameters.vertexAlphas )\n\t\t\t_programLayers.enable( 29 );\n\t\tif ( parameters.vertexUvs )\n\t\t\t_programLayers.enable( 30 );\n\t\tif ( parameters.vertexTangents )\n\t\t\t_programLayers.enable( 31 );\n\t\tif ( parameters.uvsVertexOnly )\n\t\t\t_programLayers.enable( 32 );\n\n\t\tarray.push( _programLayers.mask );\n\t\t_programLayers.disableAll();\n\n\t\tif ( parameters.fog )\n\t\t\t_programLayers.enable( 0 );\n\t\tif ( parameters.useFog )\n\t\t\t_programLayers.enable( 1 );\n\t\tif ( parameters.flatShading )\n\t\t\t_programLayers.enable( 2 );\n\t\tif ( parameters.logarithmicDepthBuffer )\n\t\t\t_programLayers.enable( 3 );\n\t\tif ( parameters.skinning )\n\t\t\t_programLayers.enable( 4 );\n\t\tif ( parameters.morphTargets )\n\t\t\t_programLayers.enable( 5 );\n\t\tif ( parameters.morphNormals )\n\t\t\t_programLayers.enable( 6 );\n\t\tif ( parameters.morphColors )\n\t\t\t_programLayers.enable( 7 );\n\t\tif ( parameters.premultipliedAlpha )\n\t\t\t_programLayers.enable( 8 );\n\t\tif ( parameters.shadowMapEnabled )\n\t\t\t_programLayers.enable( 9 );\n\t\tif ( parameters.physicallyCorrectLights )\n\t\t\t_programLayers.enable( 10 );\n\t\tif ( parameters.doubleSided )\n\t\t\t_programLayers.enable( 11 );\n\t\tif ( parameters.flipSided )\n\t\t\t_programLayers.enable( 12 );\n\t\tif ( parameters.useDepthPacking )\n\t\t\t_programLayers.enable( 13 );\n\t\tif ( parameters.dithering )\n\t\t\t_programLayers.enable( 14 );\n\t\tif ( parameters.specularIntensityMap )\n\t\t\t_programLayers.enable( 15 );\n\t\tif ( parameters.specularColorMap )\n\t\t\t_programLayers.enable( 16 );\n\t\tif ( parameters.transmission )\n\t\t\t_programLayers.enable( 17 );\n\t\tif ( parameters.transmissionMap )\n\t\t\t_programLayers.enable( 18 );\n\t\tif ( parameters.thicknessMap )\n\t\t\t_programLayers.enable( 19 );\n\t\tif ( parameters.sheen )\n\t\t\t_programLayers.enable( 20 );\n\t\tif ( parameters.sheenColorMap )\n\t\t\t_programLayers.enable( 21 );\n\t\tif ( parameters.sheenRoughnessMap )\n\t\t\t_programLayers.enable( 22 );\n\t\tif ( parameters.decodeVideoTexture )\n\t\t\t_programLayers.enable( 23 );\n\t\tif ( parameters.opaque )\n\t\t\t_programLayers.enable( 24 );\n\n\t\tarray.push( _programLayers.mask );\n\n\t}\n\n\tfunction getUniforms( material ) {\n\n\t\tconst shaderID = shaderIDs[ material.type ];\n\t\tlet uniforms;\n\n\t\tif ( shaderID ) {\n\n\t\t\tconst shader = ShaderLib[ shaderID ];\n\t\t\tuniforms = UniformsUtils.clone( shader.uniforms );\n\n\t\t} else {\n\n\t\t\tuniforms = material.uniforms;\n\n\t\t}\n\n\t\treturn uniforms;\n\n\t}\n\n\tfunction acquireProgram( parameters, cacheKey ) {\n\n\t\tlet program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( let p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tconst preexistingProgram = programs[ p ];\n\n\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, cacheKey, parameters, bindingStates );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t}\n\n\tfunction releaseProgram( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tconst i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t}\n\n\tfunction releaseShaderCache( material ) {\n\n\t\t_customShaders.remove( material );\n\n\t}\n\n\tfunction dispose() {\n\n\t\t_customShaders.dispose();\n\n\t}\n\n\treturn {\n\t\tgetParameters: getParameters,\n\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\tgetUniforms: getUniforms,\n\t\tacquireProgram: acquireProgram,\n\t\treleaseProgram: releaseProgram,\n\t\treleaseShaderCache: releaseShaderCache,\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tprograms: programs,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLPrograms };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}