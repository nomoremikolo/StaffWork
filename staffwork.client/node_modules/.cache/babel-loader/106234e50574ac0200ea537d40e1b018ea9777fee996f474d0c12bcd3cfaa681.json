{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport { ShaderNode, positionView, normalView, uv, vec3, add, sub, mul, dFdx, dFdy, cross, max, dot, normalize, inversesqrt, faceDirection, modelNormalMatrix, TBNViewMatrix } from '../shadernode/ShaderNodeBaseElements.js';\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// Normal Mapping Without Precomputed Tangents\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode(inputs => {\n  const {\n    eye_pos,\n    surf_norm,\n    mapN,\n    uv\n  } = inputs;\n  const q0 = dFdx(eye_pos.xyz);\n  const q1 = dFdy(eye_pos.xyz);\n  const st0 = dFdx(uv.st);\n  const st1 = dFdy(uv.st);\n  const N = surf_norm; // normalized\n\n  const q1perp = cross(q1, N);\n  const q0perp = cross(N, q0);\n  const T = add(mul(q1perp, st0.x), mul(q0perp, st1.x));\n  const B = add(mul(q1perp, st0.y), mul(q0perp, st1.y));\n  const det = max(dot(T, T), dot(B, B));\n  const scale = mul(faceDirection, inversesqrt(det));\n  return normalize(add(mul(T, mul(mapN.x, scale)), mul(B, mul(mapN.y, scale)), mul(N, mapN.z)));\n});\nclass NormalMapNode extends TempNode {\n  constructor(node) {\n    let scaleNode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super('vec3');\n    this.node = node;\n    this.scaleNode = scaleNode;\n    this.normalMapType = TangentSpaceNormalMap;\n  }\n  construct(builder) {\n    const {\n      normalMapType,\n      scaleNode\n    } = this;\n    const normalOP = mul(this.node, 2.0);\n    let normalMap = sub(normalOP, 1.0);\n    if (scaleNode !== null) {\n      const normalMapScale = mul(normalMap.xy, scaleNode);\n      normalMap = vec3(normalMapScale, normalMap.z);\n    }\n    let outputNode = null;\n    if (normalMapType === ObjectSpaceNormalMap) {\n      outputNode = normalize(mul(modelNormalMatrix, normalMap));\n    } else if (normalMapType === TangentSpaceNormalMap) {\n      const tangent = builder.hasGeometryAttribute('tangent');\n      if (tangent === true) {\n        outputNode = normalize(mul(TBNViewMatrix, normalMap));\n      } else {\n        outputNode = perturbNormal2ArbNode.call({\n          eye_pos: positionView,\n          surf_norm: normalView,\n          mapN: normalMap,\n          uv: uv()\n        });\n      }\n    }\n    return outputNode;\n  }\n}\nexport default NormalMapNode;","map":{"version":3,"names":["TempNode","ShaderNode","positionView","normalView","uv","vec3","add","sub","mul","dFdx","dFdy","cross","max","dot","normalize","inversesqrt","faceDirection","modelNormalMatrix","TBNViewMatrix","TangentSpaceNormalMap","ObjectSpaceNormalMap","perturbNormal2ArbNode","inputs","eye_pos","surf_norm","mapN","q0","xyz","q1","st0","st","st1","N","q1perp","q0perp","T","x","B","y","det","scale","z","NormalMapNode","constructor","node","scaleNode","normalMapType","construct","builder","normalOP","normalMap","normalMapScale","xy","outputNode","tangent","hasGeometryAttribute","call"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/display/NormalMapNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport { ShaderNode, positionView, normalView, uv, vec3, add, sub, mul, dFdx, dFdy, cross, max, dot, normalize, inversesqrt, faceDirection, modelNormalMatrix, TBNViewMatrix } from '../shadernode/ShaderNodeBaseElements.js';\n\nimport { TangentSpaceNormalMap, ObjectSpaceNormalMap } from 'three';\n\n// Normal Mapping Without Precomputed Tangents\n// http://www.thetenthplanet.de/archives/1180\n\nconst perturbNormal2ArbNode = new ShaderNode( ( inputs ) => {\n\n\tconst { eye_pos, surf_norm, mapN, uv } = inputs;\n\n\tconst q0 = dFdx( eye_pos.xyz );\n\tconst q1 = dFdy( eye_pos.xyz );\n\tconst st0 = dFdx( uv.st );\n\tconst st1 = dFdy( uv.st );\n\n\tconst N = surf_norm; // normalized\n\n\tconst q1perp = cross( q1, N );\n\tconst q0perp = cross( N, q0 );\n\n\tconst T = add( mul( q1perp, st0.x ), mul( q0perp, st1.x ) );\n\tconst B = add( mul( q1perp, st0.y ), mul( q0perp, st1.y ) );\n\n\tconst det = max( dot( T, T ), dot( B, B ) );\n\tconst scale = mul( faceDirection, inversesqrt( det ) );\n\n\treturn normalize( add( mul( T, mul( mapN.x, scale ) ), mul( B, mul( mapN.y, scale ) ), mul( N, mapN.z ) ) );\n\n} );\n\nclass NormalMapNode extends TempNode {\n\n\tconstructor( node, scaleNode = null ) {\n\n\t\tsuper( 'vec3' );\n\n\t\tthis.node = node;\n\t\tthis.scaleNode = scaleNode;\n\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst { normalMapType, scaleNode } = this;\n\n\t\tconst normalOP = mul( this.node, 2.0 );\n\t\tlet normalMap = sub( normalOP, 1.0 );\n\n\t\tif ( scaleNode !== null ) {\n\n\t\t\tconst normalMapScale = mul( normalMap.xy, scaleNode );\n\t\t\tnormalMap = vec3( normalMapScale, normalMap.z );\n\n\t\t}\n\n\t\tlet outputNode = null;\n\n\t\tif ( normalMapType === ObjectSpaceNormalMap ) {\n\n\t\t\toutputNode = normalize( mul( modelNormalMatrix, normalMap ) );\n\n\t\t} else if ( normalMapType === TangentSpaceNormalMap ) {\n\n\t\t\tconst tangent = builder.hasGeometryAttribute( 'tangent' );\n\n\t\t\tif ( tangent === true ) {\n\n\t\t\t\toutputNode = normalize( mul( TBNViewMatrix, normalMap ) );\n\n\t\t\t} else {\n\n\t\t\t\toutputNode = perturbNormal2ArbNode.call( {\n\t\t\t\t\teye_pos: positionView,\n\t\t\t\t\tsurf_norm: normalView,\n\t\t\t\t\tmapN: normalMap,\n\t\t\t\t\tuv: uv()\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn outputNode;\n\n\t}\n\n}\n\nexport default NormalMapNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}