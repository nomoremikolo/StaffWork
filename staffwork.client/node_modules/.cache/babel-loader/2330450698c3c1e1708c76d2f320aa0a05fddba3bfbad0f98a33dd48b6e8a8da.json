{"ast":null,"code":"import LightingNode from './LightingNode.js';\nimport ContextNode from '../core/ContextNode.js';\nimport MaxMipLevelNode from '../utils/MaxMipLevelNode.js';\nimport { ShaderNode, float, add, mul, div, log2, clamp, roughness, reflect, mix, positionViewDirection, negate, normalize, transformedNormalView, transformedNormalWorld, transformDirection, cameraViewMatrix } from '../shadernode/ShaderNodeElements.js';\n\n// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\nconst getSpecularMIPLevel = new ShaderNode(_ref => {\n  let {\n    texture,\n    levelNode\n  } = _ref;\n  const maxMIPLevelScalar = new MaxMipLevelNode(texture);\n  const sigma = div(mul(Math.PI, mul(levelNode, levelNode)), add(1.0, levelNode));\n  const desiredMIPLevel = add(maxMIPLevelScalar, log2(sigma));\n  return clamp(desiredMIPLevel, 0.0, maxMIPLevelScalar);\n});\nclass EnvironmentNode extends LightingNode {\n  constructor() {\n    let envNode = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    super();\n    this.envNode = envNode;\n  }\n  construct(builder) {\n    const envNode = this.envNode;\n    const properties = builder.getNodeProperties(this);\n    let reflectVec = reflect(negate(positionViewDirection), transformedNormalView);\n    reflectVec = normalize(mix(reflectVec, transformedNormalView, mul(roughness, roughness)));\n    reflectVec = transformDirection(reflectVec, cameraViewMatrix);\n    const radianceContext = new ContextNode(envNode, {\n      tempRead: false,\n      uvNode: reflectVec,\n      levelNode: roughness,\n      levelShaderNode: getSpecularMIPLevel\n    });\n    const irradianceContext = new ContextNode(envNode, {\n      tempRead: false,\n      uvNode: transformedNormalWorld,\n      levelNode: float(1),\n      levelShaderNode: getSpecularMIPLevel\n    });\n\n    // it's used to cache the construct only if necessary: See `CubeTextureNode.getConstructReference()`\n    radianceContext.context.environmentContext = radianceContext;\n    irradianceContext.context.environmentContext = irradianceContext;\n    builder.context.radiance.add(radianceContext);\n    builder.context.iblIrradiance.add(mul(Math.PI, irradianceContext));\n    properties.radianceContext = radianceContext;\n    properties.irradianceContext = irradianceContext;\n  }\n}\nexport default EnvironmentNode;","map":{"version":3,"names":["LightingNode","ContextNode","MaxMipLevelNode","ShaderNode","float","add","mul","div","log2","clamp","roughness","reflect","mix","positionViewDirection","negate","normalize","transformedNormalView","transformedNormalWorld","transformDirection","cameraViewMatrix","getSpecularMIPLevel","texture","levelNode","maxMIPLevelScalar","sigma","Math","PI","desiredMIPLevel","EnvironmentNode","constructor","envNode","construct","builder","properties","getNodeProperties","reflectVec","radianceContext","tempRead","uvNode","levelShaderNode","irradianceContext","context","environmentContext","radiance","iblIrradiance"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/lighting/EnvironmentNode.js"],"sourcesContent":["import LightingNode from './LightingNode.js';\nimport ContextNode from '../core/ContextNode.js';\nimport MaxMipLevelNode from '../utils/MaxMipLevelNode.js';\nimport { ShaderNode, float, add, mul, div, log2, clamp, roughness, reflect, mix, positionViewDirection, negate, normalize, transformedNormalView, transformedNormalWorld, transformDirection, cameraViewMatrix } from '../shadernode/ShaderNodeElements.js';\n\n// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\nconst getSpecularMIPLevel = new ShaderNode( ( { texture, levelNode } ) => {\n\n\tconst maxMIPLevelScalar = new MaxMipLevelNode( texture );\n\n\tconst sigma = div( mul( Math.PI, mul( levelNode, levelNode ) ), add( 1.0, levelNode ) );\n\tconst desiredMIPLevel = add( maxMIPLevelScalar, log2( sigma ) );\n\n\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\n\n} );\n\nclass EnvironmentNode extends LightingNode {\n\n\tconstructor( envNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.envNode = envNode;\n\n\t}\n\n\tconstruct( builder ) {\n\n\t\tconst envNode = this.envNode;\n\t\tconst properties = builder.getNodeProperties( this );\n\n\t\tlet reflectVec = reflect( negate( positionViewDirection ), transformedNormalView );\n\t\treflectVec = normalize( mix( reflectVec, transformedNormalView, mul( roughness, roughness ) ) );\n\t\treflectVec = transformDirection( reflectVec, cameraViewMatrix );\n\n\t\tconst radianceContext = new ContextNode( envNode, {\n\t\t\ttempRead: false,\n\t\t\tuvNode: reflectVec,\n\t\t\tlevelNode: roughness,\n\t\t\tlevelShaderNode: getSpecularMIPLevel\n\t\t} );\n\n\t\tconst irradianceContext = new ContextNode( envNode, {\n\t\t\ttempRead: false,\n\t\t\tuvNode: transformedNormalWorld,\n\t\t\tlevelNode: float( 1 ),\n\t\t\tlevelShaderNode: getSpecularMIPLevel\n\t\t} );\n\n\t\t// it's used to cache the construct only if necessary: See `CubeTextureNode.getConstructReference()`\n\t\tradianceContext.context.environmentContext = radianceContext;\n\t\tirradianceContext.context.environmentContext = irradianceContext;\n\n\t\tbuilder.context.radiance.add( radianceContext );\n\n\t\tbuilder.context.iblIrradiance.add( mul( Math.PI, irradianceContext ) );\n\n\t\tproperties.radianceContext = radianceContext;\n\t\tproperties.irradianceContext = irradianceContext;\n\n\t}\n\n}\n\nexport default EnvironmentNode;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAC5C,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,UAAU,EAAEC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAEC,KAAK,EAAEC,SAAS,EAAEC,OAAO,EAAEC,GAAG,EAAEC,qBAAqB,EAAEC,MAAM,EAAEC,SAAS,EAAEC,qBAAqB,EAAEC,sBAAsB,EAAEC,kBAAkB,EAAEC,gBAAgB,QAAQ,qCAAqC;;AAE3P;AACA,MAAMC,mBAAmB,GAAG,IAAIjB,UAAU,CAAE,QAA8B;EAAA,IAA5B;IAAEkB,OAAO;IAAEC;EAAU,CAAC;EAEnE,MAAMC,iBAAiB,GAAG,IAAIrB,eAAe,CAAEmB,OAAO,CAAE;EAExD,MAAMG,KAAK,GAAGjB,GAAG,CAAED,GAAG,CAAEmB,IAAI,CAACC,EAAE,EAAEpB,GAAG,CAAEgB,SAAS,EAAEA,SAAS,CAAE,CAAE,EAAEjB,GAAG,CAAE,GAAG,EAAEiB,SAAS,CAAE,CAAE;EACvF,MAAMK,eAAe,GAAGtB,GAAG,CAAEkB,iBAAiB,EAAEf,IAAI,CAAEgB,KAAK,CAAE,CAAE;EAE/D,OAAOf,KAAK,CAAEkB,eAAe,EAAE,GAAG,EAAEJ,iBAAiB,CAAE;AAExD,CAAC,CAAE;AAEH,MAAMK,eAAe,SAAS5B,YAAY,CAAC;EAE1C6B,WAAW,GAAmB;IAAA,IAAjBC,OAAO,uEAAG,IAAI;IAE1B,KAAK,EAAE;IAEP,IAAI,CAACA,OAAO,GAAGA,OAAO;EAEvB;EAEAC,SAAS,CAAEC,OAAO,EAAG;IAEpB,MAAMF,OAAO,GAAG,IAAI,CAACA,OAAO;IAC5B,MAAMG,UAAU,GAAGD,OAAO,CAACE,iBAAiB,CAAE,IAAI,CAAE;IAEpD,IAAIC,UAAU,GAAGxB,OAAO,CAAEG,MAAM,CAAED,qBAAqB,CAAE,EAAEG,qBAAqB,CAAE;IAClFmB,UAAU,GAAGpB,SAAS,CAAEH,GAAG,CAAEuB,UAAU,EAAEnB,qBAAqB,EAAEV,GAAG,CAAEI,SAAS,EAAEA,SAAS,CAAE,CAAE,CAAE;IAC/FyB,UAAU,GAAGjB,kBAAkB,CAAEiB,UAAU,EAAEhB,gBAAgB,CAAE;IAE/D,MAAMiB,eAAe,GAAG,IAAInC,WAAW,CAAE6B,OAAO,EAAE;MACjDO,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAEH,UAAU;MAClBb,SAAS,EAAEZ,SAAS;MACpB6B,eAAe,EAAEnB;IAClB,CAAC,CAAE;IAEH,MAAMoB,iBAAiB,GAAG,IAAIvC,WAAW,CAAE6B,OAAO,EAAE;MACnDO,QAAQ,EAAE,KAAK;MACfC,MAAM,EAAErB,sBAAsB;MAC9BK,SAAS,EAAElB,KAAK,CAAE,CAAC,CAAE;MACrBmC,eAAe,EAAEnB;IAClB,CAAC,CAAE;;IAEH;IACAgB,eAAe,CAACK,OAAO,CAACC,kBAAkB,GAAGN,eAAe;IAC5DI,iBAAiB,CAACC,OAAO,CAACC,kBAAkB,GAAGF,iBAAiB;IAEhER,OAAO,CAACS,OAAO,CAACE,QAAQ,CAACtC,GAAG,CAAE+B,eAAe,CAAE;IAE/CJ,OAAO,CAACS,OAAO,CAACG,aAAa,CAACvC,GAAG,CAAEC,GAAG,CAAEmB,IAAI,CAACC,EAAE,EAAEc,iBAAiB,CAAE,CAAE;IAEtEP,UAAU,CAACG,eAAe,GAAGA,eAAe;IAC5CH,UAAU,CAACO,iBAAiB,GAAGA,iBAAiB;EAEjD;AAED;AAEA,eAAeZ,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}