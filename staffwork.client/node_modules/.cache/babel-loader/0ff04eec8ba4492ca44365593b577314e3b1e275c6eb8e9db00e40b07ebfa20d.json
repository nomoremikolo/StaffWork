{"ast":null,"code":"import { Interpolant } from '../Interpolant.js';\nimport { Quaternion } from '../Quaternion.js';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n  constructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    super(parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n  interpolate_(i1, t0, t, t1) {\n    const result = this.resultBuffer,\n      values = this.sampleValues,\n      stride = this.valueSize,\n      alpha = (t - t0) / (t1 - t0);\n    let offset = i1 * stride;\n    for (let end = offset + stride; offset !== end; offset += 4) {\n      Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n    }\n    return result;\n  }\n}\nexport { QuaternionLinearInterpolant };","map":{"version":3,"names":["Interpolant","Quaternion","QuaternionLinearInterpolant","constructor","parameterPositions","sampleValues","sampleSize","resultBuffer","interpolate_","i1","t0","t","t1","result","values","stride","valueSize","alpha","offset","end","slerpFlat"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/math/interpolants/QuaternionLinearInterpolant.js"],"sourcesContent":["import { Interpolant } from '../Interpolant.js';\nimport { Quaternion } from '../Quaternion.js';\n\n/**\n * Spherical linear unit quaternion interpolant.\n */\n\nclass QuaternionLinearInterpolant extends Interpolant {\n\n\tconstructor( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tsuper( parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tinterpolate_( i1, t0, t, t1 ) {\n\n\t\tconst result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tlet offset = i1 * stride;\n\n\t\tfor ( let end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n}\n\n\nexport { QuaternionLinearInterpolant };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,mBAAmB;AAC/C,SAASC,UAAU,QAAQ,kBAAkB;;AAE7C;AACA;AACA;;AAEA,MAAMC,2BAA2B,SAASF,WAAW,CAAC;EAErDG,WAAW,CAAEC,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,EAAG;IAEzE,KAAK,CAAEH,kBAAkB,EAAEC,YAAY,EAAEC,UAAU,EAAEC,YAAY,CAAE;EAEpE;EAEAC,YAAY,CAAEC,EAAE,EAAEC,EAAE,EAAEC,CAAC,EAAEC,EAAE,EAAG;IAE7B,MAAMC,MAAM,GAAG,IAAI,CAACN,YAAY;MAC/BO,MAAM,GAAG,IAAI,CAACT,YAAY;MAC1BU,MAAM,GAAG,IAAI,CAACC,SAAS;MAEvBC,KAAK,GAAG,CAAEN,CAAC,GAAGD,EAAE,KAAOE,EAAE,GAAGF,EAAE,CAAE;IAEjC,IAAIQ,MAAM,GAAGT,EAAE,GAAGM,MAAM;IAExB,KAAM,IAAII,GAAG,GAAGD,MAAM,GAAGH,MAAM,EAAEG,MAAM,KAAKC,GAAG,EAAED,MAAM,IAAI,CAAC,EAAG;MAE9DjB,UAAU,CAACmB,SAAS,CAAEP,MAAM,EAAE,CAAC,EAAEC,MAAM,EAAEI,MAAM,GAAGH,MAAM,EAAED,MAAM,EAAEI,MAAM,EAAED,KAAK,CAAE;IAElF;IAEA,OAAOJ,MAAM;EAEd;AAED;AAGA,SAASX,2BAA2B"},"metadata":{},"sourceType":"module","externalDependencies":[]}