{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  allUsers: {\n    errors: null,\n    isLoading: false,\n    users: []\n  },\n  getUserById: {\n    errors: null,\n    isLoading: false,\n    user: null\n  },\n  permissions: null\n};\nexport const usersReducer = createSlice({\n  name: \"usersReducer\",\n  initialState: initialState,\n  reducers: {\n    GET_USER_BY_ID(state) {\n      state.getUserById.isLoading = true;\n      state.getUserById.errors = null;\n    },\n    GET_USER_BY_ID_SUCCESS(state, action) {\n      state.getUserById.isLoading = false;\n      state.getUserById.errors = null;\n      state.getUserById.user = action.payload;\n    },\n    GET_USER_BY_ID_ERROR(state, action) {\n      state.getUserById.errors = action.payload;\n      state.getUserById.isLoading = false;\n    },\n    GET_ALL_USERS(state) {\n      state.allUsers.isLoading = true;\n      state.allUsers.errors = null;\n    },\n    GET_ALL_USERS_SUCCESS(state, action) {\n      state.allUsers.isLoading = false;\n      state.allUsers.errors = null;\n      state.allUsers.users = action.payload;\n    },\n    GET_ALL_USERS_ERROR(state, action) {\n      state.allUsers.errors = action.payload;\n      state.allUsers.isLoading = false;\n    },\n    GET_PERMISSIONS_LIST(state) {},\n    GET_PERMISSIONS_LIST_SUCCESS(state, action) {\n      state.permissions = action.payload;\n    },\n    GET_PERMISSIONS_LIST_ERROR(state, action) {}\n  }\n});\nexport default usersReducer.reducer;","map":{"version":3,"names":["createSlice","initialState","allUsers","errors","isLoading","users","getUserById","user","permissions","usersReducer","name","reducers","GET_USER_BY_ID","state","GET_USER_BY_ID_SUCCESS","action","payload","GET_USER_BY_ID_ERROR","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_ERROR","GET_PERMISSIONS_LIST","GET_PERMISSIONS_LIST_SUCCESS","GET_PERMISSIONS_LIST_ERROR","reducer"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/src/redux/reducers/usersReducer.ts"],"sourcesContent":["import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {IUser} from \"../../types/user\";\r\n\r\ninterface IUsersReducerState {\r\n    allUsers: {\r\n        isLoading: boolean\r\n        errors: any,\r\n        users: IUser[]\r\n    },\r\n    getUserById: {\r\n        isLoading: boolean,\r\n        errors: any,\r\n        user: IUser | null\r\n    },\r\n    permissions: [{\r\n        id: number,\r\n        name: string\r\n    }] | null\r\n}\r\n\r\nconst initialState: IUsersReducerState = {\r\n    allUsers: {\r\n        errors: null,\r\n        isLoading: false,\r\n        users: []\r\n    },\r\n    getUserById: {\r\n        errors: null,\r\n        isLoading: false,\r\n        user: null\r\n    },\r\n    permissions: null,\r\n}\r\n\r\nexport const usersReducer = createSlice({\r\n    name: \"usersReducer\",\r\n    initialState: initialState,\r\n    reducers: {\r\n        GET_USER_BY_ID(state){\r\n            state.getUserById.isLoading = true\r\n            state.getUserById.errors = null\r\n        },\r\n        GET_USER_BY_ID_SUCCESS(state, action: PayloadAction<IUser>){\r\n            state.getUserById.isLoading = false\r\n            state.getUserById.errors = null\r\n            state.getUserById.user = action.payload\r\n        },\r\n        GET_USER_BY_ID_ERROR(state, action: PayloadAction<any>){\r\n            state.getUserById.errors = action.payload\r\n            state.getUserById.isLoading = false\r\n        },\r\n        GET_ALL_USERS(state){\r\n            state.allUsers.isLoading = true\r\n            state.allUsers.errors = null\r\n        },\r\n        GET_ALL_USERS_SUCCESS(state, action: PayloadAction<IUser[]>){\r\n            state.allUsers.isLoading = false\r\n            state.allUsers.errors = null\r\n            state.allUsers.users = action.payload\r\n        },\r\n        GET_ALL_USERS_ERROR(state, action: PayloadAction<any>){\r\n            state.allUsers.errors = action.payload\r\n            state.allUsers.isLoading = false\r\n        },\r\n        GET_PERMISSIONS_LIST(state){\r\n\r\n        },\r\n        GET_PERMISSIONS_LIST_SUCCESS(state, action: PayloadAction<[{id: number, name: string}]>){\r\n            state.permissions = action.payload\r\n        },\r\n        GET_PERMISSIONS_LIST_ERROR(state, action: PayloadAction<any>){\r\n\r\n        },\r\n    }\r\n})\r\n\r\nexport default usersReducer.reducer"],"mappings":"AAAA,SAAQA,WAAW,QAAsB,kBAAkB;AAoB3D,MAAMC,YAAgC,GAAG;EACrCC,QAAQ,EAAE;IACNC,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,KAAK;IAChBC,KAAK,EAAE;EACX,CAAC;EACDC,WAAW,EAAE;IACTH,MAAM,EAAE,IAAI;IACZC,SAAS,EAAE,KAAK;IAChBG,IAAI,EAAE;EACV,CAAC;EACDC,WAAW,EAAE;AACjB,CAAC;AAED,OAAO,MAAMC,YAAY,GAAGT,WAAW,CAAC;EACpCU,IAAI,EAAE,cAAc;EACpBT,YAAY,EAAEA,YAAY;EAC1BU,QAAQ,EAAE;IACNC,cAAc,CAACC,KAAK,EAAC;MACjBA,KAAK,CAACP,WAAW,CAACF,SAAS,GAAG,IAAI;MAClCS,KAAK,CAACP,WAAW,CAACH,MAAM,GAAG,IAAI;IACnC,CAAC;IACDW,sBAAsB,CAACD,KAAK,EAAEE,MAA4B,EAAC;MACvDF,KAAK,CAACP,WAAW,CAACF,SAAS,GAAG,KAAK;MACnCS,KAAK,CAACP,WAAW,CAACH,MAAM,GAAG,IAAI;MAC/BU,KAAK,CAACP,WAAW,CAACC,IAAI,GAAGQ,MAAM,CAACC,OAAO;IAC3C,CAAC;IACDC,oBAAoB,CAACJ,KAAK,EAAEE,MAA0B,EAAC;MACnDF,KAAK,CAACP,WAAW,CAACH,MAAM,GAAGY,MAAM,CAACC,OAAO;MACzCH,KAAK,CAACP,WAAW,CAACF,SAAS,GAAG,KAAK;IACvC,CAAC;IACDc,aAAa,CAACL,KAAK,EAAC;MAChBA,KAAK,CAACX,QAAQ,CAACE,SAAS,GAAG,IAAI;MAC/BS,KAAK,CAACX,QAAQ,CAACC,MAAM,GAAG,IAAI;IAChC,CAAC;IACDgB,qBAAqB,CAACN,KAAK,EAAEE,MAA8B,EAAC;MACxDF,KAAK,CAACX,QAAQ,CAACE,SAAS,GAAG,KAAK;MAChCS,KAAK,CAACX,QAAQ,CAACC,MAAM,GAAG,IAAI;MAC5BU,KAAK,CAACX,QAAQ,CAACG,KAAK,GAAGU,MAAM,CAACC,OAAO;IACzC,CAAC;IACDI,mBAAmB,CAACP,KAAK,EAAEE,MAA0B,EAAC;MAClDF,KAAK,CAACX,QAAQ,CAACC,MAAM,GAAGY,MAAM,CAACC,OAAO;MACtCH,KAAK,CAACX,QAAQ,CAACE,SAAS,GAAG,KAAK;IACpC,CAAC;IACDiB,oBAAoB,CAACR,KAAK,EAAC,CAE3B,CAAC;IACDS,4BAA4B,CAACT,KAAK,EAAEE,MAAmD,EAAC;MACpFF,KAAK,CAACL,WAAW,GAAGO,MAAM,CAACC,OAAO;IACtC,CAAC;IACDO,0BAA0B,CAACV,KAAK,EAAEE,MAA0B,EAAC,CAE7D;EACJ;AACJ,CAAC,CAAC;AAEF,eAAeN,YAAY,CAACe,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}