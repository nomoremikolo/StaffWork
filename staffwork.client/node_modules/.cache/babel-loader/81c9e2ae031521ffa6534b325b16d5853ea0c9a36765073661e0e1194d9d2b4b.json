{"ast":null,"code":"import Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryingNode from '../core/VaryingNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport CameraNode from '../accessors/CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nclass TangentNode extends Node {\n  static GEOMETRY = 'geometry';\n  static LOCAL = 'local';\n  static VIEW = 'view';\n  static WORLD = 'world';\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : TangentNode.LOCAL;\n    super();\n    this.scope = scope;\n  }\n  getHash( /*builder*/\n  ) {\n    return `tangent-${this.scope}`;\n  }\n  getNodeType() {\n    const scope = this.scope;\n    if (scope === TangentNode.GEOMETRY) {\n      return 'vec4';\n    }\n    return 'vec3';\n  }\n  generate(builder) {\n    const scope = this.scope;\n    let outputNode = null;\n    if (scope === TangentNode.GEOMETRY) {\n      outputNode = new AttributeNode('tangent', 'vec4');\n    } else if (scope === TangentNode.LOCAL) {\n      outputNode = new VaryingNode(new SplitNode(new TangentNode(TangentNode.GEOMETRY), 'xyz'));\n    } else if (scope === TangentNode.VIEW) {\n      const vertexNode = new SplitNode(new OperatorNode('*', new ModelNode(ModelNode.VIEW_MATRIX), new TangentNode(TangentNode.LOCAL)), 'xyz');\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryingNode(vertexNode));\n    } else if (scope === TangentNode.WORLD) {\n      const vertexNode = new MathNode(MathNode.TRANSFORM_DIRECTION, new TangentNode(TangentNode.VIEW), new CameraNode(CameraNode.VIEW_MATRIX));\n      outputNode = new MathNode(MathNode.NORMALIZE, new VaryingNode(vertexNode));\n    }\n    return outputNode.build(builder, this.getNodeType(builder));\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.scope = this.scope;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.scope = data.scope;\n  }\n}\nexport default TangentNode;","map":{"version":3,"names":["Node","AttributeNode","VaryingNode","ModelNode","CameraNode","OperatorNode","MathNode","SplitNode","TangentNode","GEOMETRY","LOCAL","VIEW","WORLD","constructor","scope","getHash","getNodeType","generate","builder","outputNode","vertexNode","VIEW_MATRIX","NORMALIZE","TRANSFORM_DIRECTION","build","serialize","data","deserialize"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/accessors/TangentNode.js"],"sourcesContent":["import Node from '../core/Node.js';\nimport AttributeNode from '../core/AttributeNode.js';\nimport VaryingNode from '../core/VaryingNode.js';\nimport ModelNode from '../accessors/ModelNode.js';\nimport CameraNode from '../accessors/CameraNode.js';\nimport OperatorNode from '../math/OperatorNode.js';\nimport MathNode from '../math/MathNode.js';\nimport SplitNode from '../utils/SplitNode.js';\n\nclass TangentNode extends Node {\n\n\tstatic GEOMETRY = 'geometry';\n\tstatic LOCAL = 'local';\n\tstatic VIEW = 'view';\n\tstatic WORLD = 'world';\n\n\tconstructor( scope = TangentNode.LOCAL ) {\n\n\t\tsuper();\n\n\t\tthis.scope = scope;\n\n\t}\n\n\tgetHash( /*builder*/ ) {\n\n\t\treturn `tangent-${this.scope}`;\n\n\t}\n\n\tgetNodeType() {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === TangentNode.GEOMETRY ) {\n\n\t\t\treturn 'vec4';\n\n\t\t}\n\n\t\treturn 'vec3';\n\n\t}\n\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tlet outputNode = null;\n\n\t\tif ( scope === TangentNode.GEOMETRY ) {\n\n\t\t\toutputNode = new AttributeNode( 'tangent', 'vec4' );\n\n\t\t} else if ( scope === TangentNode.LOCAL ) {\n\n\t\t\toutputNode = new VaryingNode( new SplitNode( new TangentNode( TangentNode.GEOMETRY ), 'xyz' ) );\n\n\t\t} else if ( scope === TangentNode.VIEW ) {\n\n\t\t\tconst vertexNode = new SplitNode( new OperatorNode( '*', new ModelNode( ModelNode.VIEW_MATRIX ), new TangentNode( TangentNode.LOCAL ) ), 'xyz' );\n\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\n\n\t\t} else if ( scope === TangentNode.WORLD ) {\n\n\t\t\tconst vertexNode = new MathNode( MathNode.TRANSFORM_DIRECTION, new TangentNode( TangentNode.VIEW ), new CameraNode( CameraNode.VIEW_MATRIX ) );\n\t\t\toutputNode = new MathNode( MathNode.NORMALIZE, new VaryingNode( vertexNode ) );\n\n\t\t}\n\n\t\treturn outputNode.build( builder, this.getNodeType( builder ) );\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.scope = this.scope;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.scope = data.scope;\n\n\t}\n\n}\n\nexport default TangentNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAClC,OAAOC,aAAa,MAAM,0BAA0B;AACpD,OAAOC,WAAW,MAAM,wBAAwB;AAChD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,YAAY,MAAM,yBAAyB;AAClD,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,OAAOC,SAAS,MAAM,uBAAuB;AAE7C,MAAMC,WAAW,SAASR,IAAI,CAAC;EAE9B,OAAOS,QAAQ,GAAG,UAAU;EAC5B,OAAOC,KAAK,GAAG,OAAO;EACtB,OAAOC,IAAI,GAAG,MAAM;EACpB,OAAOC,KAAK,GAAG,OAAO;EAEtBC,WAAW,GAA8B;IAAA,IAA5BC,KAAK,uEAAGN,WAAW,CAACE,KAAK;IAErC,KAAK,EAAE;IAEP,IAAI,CAACI,KAAK,GAAGA,KAAK;EAEnB;EAEAC,OAAO,EAAE;EAAA,EAAc;IAEtB,OAAQ,WAAU,IAAI,CAACD,KAAM,EAAC;EAE/B;EAEAE,WAAW,GAAG;IAEb,MAAMF,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,KAAKN,WAAW,CAACC,QAAQ,EAAG;MAErC,OAAO,MAAM;IAEd;IAEA,OAAO,MAAM;EAEd;EAGAQ,QAAQ,CAAEC,OAAO,EAAG;IAEnB,MAAMJ,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAIK,UAAU,GAAG,IAAI;IAErB,IAAKL,KAAK,KAAKN,WAAW,CAACC,QAAQ,EAAG;MAErCU,UAAU,GAAG,IAAIlB,aAAa,CAAE,SAAS,EAAE,MAAM,CAAE;IAEpD,CAAC,MAAM,IAAKa,KAAK,KAAKN,WAAW,CAACE,KAAK,EAAG;MAEzCS,UAAU,GAAG,IAAIjB,WAAW,CAAE,IAAIK,SAAS,CAAE,IAAIC,WAAW,CAAEA,WAAW,CAACC,QAAQ,CAAE,EAAE,KAAK,CAAE,CAAE;IAEhG,CAAC,MAAM,IAAKK,KAAK,KAAKN,WAAW,CAACG,IAAI,EAAG;MAExC,MAAMS,UAAU,GAAG,IAAIb,SAAS,CAAE,IAAIF,YAAY,CAAE,GAAG,EAAE,IAAIF,SAAS,CAAEA,SAAS,CAACkB,WAAW,CAAE,EAAE,IAAIb,WAAW,CAAEA,WAAW,CAACE,KAAK,CAAE,CAAE,EAAE,KAAK,CAAE;MAEhJS,UAAU,GAAG,IAAIb,QAAQ,CAAEA,QAAQ,CAACgB,SAAS,EAAE,IAAIpB,WAAW,CAAEkB,UAAU,CAAE,CAAE;IAE/E,CAAC,MAAM,IAAKN,KAAK,KAAKN,WAAW,CAACI,KAAK,EAAG;MAEzC,MAAMQ,UAAU,GAAG,IAAId,QAAQ,CAAEA,QAAQ,CAACiB,mBAAmB,EAAE,IAAIf,WAAW,CAAEA,WAAW,CAACG,IAAI,CAAE,EAAE,IAAIP,UAAU,CAAEA,UAAU,CAACiB,WAAW,CAAE,CAAE;MAC9IF,UAAU,GAAG,IAAIb,QAAQ,CAAEA,QAAQ,CAACgB,SAAS,EAAE,IAAIpB,WAAW,CAAEkB,UAAU,CAAE,CAAE;IAE/E;IAEA,OAAOD,UAAU,CAACK,KAAK,CAAEN,OAAO,EAAE,IAAI,CAACF,WAAW,CAAEE,OAAO,CAAE,CAAE;EAEhE;EAEAO,SAAS,CAAEC,IAAI,EAAG;IAEjB,KAAK,CAACD,SAAS,CAAEC,IAAI,CAAE;IAEvBA,IAAI,CAACZ,KAAK,GAAG,IAAI,CAACA,KAAK;EAExB;EAEAa,WAAW,CAAED,IAAI,EAAG;IAEnB,KAAK,CAACC,WAAW,CAAED,IAAI,CAAE;IAEzB,IAAI,CAACZ,KAAK,GAAGY,IAAI,CAACZ,KAAK;EAExB;AAED;AAEA,eAAeN,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}