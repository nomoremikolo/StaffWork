{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import axios from\"axios\";import{GraphQlEndpoint}from\"../../global_variables\";import{usersReducer}from\"../reducers/usersReducer\";import{NotificationReducer}from\"../reducers/NotificationReducer\";var _NotificationReducer$=NotificationReducer.actions,SHOW_SUCCESS_MESSAGE=_NotificationReducer$.SHOW_SUCCESS_MESSAGE,SHOW_ERROR_MESSAGE=_NotificationReducer$.SHOW_ERROR_MESSAGE,SHOW_WARNING_MESSAGE=_NotificationReducer$.SHOW_WARNING_MESSAGE,DEACTIVATE_MESSAGE=_NotificationReducer$.DEACTIVATE_MESSAGE;export var fetch_all_users=function fetch_all_users(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(dispatch){var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:graphqlQuery={\"query\":\"\\n            query getAll {\\n              user {\\n                getAll {\\n                  errors\\n                  statusCode\\n                  users {\\n                    id\\n                    username\\n                    name\\n                    surname\\n                    age\\n                    email\\n                    adress\\n                    role\\n                    isActivated\\n                    permissions\\n                  }\\n                }\\n              }\\n            }\\n        \"};dispatch(usersReducer.actions.GET_ALL_USERS());_context.prev=2;_context.next=5;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('accessToken'))},data:graphqlQuery});case 5:response=_context.sent;r=response.data.data.user.getAll;if(r.statusCode===200){dispatch(usersReducer.actions.GET_ALL_USERS_SUCCESS(r.users));}else{dispatch(usersReducer.actions.GET_ALL_USERS_ERROR(r.errors));}_context.next=14;break;case 10:_context.prev=10;_context.t0=_context[\"catch\"](2);dispatch(usersReducer.actions.GET_ALL_USERS_ERROR(_context.t0));localStorage.removeItem('accessToken');case 14:case\"end\":return _context.stop();}}},_callee,null,[[2,10]]);}));return function(_x){return _ref.apply(this,arguments);};}();};export var fetch_user_by_id=function fetch_user_by_id(id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(dispatch){var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:graphqlQuery={\"query\":\"\\n            query getUBI{\\n              user{\\n                getUserById(userId: \".concat(id,\"){\\n                  errors\\n                  statusCode\\n                  user{\\n                    id\\n                    username\\n                    name\\n                    surname\\n                    age\\n                    email\\n                    adress\\n                    role\\n                    isActivated\\n                    permissions\\n                  }\\n                }\\n              }\\n            }\\n        \")};dispatch(usersReducer.actions.GET_USER_BY_ID());_context2.prev=2;_context2.next=5;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('accessToken'))},data:graphqlQuery});case 5:response=_context2.sent;r=response.data.data.user.getUserById;if(r.statusCode===200){dispatch(usersReducer.actions.GET_USER_BY_ID_SUCCESS(r.user));}else{dispatch(usersReducer.actions.GET_USER_BY_ID_ERROR(r.errors));}_context2.next=14;break;case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](2);dispatch(usersReducer.actions.GET_USER_BY_ID_ERROR(_context2.t0));localStorage.removeItem('accessToken');case 14:case\"end\":return _context2.stop();}}},_callee2,null,[[2,10]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};export var update_users=function update_users(user){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(dispatch){var _user$isActivated,_user$age;var graphqlQuery,response,r;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:graphqlQuery={\"query\":\"\\n            mutation updateU{\\n              user{\\n                updateUser(user: {\\n                  id: \".concat(user.id,\",\\n                  name: \").concat(user.name!=null?\"\\\"\".concat(user.name,\"\\\"\"):\"null\",\"\\n                  surname: \").concat(user.surname!=null?\"\\\"\".concat(user.surname,\"\\\"\"):\"null\",\",\\n                  username: \").concat(user.username!=null?\"\\\"\".concat(user.username,\"\\\"\"):\"null\",\",\\n                  role: \").concat(user.role!=null?\"\\\"\".concat(user.role,\"\\\"\"):\"null\",\",\\n                  isActivated: \").concat((_user$isActivated=user.isActivated)!==null&&_user$isActivated!==void 0?_user$isActivated:\"null\",\",\\n                  age: \").concat((_user$age=user.age)!==null&&_user$age!==void 0?_user$age:\"null\",\",\\n                  email: \").concat(user.email!=null?\"\\\"\".concat(user.email,\"\\\"\"):\"null\",\",\\n                  adress: \").concat(user.adress!=null?\"\\\"\".concat(user.adress,\"\\\"\"):\"null\",\"\\n                }){\\n                  errors\\n                  statusCode\\n                  user{\\n                    id\\n                    username\\n                    name\\n                    surname\\n                    age\\n                    email\\n                    adress\\n                    role\\n                    isActivated\\n                    permissions\\n                  }\\n                }\\n              }\\n            }\\n        \")};_context3.prev=1;_context3.next=4;return axios({url:GraphQlEndpoint,method:'post',withCredentials:true,headers:{\"content-type\":\"application/json\",\"Authorization\":\"Bearer \".concat(localStorage.getItem('accessToken'))},data:graphqlQuery});case 4:response=_context3.sent;r=response.data.data.user.updateUser;if(r.statusCode===200){dispatch(SHOW_SUCCESS_MESSAGE(\"Successfully updated!\"));}else{dispatch(SHOW_ERROR_MESSAGE(r.errors));}_context3.next=13;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](1);dispatch(SHOW_ERROR_MESSAGE(_context3.t0.toString()));localStorage.removeItem('accessToken');case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[1,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};","map":{"version":3,"names":["axios","GraphQlEndpoint","usersReducer","NotificationReducer","actions","SHOW_SUCCESS_MESSAGE","SHOW_ERROR_MESSAGE","SHOW_WARNING_MESSAGE","DEACTIVATE_MESSAGE","fetch_all_users","dispatch","graphqlQuery","GET_ALL_USERS","url","method","withCredentials","headers","localStorage","getItem","data","response","r","user","getAll","statusCode","GET_ALL_USERS_SUCCESS","users","GET_ALL_USERS_ERROR","errors","removeItem","fetch_user_by_id","id","GET_USER_BY_ID","getUserById","GET_USER_BY_ID_SUCCESS","GET_USER_BY_ID_ERROR","update_users","name","surname","username","role","isActivated","age","email","adress","updateUser","toString"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/src/redux/action_creators/users_action_creator.ts"],"sourcesContent":["import {AppDispatch} from \"../store\";\r\nimport {authorizationReducer} from \"../reducers/authorizationReducer\";\r\nimport axios from \"axios\";\r\nimport {GraphQlEndpoint} from \"../../global_variables\";\r\nimport {usersReducer} from \"../reducers/usersReducer\";\r\nimport {NotificationReducer} from \"../reducers/NotificationReducer\";\r\nimport {IUpdatedUser} from \"../../types/user\";\r\nconst {SHOW_SUCCESS_MESSAGE, SHOW_ERROR_MESSAGE, SHOW_WARNING_MESSAGE, DEACTIVATE_MESSAGE} = NotificationReducer.actions\r\nexport const fetch_all_users = () => async (dispatch: AppDispatch) => {\r\n    const graphqlQuery = {\r\n        \"query\": `\r\n            query getAll {\r\n              user {\r\n                getAll {\r\n                  errors\r\n                  statusCode\r\n                  users {\r\n                    id\r\n                    username\r\n                    name\r\n                    surname\r\n                    age\r\n                    email\r\n                    adress\r\n                    role\r\n                    isActivated\r\n                    permissions\r\n                  }\r\n                }\r\n              }\r\n            }\r\n        `,\r\n    };\r\n    dispatch(usersReducer.actions.GET_ALL_USERS())\r\n    try {\r\n        const response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`,\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        let r = response.data.data.user.getAll\r\n        if (r.statusCode === 200){\r\n            dispatch(usersReducer.actions.GET_ALL_USERS_SUCCESS(r.users))\r\n        }else{\r\n            dispatch(usersReducer.actions.GET_ALL_USERS_ERROR(r.errors))\r\n        }\r\n    } catch (e) {\r\n        dispatch(usersReducer.actions.GET_ALL_USERS_ERROR(e))\r\n        localStorage.removeItem('accessToken')\r\n    }\r\n}\r\nexport const fetch_user_by_id = (id: number) => async (dispatch: AppDispatch) => {\r\n    const graphqlQuery = {\r\n        \"query\": `\r\n            query getUBI{\r\n              user{\r\n                getUserById(userId: ${id}){\r\n                  errors\r\n                  statusCode\r\n                  user{\r\n                    id\r\n                    username\r\n                    name\r\n                    surname\r\n                    age\r\n                    email\r\n                    adress\r\n                    role\r\n                    isActivated\r\n                    permissions\r\n                  }\r\n                }\r\n              }\r\n            }\r\n        `,\r\n    };\r\n    dispatch(usersReducer.actions.GET_USER_BY_ID())\r\n    try {\r\n        const response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`,\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        let r = response.data.data.user.getUserById\r\n        if (r.statusCode === 200){\r\n            dispatch(usersReducer.actions.GET_USER_BY_ID_SUCCESS(r.user))\r\n        }else{\r\n            dispatch(usersReducer.actions.GET_USER_BY_ID_ERROR(r.errors))\r\n        }\r\n    } catch (e) {\r\n        dispatch(usersReducer.actions.GET_USER_BY_ID_ERROR(e))\r\n        localStorage.removeItem('accessToken')\r\n    }\r\n}\r\nexport const update_users = (user: IUpdatedUser) => async (dispatch: AppDispatch) => {\r\n    const graphqlQuery = {\r\n        \"query\": `\r\n            mutation updateU{\r\n              user{\r\n                updateUser(user: {\r\n                  id: ${user.id},\r\n                  name: ${user.name != null ? `\"${user.name}\"` : \"null\"}\r\n                  surname: ${user.surname != null ? `\"${user.surname}\"` : \"null\"},\r\n                  username: ${user.username != null ? `\"${user.username}\"` : \"null\"},\r\n                  role: ${user.role != null ? `\"${user.role}\"` : \"null\"},\r\n                  isActivated: ${user.isActivated ?? \"null\"},\r\n                  age: ${user.age ?? \"null\"},\r\n                  email: ${user.email != null ? `\"${user.email}\"` : \"null\"},\r\n                  adress: ${user.adress != null ? `\"${user.adress}\"` : \"null\"}\r\n                }){\r\n                  errors\r\n                  statusCode\r\n                  user{\r\n                    id\r\n                    username\r\n                    name\r\n                    surname\r\n                    age\r\n                    email\r\n                    adress\r\n                    role\r\n                    isActivated\r\n                    permissions\r\n                  }\r\n                }\r\n              }\r\n            }\r\n        `,\r\n    };\r\n    try {\r\n        const response = await axios({\r\n            url: GraphQlEndpoint,\r\n            method: 'post',\r\n            withCredentials: true,\r\n            headers: {\r\n                \"content-type\": \"application/json\",\r\n                \"Authorization\": `Bearer ${localStorage.getItem('accessToken')}`,\r\n            },\r\n            data: graphqlQuery\r\n        })\r\n        let r = response.data.data.user.updateUser\r\n        if (r.statusCode === 200){\r\n            dispatch(SHOW_SUCCESS_MESSAGE(\"Successfully updated!\"))\r\n        }else{\r\n            dispatch(SHOW_ERROR_MESSAGE(r.errors))\r\n        }\r\n    } catch (e:any) {\r\n        dispatch(SHOW_ERROR_MESSAGE(e.toString()))\r\n        localStorage.removeItem('accessToken')\r\n    }\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}