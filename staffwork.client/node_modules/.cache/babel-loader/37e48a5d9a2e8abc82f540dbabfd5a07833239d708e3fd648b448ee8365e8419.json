{"ast":null,"code":"import TempNode from './TempNode.js';\nclass ExpressionNode extends TempNode {\n  constructor() {\n    let snipped = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let nodeType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'void';\n    super(nodeType);\n    this.snipped = snipped;\n  }\n  generate(builder) {\n    const type = this.getNodeType(builder);\n    const snipped = this.snipped;\n    if (type === 'void') {\n      builder.addFlowCode(snipped);\n    } else {\n      return `( ${snipped} )`;\n    }\n  }\n}\nexport default ExpressionNode;","map":{"version":3,"names":["TempNode","ExpressionNode","constructor","snipped","nodeType","generate","builder","type","getNodeType","addFlowCode"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/core/ExpressionNode.js"],"sourcesContent":["import TempNode from './TempNode.js';\n\nclass ExpressionNode extends TempNode {\n\n\tconstructor( snipped = '', nodeType = 'void' ) {\n\n\t\tsuper( nodeType );\n\n\t\tthis.snipped = snipped;\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst snipped = this.snipped;\n\n\t\tif ( type === 'void' ) {\n\n\t\t\tbuilder.addFlowCode( snipped );\n\n\t\t} else {\n\n\t\t\treturn `( ${ snipped } )`;\n\n\t\t}\n\n\t}\n\n}\n\nexport default ExpressionNode;\n"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,eAAe;AAEpC,MAAMC,cAAc,SAASD,QAAQ,CAAC;EAErCE,WAAW,GAAoC;IAAA,IAAlCC,OAAO,uEAAG,EAAE;IAAA,IAAEC,QAAQ,uEAAG,MAAM;IAE3C,KAAK,CAAEA,QAAQ,CAAE;IAEjB,IAAI,CAACD,OAAO,GAAGA,OAAO;EAEvB;EAEAE,QAAQ,CAAEC,OAAO,EAAG;IAEnB,MAAMC,IAAI,GAAG,IAAI,CAACC,WAAW,CAAEF,OAAO,CAAE;IACxC,MAAMH,OAAO,GAAG,IAAI,CAACA,OAAO;IAE5B,IAAKI,IAAI,KAAK,MAAM,EAAG;MAEtBD,OAAO,CAACG,WAAW,CAAEN,OAAO,CAAE;IAE/B,CAAC,MAAM;MAEN,OAAQ,KAAKA,OAAS,IAAG;IAE1B;EAED;AAED;AAEA,eAAeF,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}