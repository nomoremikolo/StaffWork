{"ast":null,"code":"import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, sRGBEncoding, _SRGBAFormat } from '../../constants.js';\nfunction WebGLUtils(gl, extensions, capabilities) {\n  const isWebGL2 = capabilities.isWebGL2;\n  function convert(p) {\n    let encoding = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    let extension;\n    if (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n    if (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n    if (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n    if (p === ByteType) return gl.BYTE;\n    if (p === ShortType) return gl.SHORT;\n    if (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n    if (p === IntType) return gl.INT;\n    if (p === UnsignedIntType) return gl.UNSIGNED_INT;\n    if (p === FloatType) return gl.FLOAT;\n    if (p === HalfFloatType) {\n      if (isWebGL2) return gl.HALF_FLOAT;\n      extension = extensions.get('OES_texture_half_float');\n      if (extension !== null) {\n        return extension.HALF_FLOAT_OES;\n      } else {\n        return null;\n      }\n    }\n    if (p === AlphaFormat) return gl.ALPHA;\n    if (p === RGBAFormat) return gl.RGBA;\n    if (p === LuminanceFormat) return gl.LUMINANCE;\n    if (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n    if (p === DepthFormat) return gl.DEPTH_COMPONENT;\n    if (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\n    // @deprecated since r137\n\n    if (p === RGBFormat) {\n      console.warn('THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228');\n      return gl.RGBA;\n    }\n\n    // WebGL 1 sRGB fallback\n\n    if (p === _SRGBAFormat) {\n      extension = extensions.get('EXT_sRGB');\n      if (extension !== null) {\n        return extension.SRGB_ALPHA_EXT;\n      } else {\n        return null;\n      }\n    }\n\n    // WebGL2 formats.\n\n    if (p === RedFormat) return gl.RED;\n    if (p === RedIntegerFormat) return gl.RED_INTEGER;\n    if (p === RGFormat) return gl.RG;\n    if (p === RGIntegerFormat) return gl.RG_INTEGER;\n    if (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n    // S3TC\n\n    if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n      if (encoding === sRGBEncoding) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc_srgb');\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      } else {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          if (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          if (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    // PVRTC\n\n    if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n      if (extension !== null) {\n        if (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n        if (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n        if (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n        if (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n      } else {\n        return null;\n      }\n    }\n\n    // ETC1\n\n    if (p === RGB_ETC1_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc1');\n      if (extension !== null) {\n        return extension.COMPRESSED_RGB_ETC1_WEBGL;\n      } else {\n        return null;\n      }\n    }\n\n    // ETC2\n\n    if (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_etc');\n      if (extension !== null) {\n        if (p === RGB_ETC2_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n        if (p === RGBA_ETC2_EAC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n      } else {\n        return null;\n      }\n    }\n\n    // ASTC\n\n    if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n      extension = extensions.get('WEBGL_compressed_texture_astc');\n      if (extension !== null) {\n        if (p === RGBA_ASTC_4x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n        if (p === RGBA_ASTC_5x4_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n        if (p === RGBA_ASTC_5x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n        if (p === RGBA_ASTC_6x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n        if (p === RGBA_ASTC_6x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n        if (p === RGBA_ASTC_8x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n        if (p === RGBA_ASTC_8x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n        if (p === RGBA_ASTC_8x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n        if (p === RGBA_ASTC_10x5_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n        if (p === RGBA_ASTC_10x6_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n        if (p === RGBA_ASTC_10x8_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n        if (p === RGBA_ASTC_10x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n        if (p === RGBA_ASTC_12x10_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n        if (p === RGBA_ASTC_12x12_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n      } else {\n        return null;\n      }\n    }\n\n    // BPTC\n\n    if (p === RGBA_BPTC_Format) {\n      extension = extensions.get('EXT_texture_compression_bptc');\n      if (extension !== null) {\n        if (p === RGBA_BPTC_Format) return encoding === sRGBEncoding ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n      } else {\n        return null;\n      }\n    }\n\n    //\n\n    if (p === UnsignedInt248Type) {\n      if (isWebGL2) return gl.UNSIGNED_INT_24_8;\n      extension = extensions.get('WEBGL_depth_texture');\n      if (extension !== null) {\n        return extension.UNSIGNED_INT_24_8_WEBGL;\n      } else {\n        return null;\n      }\n    }\n\n    // if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n    return gl[p] !== undefined ? gl[p] : null;\n  }\n  return {\n    convert: convert\n  };\n}\nexport { WebGLUtils };","map":{"version":3,"names":["RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGB_PVRTC_4BPPV1_Format","RGBA_S3TC_DXT5_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT1_Format","RGB_S3TC_DXT1_Format","DepthFormat","DepthStencilFormat","LuminanceAlphaFormat","LuminanceFormat","RedFormat","RGBFormat","RGBAFormat","AlphaFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBAIntegerFormat","HalfFloatType","FloatType","UnsignedIntType","IntType","UnsignedShortType","ShortType","ByteType","UnsignedInt248Type","UnsignedShort5551Type","UnsignedShort4444Type","UnsignedByteType","RGBA_BPTC_Format","sRGBEncoding","_SRGBAFormat","WebGLUtils","gl","extensions","capabilities","isWebGL2","convert","p","encoding","extension","UNSIGNED_BYTE","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","BYTE","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","HALF_FLOAT","get","HALF_FLOAT_OES","ALPHA","RGBA","LUMINANCE","LUMINANCE_ALPHA","DEPTH_COMPONENT","DEPTH_STENCIL","console","warn","SRGB_ALPHA_EXT","RED","RED_INTEGER","RG","RG_INTEGER","RGBA_INTEGER","COMPRESSED_SRGB_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT","COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_SRGB8_ETC2","COMPRESSED_RGB8_ETC2","COMPRESSED_SRGB8_ALPHA8_ETC2_EAC","COMPRESSED_RGBA8_ETC2_EAC","COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR","COMPRESSED_RGBA_ASTC_4x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR","COMPRESSED_RGBA_ASTC_5x4_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR","COMPRESSED_RGBA_ASTC_5x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR","COMPRESSED_RGBA_ASTC_6x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR","COMPRESSED_RGBA_ASTC_6x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR","COMPRESSED_RGBA_ASTC_8x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR","COMPRESSED_RGBA_ASTC_8x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR","COMPRESSED_RGBA_ASTC_8x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR","COMPRESSED_RGBA_ASTC_10x5_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR","COMPRESSED_RGBA_ASTC_10x6_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR","COMPRESSED_RGBA_ASTC_10x8_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR","COMPRESSED_RGBA_ASTC_10x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR","COMPRESSED_RGBA_ASTC_12x10_KHR","COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR","COMPRESSED_RGBA_ASTC_12x12_KHR","COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT","COMPRESSED_RGBA_BPTC_UNORM_EXT","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","undefined"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLUtils.js"],"sourcesContent":["import { RGBA_ASTC_4x4_Format, RGBA_ASTC_5x4_Format, RGBA_ASTC_5x5_Format, RGBA_ASTC_6x5_Format, RGBA_ASTC_6x6_Format, RGBA_ASTC_8x5_Format, RGBA_ASTC_8x6_Format, RGBA_ASTC_8x8_Format, RGBA_ASTC_10x5_Format, RGBA_ASTC_10x6_Format, RGBA_ASTC_10x8_Format, RGBA_ASTC_10x10_Format, RGBA_ASTC_12x10_Format, RGBA_ASTC_12x12_Format, RGB_ETC1_Format, RGB_ETC2_Format, RGBA_ETC2_EAC_Format, RGBA_PVRTC_2BPPV1_Format, RGBA_PVRTC_4BPPV1_Format, RGB_PVRTC_2BPPV1_Format, RGB_PVRTC_4BPPV1_Format, RGBA_S3TC_DXT5_Format, RGBA_S3TC_DXT3_Format, RGBA_S3TC_DXT1_Format, RGB_S3TC_DXT1_Format, DepthFormat, DepthStencilFormat, LuminanceAlphaFormat, LuminanceFormat, RedFormat, RGBFormat, RGBAFormat, AlphaFormat, RedIntegerFormat, RGFormat, RGIntegerFormat, RGBAIntegerFormat, HalfFloatType, FloatType, UnsignedIntType, IntType, UnsignedShortType, ShortType, ByteType, UnsignedInt248Type, UnsignedShort5551Type, UnsignedShort4444Type, UnsignedByteType, RGBA_BPTC_Format, sRGBEncoding, _SRGBAFormat } from '../../constants.js';\n\nfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\tconst isWebGL2 = capabilities.isWebGL2;\n\n\tfunction convert( p, encoding = null ) {\n\n\t\tlet extension;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\tif ( isWebGL2 ) return gl.HALF_FLOAT;\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\t// @deprecated since r137\n\n\t\tif ( p === RGBFormat ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228' );\n\t\t\treturn gl.RGBA;\n\n\t\t}\n\n\t\t// WebGL 1 sRGB fallback\n\n\t\tif ( p === _SRGBAFormat ) {\n\n\t\t\textension = extensions.get( 'EXT_sRGB' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.SRGB_ALPHA_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// WebGL2 formats.\n\n\t\tif ( p === RedFormat ) return gl.RED;\n\t\tif ( p === RedIntegerFormat ) return gl.RED_INTEGER;\n\t\tif ( p === RGFormat ) return gl.RG;\n\t\tif ( p === RGIntegerFormat ) return gl.RG_INTEGER;\n\t\tif ( p === RGBAIntegerFormat ) return gl.RGBA_INTEGER;\n\n\t\t// S3TC\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\tif ( encoding === sRGBEncoding ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc_srgb' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// PVRTC\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC1\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ETC2\n\n\t\tif ( p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_ETC2_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ETC2 : extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\tif ( p === RGBA_ETC2_EAC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC : extension.COMPRESSED_RGBA8_ETC2_EAC;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// ASTC\n\n\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_ASTC_4x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR : extension.COMPRESSED_RGBA_ASTC_4x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x4_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR : extension.COMPRESSED_RGBA_ASTC_5x4_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_5x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR : extension.COMPRESSED_RGBA_ASTC_5x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR : extension.COMPRESSED_RGBA_ASTC_6x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_6x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR : extension.COMPRESSED_RGBA_ASTC_6x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR : extension.COMPRESSED_RGBA_ASTC_8x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR : extension.COMPRESSED_RGBA_ASTC_8x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_8x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR : extension.COMPRESSED_RGBA_ASTC_8x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x5_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR : extension.COMPRESSED_RGBA_ASTC_10x5_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x6_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR : extension.COMPRESSED_RGBA_ASTC_10x6_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x8_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR : extension.COMPRESSED_RGBA_ASTC_10x8_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_10x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR : extension.COMPRESSED_RGBA_ASTC_10x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x10_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR : extension.COMPRESSED_RGBA_ASTC_12x10_KHR;\n\t\t\t\tif ( p === RGBA_ASTC_12x12_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR : extension.COMPRESSED_RGBA_ASTC_12x12_KHR;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// BPTC\n\n\t\tif ( p === RGBA_BPTC_Format ) {\n\n\t\t\textension = extensions.get( 'EXT_texture_compression_bptc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGBA_BPTC_Format ) return ( encoding === sRGBEncoding ) ? extension.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT : extension.COMPRESSED_RGBA_BPTC_UNORM_EXT;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\tif ( isWebGL2 ) return gl.UNSIGNED_INT_24_8;\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// if \"p\" can't be resolved, assume the user defines a WebGL constant as a string (fallback/workaround for packed RGB formats)\n\n\t\treturn ( gl[ p ] !== undefined ) ? gl[ p ] : null;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n\nexport { WebGLUtils };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}