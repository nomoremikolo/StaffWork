{"ast":null,"code":"import Object3DNode from './Object3DNode.js';\nclass CameraNode extends Object3DNode {\n  static PROJECTION_MATRIX = 'projectionMatrix';\n  constructor() {\n    let scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : CameraNode.POSITION;\n    super(scope);\n  }\n  getNodeType(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      return 'mat4';\n    }\n    return super.getNodeType(builder);\n  }\n  update(frame) {\n    const camera = frame.camera;\n    const uniformNode = this._uniformNode;\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      uniformNode.value = camera.projectionMatrix;\n    } else if (scope === CameraNode.VIEW_MATRIX) {\n      uniformNode.value = camera.matrixWorldInverse;\n    } else {\n      this.object3d = camera;\n      super.update(frame);\n    }\n  }\n  generate(builder) {\n    const scope = this.scope;\n    if (scope === CameraNode.PROJECTION_MATRIX) {\n      this._uniformNode.nodeType = 'mat4';\n    }\n    return super.generate(builder);\n  }\n}\nexport default CameraNode;","map":{"version":3,"names":["Object3DNode","CameraNode","PROJECTION_MATRIX","constructor","scope","POSITION","getNodeType","builder","update","frame","camera","uniformNode","_uniformNode","value","projectionMatrix","VIEW_MATRIX","matrixWorldInverse","object3d","generate","nodeType"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/accessors/CameraNode.js"],"sourcesContent":["import Object3DNode from './Object3DNode.js';\n\nclass CameraNode extends Object3DNode {\n\n\tstatic PROJECTION_MATRIX = 'projectionMatrix';\n\n\tconstructor( scope = CameraNode.POSITION ) {\n\n\t\tsuper( scope );\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\treturn 'mat4';\n\n\t\t}\n\n\t\treturn super.getNodeType( builder );\n\n\t}\n\n\tupdate( frame ) {\n\n\t\tconst camera = frame.camera;\n\t\tconst uniformNode = this._uniformNode;\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.projectionMatrix;\n\n\t\t} else if ( scope === CameraNode.VIEW_MATRIX ) {\n\n\t\t\tuniformNode.value = camera.matrixWorldInverse;\n\n\t\t} else {\n\n\t\t\tthis.object3d = camera;\n\n\t\t\tsuper.update( frame );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder ) {\n\n\t\tconst scope = this.scope;\n\n\t\tif ( scope === CameraNode.PROJECTION_MATRIX ) {\n\n\t\t\tthis._uniformNode.nodeType = 'mat4';\n\n\t\t}\n\n\t\treturn super.generate( builder );\n\n\t}\n\n}\n\nexport default CameraNode;\n"],"mappings":"AAAA,OAAOA,YAAY,MAAM,mBAAmB;AAE5C,MAAMC,UAAU,SAASD,YAAY,CAAC;EAErC,OAAOE,iBAAiB,GAAG,kBAAkB;EAE7CC,WAAW,GAAgC;IAAA,IAA9BC,KAAK,uEAAGH,UAAU,CAACI,QAAQ;IAEvC,KAAK,CAAED,KAAK,CAAE;EAEf;EAEAE,WAAW,CAAEC,OAAO,EAAG;IAEtB,MAAMH,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,KAAKH,UAAU,CAACC,iBAAiB,EAAG;MAE7C,OAAO,MAAM;IAEd;IAEA,OAAO,KAAK,CAACI,WAAW,CAAEC,OAAO,CAAE;EAEpC;EAEAC,MAAM,CAAEC,KAAK,EAAG;IAEf,MAAMC,MAAM,GAAGD,KAAK,CAACC,MAAM;IAC3B,MAAMC,WAAW,GAAG,IAAI,CAACC,YAAY;IACrC,MAAMR,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,KAAKH,UAAU,CAACC,iBAAiB,EAAG;MAE7CS,WAAW,CAACE,KAAK,GAAGH,MAAM,CAACI,gBAAgB;IAE5C,CAAC,MAAM,IAAKV,KAAK,KAAKH,UAAU,CAACc,WAAW,EAAG;MAE9CJ,WAAW,CAACE,KAAK,GAAGH,MAAM,CAACM,kBAAkB;IAE9C,CAAC,MAAM;MAEN,IAAI,CAACC,QAAQ,GAAGP,MAAM;MAEtB,KAAK,CAACF,MAAM,CAAEC,KAAK,CAAE;IAEtB;EAED;EAEAS,QAAQ,CAAEX,OAAO,EAAG;IAEnB,MAAMH,KAAK,GAAG,IAAI,CAACA,KAAK;IAExB,IAAKA,KAAK,KAAKH,UAAU,CAACC,iBAAiB,EAAG;MAE7C,IAAI,CAACU,YAAY,CAACO,QAAQ,GAAG,MAAM;IAEpC;IAEA,OAAO,KAAK,CAACD,QAAQ,CAAEX,OAAO,CAAE;EAEjC;AAED;AAEA,eAAeN,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}