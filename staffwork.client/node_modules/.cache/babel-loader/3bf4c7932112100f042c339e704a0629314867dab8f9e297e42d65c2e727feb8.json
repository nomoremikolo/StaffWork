{"ast":null,"code":"import { ImageLoader } from './ImageLoader.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Loader } from './Loader.js';\nclass CubeTextureLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n  }\n  load(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    const loader = new ImageLoader(this.manager);\n    loader.setCrossOrigin(this.crossOrigin);\n    loader.setPath(this.path);\n    let loaded = 0;\n    function loadTexture(i) {\n      loader.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n    return texture;\n  }\n}\nexport { CubeTextureLoader };","map":{"version":3,"names":["ImageLoader","CubeTexture","Loader","CubeTextureLoader","constructor","manager","load","urls","onLoad","onProgress","onError","texture","loader","setCrossOrigin","crossOrigin","setPath","path","loaded","loadTexture","i","image","images","needsUpdate","undefined","length"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/loaders/CubeTextureLoader.js"],"sourcesContent":["import { ImageLoader } from './ImageLoader.js';\nimport { CubeTexture } from '../textures/CubeTexture.js';\nimport { Loader } from './Loader.js';\n\nclass CubeTextureLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t}\n\n\tload( urls, onLoad, onProgress, onError ) {\n\n\t\tconst texture = new CubeTexture();\n\n\t\tconst loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tlet loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( let i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n}\n\n\nexport { CubeTextureLoader };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,4BAA4B;AACxD,SAASC,MAAM,QAAQ,aAAa;AAEpC,MAAMC,iBAAiB,SAASD,MAAM,CAAC;EAEtCE,WAAW,CAAEC,OAAO,EAAG;IAEtB,KAAK,CAAEA,OAAO,CAAE;EAEjB;EAEAC,IAAI,CAAEC,IAAI,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAG;IAEzC,MAAMC,OAAO,GAAG,IAAIV,WAAW,EAAE;IAEjC,MAAMW,MAAM,GAAG,IAAIZ,WAAW,CAAE,IAAI,CAACK,OAAO,CAAE;IAC9CO,MAAM,CAACC,cAAc,CAAE,IAAI,CAACC,WAAW,CAAE;IACzCF,MAAM,CAACG,OAAO,CAAE,IAAI,CAACC,IAAI,CAAE;IAE3B,IAAIC,MAAM,GAAG,CAAC;IAEd,SAASC,WAAW,CAAEC,CAAC,EAAG;MAEzBP,MAAM,CAACN,IAAI,CAAEC,IAAI,CAAEY,CAAC,CAAE,EAAE,UAAWC,KAAK,EAAG;QAE1CT,OAAO,CAACU,MAAM,CAAEF,CAAC,CAAE,GAAGC,KAAK;QAE3BH,MAAM,EAAG;QAET,IAAKA,MAAM,KAAK,CAAC,EAAG;UAEnBN,OAAO,CAACW,WAAW,GAAG,IAAI;UAE1B,IAAKd,MAAM,EAAGA,MAAM,CAAEG,OAAO,CAAE;QAEhC;MAED,CAAC,EAAEY,SAAS,EAAEb,OAAO,CAAE;IAExB;IAEA,KAAM,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGZ,IAAI,CAACiB,MAAM,EAAE,EAAGL,CAAC,EAAG;MAExCD,WAAW,CAAEC,CAAC,CAAE;IAEjB;IAEA,OAAOR,OAAO;EAEf;AAED;AAGA,SAASR,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}