{"ast":null,"code":"import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\nconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/new Vector3();\nconst _lookTarget = /*@__PURE__*/new Vector3();\nclass LightShadow {\n  constructor(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.normalBias = 0;\n    this.radius = 1;\n    this.blurSamples = 8;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n    this._viewportCount = 1;\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n  getViewportCount() {\n    return this._viewportCount;\n  }\n  getFrustum() {\n    return this._frustum;\n  }\n  updateMatrices(light) {\n    const shadowCamera = this.camera;\n    const shadowMatrix = this.matrix;\n    _lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n    shadowCamera.position.copy(_lightPositionWorld);\n    _lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n    shadowCamera.lookAt(_lookTarget);\n    shadowCamera.updateMatrixWorld();\n    _projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n    this._frustum.setFromProjectionMatrix(_projScreenMatrix);\n    shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n    shadowMatrix.multiply(_projScreenMatrix);\n  }\n  getViewport(viewportIndex) {\n    return this._viewports[viewportIndex];\n  }\n  getFrameExtents() {\n    return this._frameExtents;\n  }\n  dispose() {\n    if (this.map) {\n      this.map.dispose();\n    }\n    if (this.mapPass) {\n      this.mapPass.dispose();\n    }\n  }\n  copy(source) {\n    this.camera = source.camera.clone();\n    this.bias = source.bias;\n    this.radius = source.radius;\n    this.mapSize.copy(source.mapSize);\n    return this;\n  }\n  clone() {\n    return new this.constructor().copy(this);\n  }\n  toJSON() {\n    const object = {};\n    if (this.bias !== 0) object.bias = this.bias;\n    if (this.normalBias !== 0) object.normalBias = this.normalBias;\n    if (this.radius !== 1) object.radius = this.radius;\n    if (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n    object.camera = this.camera.toJSON(false).object;\n    delete object.camera.matrix;\n    return object;\n  }\n}\nexport { LightShadow };","map":{"version":3,"names":["Matrix4","Vector2","Vector3","Vector4","Frustum","_projScreenMatrix","_lightPositionWorld","_lookTarget","LightShadow","constructor","camera","bias","normalBias","radius","blurSamples","mapSize","map","mapPass","matrix","autoUpdate","needsUpdate","_frustum","_frameExtents","_viewportCount","_viewports","getViewportCount","getFrustum","updateMatrices","light","shadowCamera","shadowMatrix","setFromMatrixPosition","matrixWorld","position","copy","target","lookAt","updateMatrixWorld","multiplyMatrices","projectionMatrix","matrixWorldInverse","setFromProjectionMatrix","set","multiply","getViewport","viewportIndex","getFrameExtents","dispose","source","clone","toJSON","object","x","y","toArray"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/lights/LightShadow.js"],"sourcesContent":["import { Matrix4 } from '../math/Matrix4.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { Vector4 } from '../math/Vector4.js';\nimport { Frustum } from '../math/Frustum.js';\n\nconst _projScreenMatrix = /*@__PURE__*/ new Matrix4();\nconst _lightPositionWorld = /*@__PURE__*/ new Vector3();\nconst _lookTarget = /*@__PURE__*/ new Vector3();\n\nclass LightShadow {\n\n\tconstructor( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.normalBias = 0;\n\t\tthis.radius = 1;\n\t\tthis.blurSamples = 8;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tgetViewportCount() {\n\n\t\treturn this._viewportCount;\n\n\t}\n\n\tgetFrustum() {\n\n\t\treturn this._frustum;\n\n\t}\n\n\tupdateMatrices( light ) {\n\n\t\tconst shadowCamera = this.camera;\n\t\tconst shadowMatrix = this.matrix;\n\n\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\tshadowCamera.lookAt( _lookTarget );\n\t\tshadowCamera.updateMatrixWorld();\n\n\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\tthis._frustum.setFromProjectionMatrix( _projScreenMatrix );\n\n\t\tshadowMatrix.set(\n\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t);\n\n\t\tshadowMatrix.multiply( _projScreenMatrix );\n\n\t}\n\n\tgetViewport( viewportIndex ) {\n\n\t\treturn this._viewports[ viewportIndex ];\n\n\t}\n\n\tgetFrameExtents() {\n\n\t\treturn this._frameExtents;\n\n\t}\n\n\tdispose() {\n\n\t\tif ( this.map ) {\n\n\t\t\tthis.map.dispose();\n\n\t\t}\n\n\t\tif ( this.mapPass ) {\n\n\t\t\tthis.mapPass.dispose();\n\n\t\t}\n\n\t}\n\n\tcopy( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t}\n\n\tclone() {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.normalBias !== 0 ) object.normalBias = this.normalBias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n}\n\nexport { LightShadow };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}