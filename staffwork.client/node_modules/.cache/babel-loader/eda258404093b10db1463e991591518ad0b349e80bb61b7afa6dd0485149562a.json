{"ast":null,"code":"import { Curve } from '../core/Curve.js';\nimport { CubicBezier } from '../core/Interpolations.js';\nimport { Vector3 } from '../../math/Vector3.js';\nclass CubicBezierCurve3 extends Curve {\n  constructor() {\n    let v0 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector3();\n    let v1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    let v2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new Vector3();\n    let v3 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : new Vector3();\n    super();\n    this.isCubicBezierCurve3 = true;\n    this.type = 'CubicBezierCurve3';\n    this.v0 = v0;\n    this.v1 = v1;\n    this.v2 = v2;\n    this.v3 = v3;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector3();\n    const point = optionalTarget;\n    const v0 = this.v0,\n      v1 = this.v1,\n      v2 = this.v2,\n      v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n    return point;\n  }\n  copy(source) {\n    super.copy(source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  }\n}\nexport { CubicBezierCurve3 };","map":{"version":3,"names":["Curve","CubicBezier","Vector3","CubicBezierCurve3","constructor","v0","v1","v2","v3","isCubicBezierCurve3","type","getPoint","t","optionalTarget","point","set","x","y","z","copy","source","toJSON","data","toArray","fromJSON","json","fromArray"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/extras/curves/CubicBezierCurve3.js"],"sourcesContent":["import { Curve } from '../core/Curve.js';\nimport { CubicBezier } from '../core/Interpolations.js';\nimport { Vector3 } from '../../math/Vector3.js';\n\nclass CubicBezierCurve3 extends Curve {\n\n\tconstructor( v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3() ) {\n\n\t\tsuper();\n\n\t\tthis.isCubicBezierCurve3 = true;\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0;\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\t\tthis.v3 = v3;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector3() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tconst v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { CubicBezierCurve3 };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}