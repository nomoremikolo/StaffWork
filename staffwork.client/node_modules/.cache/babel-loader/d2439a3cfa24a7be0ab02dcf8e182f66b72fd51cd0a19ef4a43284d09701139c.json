{"ast":null,"code":"import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\nclass MeshMatcapMaterial extends Material {\n  constructor(parameters) {\n    super();\n    this.isMeshMatcapMaterial = true;\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.type = 'MeshMatcapMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n    this.map = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.flatShading = false;\n    this.fog = true;\n    this.setValues(parameters);\n  }\n  copy(source) {\n    super.copy(source);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.color.copy(source.color);\n    this.matcap = source.matcap;\n    this.map = source.map;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.flatShading = source.flatShading;\n    this.fog = source.fog;\n    return this;\n  }\n}\nexport { MeshMatcapMaterial };","map":{"version":3,"names":["TangentSpaceNormalMap","Material","Vector2","Color","MeshMatcapMaterial","constructor","parameters","isMeshMatcapMaterial","defines","type","color","matcap","map","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","alphaMap","flatShading","fog","setValues","copy","source"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/materials/MeshMatcapMaterial.js"],"sourcesContent":["import { TangentSpaceNormalMap } from '../constants.js';\nimport { Material } from './Material.js';\nimport { Vector2 } from '../math/Vector2.js';\nimport { Color } from '../math/Color.js';\n\nclass MeshMatcapMaterial extends Material {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshMatcapMaterial = true;\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.flatShading = false;\n\n\t\tthis.fog = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.flatShading = source.flatShading;\n\n\t\tthis.fog = source.fog;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { MeshMatcapMaterial };\n"],"mappings":"AAAA,SAASA,qBAAqB,QAAQ,iBAAiB;AACvD,SAASC,QAAQ,QAAQ,eAAe;AACxC,SAASC,OAAO,QAAQ,oBAAoB;AAC5C,SAASC,KAAK,QAAQ,kBAAkB;AAExC,MAAMC,kBAAkB,SAASH,QAAQ,CAAC;EAEzCI,WAAW,CAAEC,UAAU,EAAG;IAEzB,KAAK,EAAE;IAEP,IAAI,CAACC,oBAAoB,GAAG,IAAI;IAEhC,IAAI,CAACC,OAAO,GAAG;MAAE,QAAQ,EAAE;IAAG,CAAC;IAE/B,IAAI,CAACC,IAAI,GAAG,oBAAoB;IAEhC,IAAI,CAACC,KAAK,GAAG,IAAIP,KAAK,CAAE,QAAQ,CAAE,CAAC,CAAC;;IAEpC,IAAI,CAACQ,MAAM,GAAG,IAAI;IAElB,IAAI,CAACC,GAAG,GAAG,IAAI;IAEf,IAAI,CAACC,OAAO,GAAG,IAAI;IACnB,IAAI,CAACC,SAAS,GAAG,CAAC;IAElB,IAAI,CAACC,SAAS,GAAG,IAAI;IACrB,IAAI,CAACC,aAAa,GAAGhB,qBAAqB;IAC1C,IAAI,CAACiB,WAAW,GAAG,IAAIf,OAAO,CAAE,CAAC,EAAE,CAAC,CAAE;IAEtC,IAAI,CAACgB,eAAe,GAAG,IAAI;IAC3B,IAAI,CAACC,iBAAiB,GAAG,CAAC;IAC1B,IAAI,CAACC,gBAAgB,GAAG,CAAC;IAEzB,IAAI,CAACC,QAAQ,GAAG,IAAI;IAEpB,IAAI,CAACC,WAAW,GAAG,KAAK;IAExB,IAAI,CAACC,GAAG,GAAG,IAAI;IAEf,IAAI,CAACC,SAAS,CAAElB,UAAU,CAAE;EAE7B;EAGAmB,IAAI,CAAEC,MAAM,EAAG;IAEd,KAAK,CAACD,IAAI,CAAEC,MAAM,CAAE;IAEpB,IAAI,CAAClB,OAAO,GAAG;MAAE,QAAQ,EAAE;IAAG,CAAC;IAE/B,IAAI,CAACE,KAAK,CAACe,IAAI,CAAEC,MAAM,CAAChB,KAAK,CAAE;IAE/B,IAAI,CAACC,MAAM,GAAGe,MAAM,CAACf,MAAM;IAE3B,IAAI,CAACC,GAAG,GAAGc,MAAM,CAACd,GAAG;IAErB,IAAI,CAACC,OAAO,GAAGa,MAAM,CAACb,OAAO;IAC7B,IAAI,CAACC,SAAS,GAAGY,MAAM,CAACZ,SAAS;IAEjC,IAAI,CAACC,SAAS,GAAGW,MAAM,CAACX,SAAS;IACjC,IAAI,CAACC,aAAa,GAAGU,MAAM,CAACV,aAAa;IACzC,IAAI,CAACC,WAAW,CAACQ,IAAI,CAAEC,MAAM,CAACT,WAAW,CAAE;IAE3C,IAAI,CAACC,eAAe,GAAGQ,MAAM,CAACR,eAAe;IAC7C,IAAI,CAACC,iBAAiB,GAAGO,MAAM,CAACP,iBAAiB;IACjD,IAAI,CAACC,gBAAgB,GAAGM,MAAM,CAACN,gBAAgB;IAE/C,IAAI,CAACC,QAAQ,GAAGK,MAAM,CAACL,QAAQ;IAE/B,IAAI,CAACC,WAAW,GAAGI,MAAM,CAACJ,WAAW;IAErC,IAAI,CAACC,GAAG,GAAGG,MAAM,CAACH,GAAG;IAErB,OAAO,IAAI;EAEZ;AAED;AAEA,SAASnB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}