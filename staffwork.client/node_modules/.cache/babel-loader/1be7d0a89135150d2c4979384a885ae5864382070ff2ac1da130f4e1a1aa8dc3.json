{"ast":null,"code":"import Node from '../core/Node.js';\nclass ConvertNode extends Node {\n  constructor(node, convertTo) {\n    super();\n    this.node = node;\n    this.convertTo = convertTo;\n  }\n  getNodeType(builder) {\n    const requestType = this.node.getNodeType(builder);\n    let convertTo = null;\n    for (const overloadingType of this.convertTo.split('|')) {\n      if (convertTo === null || builder.getTypeLength(requestType) === builder.getTypeLength(overloadingType)) {\n        convertTo = overloadingType;\n      }\n    }\n    return convertTo;\n  }\n  generate(builder, output) {\n    const node = this.node;\n    const type = this.getNodeType(builder);\n    const snippet = node.build(builder, type);\n    return builder.format(snippet, type, output);\n  }\n}\nexport default ConvertNode;","map":{"version":3,"names":["Node","ConvertNode","constructor","node","convertTo","getNodeType","builder","requestType","overloadingType","split","getTypeLength","generate","output","type","snippet","build","format"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/utils/ConvertNode.js"],"sourcesContent":["import Node from '../core/Node.js';\n\nclass ConvertNode extends Node {\n\n\tconstructor( node, convertTo ) {\n\n\t\tsuper();\n\n\t\tthis.node = node;\n\t\tthis.convertTo = convertTo;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst requestType = this.node.getNodeType( builder );\n\n\t\tlet convertTo = null;\n\n\t\tfor ( const overloadingType of this.convertTo.split( '|' ) ) {\n\n\t\t\tif ( convertTo === null || builder.getTypeLength( requestType ) === builder.getTypeLength( overloadingType ) ) {\n\n\t\t\t\tconvertTo = overloadingType;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn convertTo;\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst node = this.node;\n\t\tconst type = this.getNodeType( builder );\n\n\t\tconst snippet = node.build( builder, type );\n\n\t\treturn builder.format( snippet, type, output );\n\n\t}\n\n}\n\nexport default ConvertNode;\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,iBAAiB;AAElC,MAAMC,WAAW,SAASD,IAAI,CAAC;EAE9BE,WAAW,CAAEC,IAAI,EAAEC,SAAS,EAAG;IAE9B,KAAK,EAAE;IAEP,IAAI,CAACD,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,SAAS,GAAGA,SAAS;EAE3B;EAEAC,WAAW,CAAEC,OAAO,EAAG;IAEtB,MAAMC,WAAW,GAAG,IAAI,CAACJ,IAAI,CAACE,WAAW,CAAEC,OAAO,CAAE;IAEpD,IAAIF,SAAS,GAAG,IAAI;IAEpB,KAAM,MAAMI,eAAe,IAAI,IAAI,CAACJ,SAAS,CAACK,KAAK,CAAE,GAAG,CAAE,EAAG;MAE5D,IAAKL,SAAS,KAAK,IAAI,IAAIE,OAAO,CAACI,aAAa,CAAEH,WAAW,CAAE,KAAKD,OAAO,CAACI,aAAa,CAAEF,eAAe,CAAE,EAAG;QAE9GJ,SAAS,GAAGI,eAAe;MAE5B;IAED;IAEA,OAAOJ,SAAS;EAEjB;EAEAO,QAAQ,CAAEL,OAAO,EAAEM,MAAM,EAAG;IAE3B,MAAMT,IAAI,GAAG,IAAI,CAACA,IAAI;IACtB,MAAMU,IAAI,GAAG,IAAI,CAACR,WAAW,CAAEC,OAAO,CAAE;IAExC,MAAMQ,OAAO,GAAGX,IAAI,CAACY,KAAK,CAAET,OAAO,EAAEO,IAAI,CAAE;IAE3C,OAAOP,OAAO,CAACU,MAAM,CAAEF,OAAO,EAAED,IAAI,EAAED,MAAM,CAAE;EAE/C;AAED;AAEA,eAAeX,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}