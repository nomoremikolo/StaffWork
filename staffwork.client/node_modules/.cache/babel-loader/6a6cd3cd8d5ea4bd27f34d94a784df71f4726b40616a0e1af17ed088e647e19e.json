{"ast":null,"code":"import { WebGLLights } from './WebGLLights.js';\nfunction WebGLRenderState(extensions, capabilities) {\n  const lights = new WebGLLights(extensions, capabilities);\n  const lightsArray = [];\n  const shadowsArray = [];\n  function init() {\n    lightsArray.length = 0;\n    shadowsArray.length = 0;\n  }\n  function pushLight(light) {\n    lightsArray.push(light);\n  }\n  function pushShadow(shadowLight) {\n    shadowsArray.push(shadowLight);\n  }\n  function setupLights(physicallyCorrectLights) {\n    lights.setup(lightsArray, physicallyCorrectLights);\n  }\n  function setupLightsView(camera) {\n    lights.setupView(lightsArray, camera);\n  }\n  const state = {\n    lightsArray: lightsArray,\n    shadowsArray: shadowsArray,\n    lights: lights\n  };\n  return {\n    init: init,\n    state: state,\n    setupLights: setupLights,\n    setupLightsView: setupLightsView,\n    pushLight: pushLight,\n    pushShadow: pushShadow\n  };\n}\nfunction WebGLRenderStates(extensions, capabilities) {\n  let renderStates = new WeakMap();\n  function get(scene) {\n    let renderCallDepth = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    const renderStateArray = renderStates.get(scene);\n    let renderState;\n    if (renderStateArray === undefined) {\n      renderState = new WebGLRenderState(extensions, capabilities);\n      renderStates.set(scene, [renderState]);\n    } else {\n      if (renderCallDepth >= renderStateArray.length) {\n        renderState = new WebGLRenderState(extensions, capabilities);\n        renderStateArray.push(renderState);\n      } else {\n        renderState = renderStateArray[renderCallDepth];\n      }\n    }\n    return renderState;\n  }\n  function dispose() {\n    renderStates = new WeakMap();\n  }\n  return {\n    get: get,\n    dispose: dispose\n  };\n}\nexport { WebGLRenderStates };","map":{"version":3,"names":["WebGLLights","WebGLRenderState","extensions","capabilities","lights","lightsArray","shadowsArray","init","length","pushLight","light","push","pushShadow","shadowLight","setupLights","physicallyCorrectLights","setup","setupLightsView","camera","setupView","state","WebGLRenderStates","renderStates","WeakMap","get","scene","renderCallDepth","renderStateArray","renderState","undefined","set","dispose"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLRenderStates.js"],"sourcesContent":["import { WebGLLights } from './WebGLLights.js';\n\nfunction WebGLRenderState( extensions, capabilities ) {\n\n\tconst lights = new WebGLLights( extensions, capabilities );\n\n\tconst lightsArray = [];\n\tconst shadowsArray = [];\n\n\tfunction init() {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t}\n\n\tfunction pushLight( light ) {\n\n\t\tlightsArray.push( light );\n\n\t}\n\n\tfunction pushShadow( shadowLight ) {\n\n\t\tshadowsArray.push( shadowLight );\n\n\t}\n\n\tfunction setupLights( physicallyCorrectLights ) {\n\n\t\tlights.setup( lightsArray, physicallyCorrectLights );\n\n\t}\n\n\tfunction setupLightsView( camera ) {\n\n\t\tlights.setupView( lightsArray, camera );\n\n\t}\n\n\tconst state = {\n\t\tlightsArray: lightsArray,\n\t\tshadowsArray: shadowsArray,\n\n\t\tlights: lights\n\t};\n\n\treturn {\n\t\tinit: init,\n\t\tstate: state,\n\t\tsetupLights: setupLights,\n\t\tsetupLightsView: setupLightsView,\n\n\t\tpushLight: pushLight,\n\t\tpushShadow: pushShadow\n\t};\n\n}\n\nfunction WebGLRenderStates( extensions, capabilities ) {\n\n\tlet renderStates = new WeakMap();\n\n\tfunction get( scene, renderCallDepth = 0 ) {\n\n\t\tconst renderStateArray = renderStates.get( scene );\n\t\tlet renderState;\n\n\t\tif ( renderStateArray === undefined ) {\n\n\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\trenderStates.set( scene, [ renderState ] );\n\n\t\t} else {\n\n\t\t\tif ( renderCallDepth >= renderStateArray.length ) {\n\n\t\t\t\trenderState = new WebGLRenderState( extensions, capabilities );\n\t\t\t\trenderStateArray.push( renderState );\n\n\t\t\t} else {\n\n\t\t\t\trenderState = renderStateArray[ renderCallDepth ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn renderState;\n\n\t}\n\n\tfunction dispose() {\n\n\t\trenderStates = new WeakMap();\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n\nexport { WebGLRenderStates };\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,SAASC,gBAAgB,CAAEC,UAAU,EAAEC,YAAY,EAAG;EAErD,MAAMC,MAAM,GAAG,IAAIJ,WAAW,CAAEE,UAAU,EAAEC,YAAY,CAAE;EAE1D,MAAME,WAAW,GAAG,EAAE;EACtB,MAAMC,YAAY,GAAG,EAAE;EAEvB,SAASC,IAAI,GAAG;IAEfF,WAAW,CAACG,MAAM,GAAG,CAAC;IACtBF,YAAY,CAACE,MAAM,GAAG,CAAC;EAExB;EAEA,SAASC,SAAS,CAAEC,KAAK,EAAG;IAE3BL,WAAW,CAACM,IAAI,CAAED,KAAK,CAAE;EAE1B;EAEA,SAASE,UAAU,CAAEC,WAAW,EAAG;IAElCP,YAAY,CAACK,IAAI,CAAEE,WAAW,CAAE;EAEjC;EAEA,SAASC,WAAW,CAAEC,uBAAuB,EAAG;IAE/CX,MAAM,CAACY,KAAK,CAAEX,WAAW,EAAEU,uBAAuB,CAAE;EAErD;EAEA,SAASE,eAAe,CAAEC,MAAM,EAAG;IAElCd,MAAM,CAACe,SAAS,CAAEd,WAAW,EAAEa,MAAM,CAAE;EAExC;EAEA,MAAME,KAAK,GAAG;IACbf,WAAW,EAAEA,WAAW;IACxBC,YAAY,EAAEA,YAAY;IAE1BF,MAAM,EAAEA;EACT,CAAC;EAED,OAAO;IACNG,IAAI,EAAEA,IAAI;IACVa,KAAK,EAAEA,KAAK;IACZN,WAAW,EAAEA,WAAW;IACxBG,eAAe,EAAEA,eAAe;IAEhCR,SAAS,EAAEA,SAAS;IACpBG,UAAU,EAAEA;EACb,CAAC;AAEF;AAEA,SAASS,iBAAiB,CAAEnB,UAAU,EAAEC,YAAY,EAAG;EAEtD,IAAImB,YAAY,GAAG,IAAIC,OAAO,EAAE;EAEhC,SAASC,GAAG,CAAEC,KAAK,EAAwB;IAAA,IAAtBC,eAAe,uEAAG,CAAC;IAEvC,MAAMC,gBAAgB,GAAGL,YAAY,CAACE,GAAG,CAAEC,KAAK,CAAE;IAClD,IAAIG,WAAW;IAEf,IAAKD,gBAAgB,KAAKE,SAAS,EAAG;MAErCD,WAAW,GAAG,IAAI3B,gBAAgB,CAAEC,UAAU,EAAEC,YAAY,CAAE;MAC9DmB,YAAY,CAACQ,GAAG,CAAEL,KAAK,EAAE,CAAEG,WAAW,CAAE,CAAE;IAE3C,CAAC,MAAM;MAEN,IAAKF,eAAe,IAAIC,gBAAgB,CAACnB,MAAM,EAAG;QAEjDoB,WAAW,GAAG,IAAI3B,gBAAgB,CAAEC,UAAU,EAAEC,YAAY,CAAE;QAC9DwB,gBAAgB,CAAChB,IAAI,CAAEiB,WAAW,CAAE;MAErC,CAAC,MAAM;QAENA,WAAW,GAAGD,gBAAgB,CAAED,eAAe,CAAE;MAElD;IAED;IAEA,OAAOE,WAAW;EAEnB;EAEA,SAASG,OAAO,GAAG;IAElBT,YAAY,GAAG,IAAIC,OAAO,EAAE;EAE7B;EAEA,OAAO;IACNC,GAAG,EAAEA,GAAG;IACRO,OAAO,EAAEA;EACV,CAAC;AAEF;AAGA,SAASV,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}