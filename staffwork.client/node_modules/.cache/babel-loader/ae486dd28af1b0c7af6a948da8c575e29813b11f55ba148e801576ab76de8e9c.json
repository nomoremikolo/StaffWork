{"ast":null,"code":"import { Vector2 } from '../math/Vector2.js';\nimport { MeshStandardMaterial } from './MeshStandardMaterial.js';\nimport { Color } from '../math/Color.js';\nimport * as MathUtils from '../math/MathUtils.js';\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n  constructor(parameters) {\n    super();\n    this.isMeshPhysicalMaterial = true;\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.clearcoatMap = null;\n    this.clearcoatRoughness = 0.0;\n    this.clearcoatRoughnessMap = null;\n    this.clearcoatNormalScale = new Vector2(1, 1);\n    this.clearcoatNormalMap = null;\n    this.ior = 1.5;\n    Object.defineProperty(this, 'reflectivity', {\n      get: function () {\n        return MathUtils.clamp(2.5 * (this.ior - 1) / (this.ior + 1), 0, 1);\n      },\n      set: function (reflectivity) {\n        this.ior = (1 + 0.4 * reflectivity) / (1 - 0.4 * reflectivity);\n      }\n    });\n    this.iridescenceMap = null;\n    this.iridescenceIOR = 1.3;\n    this.iridescenceThicknessRange = [100, 400];\n    this.iridescenceThicknessMap = null;\n    this.sheenColor = new Color(0x000000);\n    this.sheenColorMap = null;\n    this.sheenRoughness = 1.0;\n    this.sheenRoughnessMap = null;\n    this.transmissionMap = null;\n    this.thickness = 0;\n    this.thicknessMap = null;\n    this.attenuationDistance = Infinity;\n    this.attenuationColor = new Color(1, 1, 1);\n    this.specularIntensity = 1.0;\n    this.specularIntensityMap = null;\n    this.specularColor = new Color(1, 1, 1);\n    this.specularColorMap = null;\n    this._sheen = 0.0;\n    this._clearcoat = 0;\n    this._iridescence = 0;\n    this._transmission = 0;\n    this.setValues(parameters);\n  }\n  get sheen() {\n    return this._sheen;\n  }\n  set sheen(value) {\n    if (this._sheen > 0 !== value > 0) {\n      this.version++;\n    }\n    this._sheen = value;\n  }\n  get clearcoat() {\n    return this._clearcoat;\n  }\n  set clearcoat(value) {\n    if (this._clearcoat > 0 !== value > 0) {\n      this.version++;\n    }\n    this._clearcoat = value;\n  }\n  get iridescence() {\n    return this._iridescence;\n  }\n  set iridescence(value) {\n    if (this._iridescence > 0 !== value > 0) {\n      this.version++;\n    }\n    this._iridescence = value;\n  }\n  get transmission() {\n    return this._transmission;\n  }\n  set transmission(value) {\n    if (this._transmission > 0 !== value > 0) {\n      this.version++;\n    }\n    this._transmission = value;\n  }\n  copy(source) {\n    super.copy(source);\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.clearcoat = source.clearcoat;\n    this.clearcoatMap = source.clearcoatMap;\n    this.clearcoatRoughness = source.clearcoatRoughness;\n    this.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n    this.clearcoatNormalMap = source.clearcoatNormalMap;\n    this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n    this.ior = source.ior;\n    this.iridescence = source.iridescence;\n    this.iridescenceMap = source.iridescenceMap;\n    this.iridescenceIOR = source.iridescenceIOR;\n    this.iridescenceThicknessRange = [...source.iridescenceThicknessRange];\n    this.iridescenceThicknessMap = source.iridescenceThicknessMap;\n    this.sheen = source.sheen;\n    this.sheenColor.copy(source.sheenColor);\n    this.sheenColorMap = source.sheenColorMap;\n    this.sheenRoughness = source.sheenRoughness;\n    this.sheenRoughnessMap = source.sheenRoughnessMap;\n    this.transmission = source.transmission;\n    this.transmissionMap = source.transmissionMap;\n    this.thickness = source.thickness;\n    this.thicknessMap = source.thicknessMap;\n    this.attenuationDistance = source.attenuationDistance;\n    this.attenuationColor.copy(source.attenuationColor);\n    this.specularIntensity = source.specularIntensity;\n    this.specularIntensityMap = source.specularIntensityMap;\n    this.specularColor.copy(source.specularColor);\n    this.specularColorMap = source.specularColorMap;\n    return this;\n  }\n}\nexport { MeshPhysicalMaterial };","map":{"version":3,"names":["Vector2","MeshStandardMaterial","Color","MathUtils","MeshPhysicalMaterial","constructor","parameters","isMeshPhysicalMaterial","defines","type","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","ior","Object","defineProperty","get","clamp","set","reflectivity","iridescenceMap","iridescenceIOR","iridescenceThicknessRange","iridescenceThicknessMap","sheenColor","sheenColorMap","sheenRoughness","sheenRoughnessMap","transmissionMap","thickness","thicknessMap","attenuationDistance","Infinity","attenuationColor","specularIntensity","specularIntensityMap","specularColor","specularColorMap","_sheen","_clearcoat","_iridescence","_transmission","setValues","sheen","value","version","clearcoat","iridescence","transmission","copy","source"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/materials/MeshPhysicalMaterial.js"],"sourcesContent":["import { Vector2 } from '../math/Vector2.js';\nimport { MeshStandardMaterial } from './MeshStandardMaterial.js';\nimport { Color } from '../math/Color.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\n\tconstructor( parameters ) {\n\n\t\tsuper();\n\n\t\tthis.isMeshPhysicalMaterial = true;\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.clearcoatMap = null;\n\t\tthis.clearcoatRoughness = 0.0;\n\t\tthis.clearcoatRoughnessMap = null;\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.ior = 1.5;\n\n\t\tObject.defineProperty( this, 'reflectivity', {\n\t\t\tget: function () {\n\n\t\t\t\treturn ( MathUtils.clamp( 2.5 * ( this.ior - 1 ) / ( this.ior + 1 ), 0, 1 ) );\n\n\t\t\t},\n\t\t\tset: function ( reflectivity ) {\n\n\t\t\t\tthis.ior = ( 1 + 0.4 * reflectivity ) / ( 1 - 0.4 * reflectivity );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.iridescenceMap = null;\n\t\tthis.iridescenceIOR = 1.3;\n\t\tthis.iridescenceThicknessRange = [ 100, 400 ];\n\t\tthis.iridescenceThicknessMap = null;\n\n\t\tthis.sheenColor = new Color( 0x000000 );\n\t\tthis.sheenColorMap = null;\n\t\tthis.sheenRoughness = 1.0;\n\t\tthis.sheenRoughnessMap = null;\n\n\t\tthis.transmissionMap = null;\n\n\t\tthis.thickness = 0;\n\t\tthis.thicknessMap = null;\n\t\tthis.attenuationDistance = Infinity;\n\t\tthis.attenuationColor = new Color( 1, 1, 1 );\n\n\t\tthis.specularIntensity = 1.0;\n\t\tthis.specularIntensityMap = null;\n\t\tthis.specularColor = new Color( 1, 1, 1 );\n\t\tthis.specularColorMap = null;\n\n\t\tthis._sheen = 0.0;\n\t\tthis._clearcoat = 0;\n\t\tthis._iridescence = 0;\n\t\tthis._transmission = 0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tget sheen() {\n\n\t\treturn this._sheen;\n\n\t}\n\n\tset sheen( value ) {\n\n\t\tif ( this._sheen > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._sheen = value;\n\n\t}\n\n\tget clearcoat() {\n\n\t\treturn this._clearcoat;\n\n\t}\n\n\tset clearcoat( value ) {\n\n\t\tif ( this._clearcoat > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._clearcoat = value;\n\n\t}\n\n\tget iridescence() {\n\n\t\treturn this._iridescence;\n\n\t}\n\n\tset iridescence( value ) {\n\n\t\tif ( this._iridescence > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._iridescence = value;\n\n\t}\n\n\tget transmission() {\n\n\t\treturn this._transmission;\n\n\t}\n\n\tset transmission( value ) {\n\n\t\tif ( this._transmission > 0 !== value > 0 ) {\n\n\t\t\tthis.version ++;\n\n\t\t}\n\n\t\tthis._transmission = value;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.ior = source.ior;\n\n\t\tthis.iridescence = source.iridescence;\n\t\tthis.iridescenceMap = source.iridescenceMap;\n\t\tthis.iridescenceIOR = source.iridescenceIOR;\n\t\tthis.iridescenceThicknessRange = [ ...source.iridescenceThicknessRange ];\n\t\tthis.iridescenceThicknessMap = source.iridescenceThicknessMap;\n\n\t\tthis.sheen = source.sheen;\n\t\tthis.sheenColor.copy( source.sheenColor );\n\t\tthis.sheenColorMap = source.sheenColorMap;\n\t\tthis.sheenRoughness = source.sheenRoughness;\n\t\tthis.sheenRoughnessMap = source.sheenRoughnessMap;\n\n\t\tthis.transmission = source.transmission;\n\t\tthis.transmissionMap = source.transmissionMap;\n\n\t\tthis.thickness = source.thickness;\n\t\tthis.thicknessMap = source.thicknessMap;\n\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\tthis.attenuationColor.copy( source.attenuationColor );\n\n\t\tthis.specularIntensity = source.specularIntensity;\n\t\tthis.specularIntensityMap = source.specularIntensityMap;\n\t\tthis.specularColor.copy( source.specularColor );\n\t\tthis.specularColorMap = source.specularColorMap;\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { MeshPhysicalMaterial };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}