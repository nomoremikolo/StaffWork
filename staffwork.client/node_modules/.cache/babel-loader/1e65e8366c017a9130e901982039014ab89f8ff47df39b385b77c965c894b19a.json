{"ast":null,"code":"import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\nconst ShaderLib = {\n  basic: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n    vertexShader: ShaderChunk.meshbasic_vert,\n    fragmentShader: ShaderChunk.meshbasic_frag\n  },\n  lambert: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshlambert_vert,\n    fragmentShader: ShaderChunk.meshlambert_frag\n  },\n  phong: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      },\n      specular: {\n        value: /*@__PURE__*/new Color(0x111111)\n      },\n      shininess: {\n        value: 30\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphong_vert,\n    fragmentShader: ShaderChunk.meshphong_frag\n  },\n  standard: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      },\n      roughness: {\n        value: 1.0\n      },\n      metalness: {\n        value: 0.0\n      },\n      envMapIntensity: {\n        value: 1\n      } // temporary\n    }]),\n\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  },\n  toon: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n      emissive: {\n        value: /*@__PURE__*/new Color(0x000000)\n      }\n    }]),\n    vertexShader: ShaderChunk.meshtoon_vert,\n    fragmentShader: ShaderChunk.meshtoon_frag\n  },\n  matcap: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n      matcap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshmatcap_vert,\n    fragmentShader: ShaderChunk.meshmatcap_frag\n  },\n  points: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n    vertexShader: ShaderChunk.points_vert,\n    fragmentShader: ShaderChunk.points_frag\n  },\n  dashed: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n      scale: {\n        value: 1\n      },\n      dashSize: {\n        value: 1\n      },\n      totalSize: {\n        value: 2\n      }\n    }]),\n    vertexShader: ShaderChunk.linedashed_vert,\n    fragmentShader: ShaderChunk.linedashed_frag\n  },\n  depth: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n    vertexShader: ShaderChunk.depth_vert,\n    fragmentShader: ShaderChunk.depth_frag\n  },\n  normal: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.meshnormal_vert,\n    fragmentShader: ShaderChunk.meshnormal_frag\n  },\n  sprite: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n    vertexShader: ShaderChunk.sprite_vert,\n    fragmentShader: ShaderChunk.sprite_frag\n  },\n  background: {\n    uniforms: {\n      uvTransform: {\n        value: /*@__PURE__*/new Matrix3()\n      },\n      t2D: {\n        value: null\n      },\n      backgroundIntensity: {\n        value: 1\n      }\n    },\n    vertexShader: ShaderChunk.background_vert,\n    fragmentShader: ShaderChunk.background_frag\n  },\n  backgroundCube: {\n    uniforms: {\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      backgroundBlurriness: {\n        value: 0\n      },\n      backgroundIntensity: {\n        value: 1\n      }\n    },\n    vertexShader: ShaderChunk.backgroundCube_vert,\n    fragmentShader: ShaderChunk.backgroundCube_frag\n  },\n  cube: {\n    uniforms: {\n      tCube: {\n        value: null\n      },\n      tFlip: {\n        value: -1\n      },\n      opacity: {\n        value: 1.0\n      }\n    },\n    vertexShader: ShaderChunk.cube_vert,\n    fragmentShader: ShaderChunk.cube_frag\n  },\n  equirect: {\n    uniforms: {\n      tEquirect: {\n        value: null\n      }\n    },\n    vertexShader: ShaderChunk.equirect_vert,\n    fragmentShader: ShaderChunk.equirect_frag\n  },\n  distanceRGBA: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n      referencePosition: {\n        value: /*@__PURE__*/new Vector3()\n      },\n      nearDistance: {\n        value: 1\n      },\n      farDistance: {\n        value: 1000\n      }\n    }]),\n    vertexShader: ShaderChunk.distanceRGBA_vert,\n    fragmentShader: ShaderChunk.distanceRGBA_frag\n  },\n  shadow: {\n    uniforms: /*@__PURE__*/mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n      color: {\n        value: /*@__PURE__*/new Color(0x00000)\n      },\n      opacity: {\n        value: 1.0\n      }\n    }]),\n    vertexShader: ShaderChunk.shadow_vert,\n    fragmentShader: ShaderChunk.shadow_frag\n  }\n};\nShaderLib.physical = {\n  uniforms: /*@__PURE__*/mergeUniforms([ShaderLib.standard.uniforms, {\n    clearcoat: {\n      value: 0\n    },\n    clearcoatMap: {\n      value: null\n    },\n    clearcoatRoughness: {\n      value: 0\n    },\n    clearcoatRoughnessMap: {\n      value: null\n    },\n    clearcoatNormalScale: {\n      value: /*@__PURE__*/new Vector2(1, 1)\n    },\n    clearcoatNormalMap: {\n      value: null\n    },\n    iridescence: {\n      value: 0\n    },\n    iridescenceMap: {\n      value: null\n    },\n    iridescenceIOR: {\n      value: 1.3\n    },\n    iridescenceThicknessMinimum: {\n      value: 100\n    },\n    iridescenceThicknessMaximum: {\n      value: 400\n    },\n    iridescenceThicknessMap: {\n      value: null\n    },\n    sheen: {\n      value: 0\n    },\n    sheenColor: {\n      value: /*@__PURE__*/new Color(0x000000)\n    },\n    sheenColorMap: {\n      value: null\n    },\n    sheenRoughness: {\n      value: 1\n    },\n    sheenRoughnessMap: {\n      value: null\n    },\n    transmission: {\n      value: 0\n    },\n    transmissionMap: {\n      value: null\n    },\n    transmissionSamplerSize: {\n      value: /*@__PURE__*/new Vector2()\n    },\n    transmissionSamplerMap: {\n      value: null\n    },\n    thickness: {\n      value: 0\n    },\n    thicknessMap: {\n      value: null\n    },\n    attenuationDistance: {\n      value: 0\n    },\n    attenuationColor: {\n      value: /*@__PURE__*/new Color(0x000000)\n    },\n    specularIntensity: {\n      value: 1\n    },\n    specularIntensityMap: {\n      value: null\n    },\n    specularColor: {\n      value: /*@__PURE__*/new Color(1, 1, 1)\n    },\n    specularColorMap: {\n      value: null\n    }\n  }]),\n  vertexShader: ShaderChunk.meshphysical_vert,\n  fragmentShader: ShaderChunk.meshphysical_frag\n};\nexport { ShaderLib };","map":{"version":3,"names":["ShaderChunk","mergeUniforms","Vector2","Vector3","UniformsLib","Color","Matrix3","ShaderLib","basic","uniforms","common","specularmap","envmap","aomap","lightmap","fog","vertexShader","meshbasic_vert","fragmentShader","meshbasic_frag","lambert","emissivemap","bumpmap","normalmap","displacementmap","lights","emissive","value","meshlambert_vert","meshlambert_frag","phong","specular","shininess","meshphong_vert","meshphong_frag","standard","roughnessmap","metalnessmap","roughness","metalness","envMapIntensity","meshphysical_vert","meshphysical_frag","toon","gradientmap","meshtoon_vert","meshtoon_frag","matcap","meshmatcap_vert","meshmatcap_frag","points","points_vert","points_frag","dashed","scale","dashSize","totalSize","linedashed_vert","linedashed_frag","depth","depth_vert","depth_frag","normal","opacity","meshnormal_vert","meshnormal_frag","sprite","sprite_vert","sprite_frag","background","uvTransform","t2D","backgroundIntensity","background_vert","background_frag","backgroundCube","envMap","flipEnvMap","backgroundBlurriness","backgroundCube_vert","backgroundCube_frag","cube","tCube","tFlip","cube_vert","cube_frag","equirect","tEquirect","equirect_vert","equirect_frag","distanceRGBA","referencePosition","nearDistance","farDistance","distanceRGBA_vert","distanceRGBA_frag","shadow","color","shadow_vert","shadow_frag","physical","clearcoat","clearcoatMap","clearcoatRoughness","clearcoatRoughnessMap","clearcoatNormalScale","clearcoatNormalMap","iridescence","iridescenceMap","iridescenceIOR","iridescenceThicknessMinimum","iridescenceThicknessMaximum","iridescenceThicknessMap","sheen","sheenColor","sheenColorMap","sheenRoughness","sheenRoughnessMap","transmission","transmissionMap","transmissionSamplerSize","transmissionSamplerMap","thickness","thicknessMap","attenuationDistance","attenuationColor","specularIntensity","specularIntensityMap","specularColor","specularColorMap"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/shaders/ShaderLib.js"],"sourcesContent":["import { ShaderChunk } from './ShaderChunk.js';\nimport { mergeUniforms } from './UniformsUtils.js';\nimport { Vector2 } from '../../math/Vector2.js';\nimport { Vector3 } from '../../math/Vector3.js';\nimport { UniformsLib } from './UniformsLib.js';\nimport { Color } from '../../math/Color.js';\nimport { Matrix3 } from '../../math/Matrix3.js';\n\nconst ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: /*@__PURE__*/ new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 1.0 },\n\t\t\t\tmetalness: { value: 0.0 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\ttoon: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: /*@__PURE__*/ new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\n\t},\n\n\tmatcap: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tmatcap: { value: null }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshnormal_vert,\n\t\tfragmentShader: ShaderChunk.meshnormal_frag\n\n\t},\n\n\tsprite: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.sprite,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t},\n\n\tbackground: {\n\n\t\tuniforms: {\n\t\t\tuvTransform: { value: /*@__PURE__*/ new Matrix3() },\n\t\t\tt2D: { value: null },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.background_vert,\n\t\tfragmentShader: ShaderChunk.background_frag\n\n\t},\n\n\tbackgroundCube: {\n\n\t\tuniforms: {\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\tbackgroundBlurriness: { value: 0 },\n\t\t\tbackgroundIntensity: { value: 1 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.backgroundCube_vert,\n\t\tfragmentShader: ShaderChunk.backgroundCube_frag\n\n\t},\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: /*@__PURE__*/ new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: /*@__PURE__*/ new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: /*@__PURE__*/ mergeUniforms( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearcoat: { value: 0 },\n\t\t\tclearcoatMap: { value: null },\n\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\tclearcoatRoughnessMap: { value: null },\n\t\t\tclearcoatNormalScale: { value: /*@__PURE__*/ new Vector2( 1, 1 ) },\n\t\t\tclearcoatNormalMap: { value: null },\n\t\t\tiridescence: { value: 0 },\n\t\t\tiridescenceMap: { value: null },\n\t\t\tiridescenceIOR: { value: 1.3 },\n\t\t\tiridescenceThicknessMinimum: { value: 100 },\n\t\t\tiridescenceThicknessMaximum: { value: 400 },\n\t\t\tiridescenceThicknessMap: { value: null },\n\t\t\tsheen: { value: 0 },\n\t\t\tsheenColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tsheenColorMap: { value: null },\n\t\t\tsheenRoughness: { value: 1 },\n\t\t\tsheenRoughnessMap: { value: null },\n\t\t\ttransmission: { value: 0 },\n\t\t\ttransmissionMap: { value: null },\n\t\t\ttransmissionSamplerSize: { value: /*@__PURE__*/ new Vector2() },\n\t\t\ttransmissionSamplerMap: { value: null },\n\t\t\tthickness: { value: 0 },\n\t\t\tthicknessMap: { value: null },\n\t\t\tattenuationDistance: { value: 0 },\n\t\t\tattenuationColor: { value: /*@__PURE__*/ new Color( 0x000000 ) },\n\t\t\tspecularIntensity: { value: 1 },\n\t\t\tspecularIntensityMap: { value: null },\n\t\t\tspecularColor: { value: /*@__PURE__*/ new Color( 1, 1, 1 ) },\n\t\t\tspecularColorMap: { value: null },\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n\nexport { ShaderLib };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}