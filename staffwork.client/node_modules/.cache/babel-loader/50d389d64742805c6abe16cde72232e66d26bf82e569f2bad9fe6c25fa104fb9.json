{"ast":null,"code":"import { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Color } from '../math/Color.js';\nclass GridHelper extends LineSegments {\n  constructor() {\n    let size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    let divisions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 10;\n    let color1 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0x444444;\n    let color2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0x888888;\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n    const center = divisions / 2;\n    const step = size / divisions;\n    const halfSize = size / 2;\n    const vertices = [],\n      colors = [];\n    for (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      const color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    super(geometry, material);\n    this.type = 'GridHelper';\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nexport { GridHelper };","map":{"version":3,"names":["LineSegments","LineBasicMaterial","Float32BufferAttribute","BufferGeometry","Color","GridHelper","constructor","size","divisions","color1","color2","center","step","halfSize","vertices","colors","i","j","k","push","color","toArray","geometry","setAttribute","material","vertexColors","toneMapped","type","dispose"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/helpers/GridHelper.js"],"sourcesContent":["import { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Color } from '../math/Color.js';\n\nclass GridHelper extends LineSegments {\n\n\tconstructor( size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst center = divisions / 2;\n\t\tconst step = size / divisions;\n\t\tconst halfSize = size / 2;\n\n\t\tconst vertices = [], colors = [];\n\n\t\tfor ( let i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tconst color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'GridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nexport { GridHelper };\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,4BAA4B;AACzD,SAASC,iBAAiB,QAAQ,mCAAmC;AACrE,SAASC,sBAAsB,QAAQ,4BAA4B;AACnE,SAASC,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,KAAK,QAAQ,kBAAkB;AAExC,MAAMC,UAAU,SAASL,YAAY,CAAC;EAErCM,WAAW,GAAoE;IAAA,IAAlEC,IAAI,uEAAG,EAAE;IAAA,IAAEC,SAAS,uEAAG,EAAE;IAAA,IAAEC,MAAM,uEAAG,QAAQ;IAAA,IAAEC,MAAM,uEAAG,QAAQ;IAE3ED,MAAM,GAAG,IAAIL,KAAK,CAAEK,MAAM,CAAE;IAC5BC,MAAM,GAAG,IAAIN,KAAK,CAAEM,MAAM,CAAE;IAE5B,MAAMC,MAAM,GAAGH,SAAS,GAAG,CAAC;IAC5B,MAAMI,IAAI,GAAGL,IAAI,GAAGC,SAAS;IAC7B,MAAMK,QAAQ,GAAGN,IAAI,GAAG,CAAC;IAEzB,MAAMO,QAAQ,GAAG,EAAE;MAAEC,MAAM,GAAG,EAAE;IAEhC,KAAM,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAEL,QAAQ,EAAEG,CAAC,IAAIR,SAAS,EAAEQ,CAAC,EAAG,EAAEE,CAAC,IAAIN,IAAI,EAAG;MAEzEE,QAAQ,CAACK,IAAI,CAAE,CAAEN,QAAQ,EAAE,CAAC,EAAEK,CAAC,EAAEL,QAAQ,EAAE,CAAC,EAAEK,CAAC,CAAE;MACjDJ,QAAQ,CAACK,IAAI,CAAED,CAAC,EAAE,CAAC,EAAE,CAAEL,QAAQ,EAAEK,CAAC,EAAE,CAAC,EAAEL,QAAQ,CAAE;MAEjD,MAAMO,KAAK,GAAGJ,CAAC,KAAKL,MAAM,GAAGF,MAAM,GAAGC,MAAM;MAE5CU,KAAK,CAACC,OAAO,CAAEN,MAAM,EAAEE,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;MAClCG,KAAK,CAACC,OAAO,CAAEN,MAAM,EAAEE,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;MAClCG,KAAK,CAACC,OAAO,CAAEN,MAAM,EAAEE,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;MAClCG,KAAK,CAACC,OAAO,CAAEN,MAAM,EAAEE,CAAC,CAAE;MAAEA,CAAC,IAAI,CAAC;IAEnC;IAEA,MAAMK,QAAQ,GAAG,IAAInB,cAAc,EAAE;IACrCmB,QAAQ,CAACC,YAAY,CAAE,UAAU,EAAE,IAAIrB,sBAAsB,CAAEY,QAAQ,EAAE,CAAC,CAAE,CAAE;IAC9EQ,QAAQ,CAACC,YAAY,CAAE,OAAO,EAAE,IAAIrB,sBAAsB,CAAEa,MAAM,EAAE,CAAC,CAAE,CAAE;IAEzE,MAAMS,QAAQ,GAAG,IAAIvB,iBAAiB,CAAE;MAAEwB,YAAY,EAAE,IAAI;MAAEC,UAAU,EAAE;IAAM,CAAC,CAAE;IAEnF,KAAK,CAAEJ,QAAQ,EAAEE,QAAQ,CAAE;IAE3B,IAAI,CAACG,IAAI,GAAG,YAAY;EAEzB;EAEAC,OAAO,GAAG;IAET,IAAI,CAACN,QAAQ,CAACM,OAAO,EAAE;IACvB,IAAI,CAACJ,QAAQ,CAACI,OAAO,EAAE;EAExB;AAED;AAGA,SAASvB,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}