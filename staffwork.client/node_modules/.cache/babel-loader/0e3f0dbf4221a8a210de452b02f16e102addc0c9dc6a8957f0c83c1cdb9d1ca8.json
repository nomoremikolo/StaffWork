{"ast":null,"code":"import { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Color } from '../math/Color.js';\nclass PolarGridHelper extends LineSegments {\n  constructor() {\n    let radius = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n    let sectors = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 16;\n    let rings = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n    let divisions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 64;\n    let color1 = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : 0x444444;\n    let color2 = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0x888888;\n    color1 = new Color(color1);\n    color2 = new Color(color2);\n    const vertices = [];\n    const colors = [];\n\n    // create the sectors\n\n    if (sectors > 1) {\n      for (let i = 0; i < sectors; i++) {\n        const v = i / sectors * (Math.PI * 2);\n        const x = Math.sin(v) * radius;\n        const z = Math.cos(v) * radius;\n        vertices.push(0, 0, 0);\n        vertices.push(x, 0, z);\n        const color = i & 1 ? color1 : color2;\n        colors.push(color.r, color.g, color.b);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    // create the rings\n\n    for (let i = 0; i < rings; i++) {\n      const color = i & 1 ? color1 : color2;\n      const r = radius - radius / rings * i;\n      for (let j = 0; j < divisions; j++) {\n        // first vertex\n\n        let v = j / divisions * (Math.PI * 2);\n        let x = Math.sin(v) * r;\n        let z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n\n        // second vertex\n\n        v = (j + 1) / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n    const geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    const material = new LineBasicMaterial({\n      vertexColors: true,\n      toneMapped: false\n    });\n    super(geometry, material);\n    this.type = 'PolarGridHelper';\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nexport { PolarGridHelper };","map":{"version":3,"names":["LineSegments","LineBasicMaterial","Float32BufferAttribute","BufferGeometry","Color","PolarGridHelper","constructor","radius","sectors","rings","divisions","color1","color2","vertices","colors","i","v","Math","PI","x","sin","z","cos","push","color","r","g","b","j","geometry","setAttribute","material","vertexColors","toneMapped","type","dispose"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/helpers/PolarGridHelper.js"],"sourcesContent":["import { LineSegments } from '../objects/LineSegments.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Color } from '../math/Color.js';\n\nclass PolarGridHelper extends LineSegments {\n\n\tconstructor( radius = 10, sectors = 16, rings = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888 ) {\n\n\t\tcolor1 = new Color( color1 );\n\t\tcolor2 = new Color( color2 );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\t// create the sectors\n\n\t\tif ( sectors > 1 ) {\n\n\t\t\tfor ( let i = 0; i < sectors; i ++ ) {\n\n\t\t\t\tconst v = ( i / sectors ) * ( Math.PI * 2 );\n\n\t\t\t\tconst x = Math.sin( v ) * radius;\n\t\t\t\tconst z = Math.cos( v ) * radius;\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( x, 0, z );\n\n\t\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// create the rings\n\n\t\tfor ( let i = 0; i < rings; i ++ ) {\n\n\t\t\tconst color = ( i & 1 ) ? color1 : color2;\n\n\t\t\tconst r = radius - ( radius / rings * i );\n\n\t\t\tfor ( let j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tlet v = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tlet x = Math.sin( v ) * r;\n\t\t\t\tlet z = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tconst geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tconst material = new LineBasicMaterial( { vertexColors: true, toneMapped: false } );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'PolarGridHelper';\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nexport { PolarGridHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}