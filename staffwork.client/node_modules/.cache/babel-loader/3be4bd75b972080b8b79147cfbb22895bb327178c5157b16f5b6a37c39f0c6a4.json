{"ast":null,"code":"import { Vector2 } from '../../math/Vector2.js';\nimport { Curve } from '../core/Curve.js';\nclass LineCurve extends Curve {\n  constructor() {\n    let v1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Vector2();\n    let v2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    super();\n    this.isLineCurve = true;\n    this.type = 'LineCurve';\n    this.v1 = v1;\n    this.v2 = v2;\n  }\n  getPoint(t) {\n    let optionalTarget = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : new Vector2();\n    const point = optionalTarget;\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n    return point;\n  }\n\n  // Line curve is linear, so we can overwrite default getPointAt\n  getPointAt(u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  }\n  getTangent(t, optionalTarget) {\n    const tangent = optionalTarget || new Vector2();\n    tangent.copy(this.v2).sub(this.v1).normalize();\n    return tangent;\n  }\n  copy(source) {\n    super.copy(source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  }\n  toJSON() {\n    const data = super.toJSON();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  }\n  fromJSON(json) {\n    super.fromJSON(json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  }\n}\nexport { LineCurve };","map":{"version":3,"names":["Vector2","Curve","LineCurve","constructor","v1","v2","isLineCurve","type","getPoint","t","optionalTarget","point","copy","sub","multiplyScalar","add","getPointAt","u","getTangent","tangent","normalize","source","toJSON","data","toArray","fromJSON","json","fromArray"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/extras/curves/LineCurve.js"],"sourcesContent":["import { Vector2 } from '../../math/Vector2.js';\nimport { Curve } from '../core/Curve.js';\n\nclass LineCurve extends Curve {\n\n\tconstructor( v1 = new Vector2(), v2 = new Vector2() ) {\n\n\t\tsuper();\n\n\t\tthis.isLineCurve = true;\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1;\n\t\tthis.v2 = v2;\n\n\t}\n\n\tgetPoint( t, optionalTarget = new Vector2() ) {\n\n\t\tconst point = optionalTarget;\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t}\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\tgetPointAt( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t}\n\n\tgetTangent( t, optionalTarget ) {\n\n\t\tconst tangent = optionalTarget || new Vector2();\n\n\t\ttangent.copy( this.v2 ).sub( this.v1 ).normalize();\n\n\t\treturn tangent;\n\n\t}\n\n\tcopy( source ) {\n\n\t\tsuper.copy( source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t}\n\n\ttoJSON() {\n\n\t\tconst data = super.toJSON();\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t}\n\n\tfromJSON( json ) {\n\n\t\tsuper.fromJSON( json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t}\n\n}\n\nexport { LineCurve };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,uBAAuB;AAC/C,SAASC,KAAK,QAAQ,kBAAkB;AAExC,MAAMC,SAAS,SAASD,KAAK,CAAC;EAE7BE,WAAW,GAA2C;IAAA,IAAzCC,EAAE,uEAAG,IAAIJ,OAAO,EAAE;IAAA,IAAEK,EAAE,uEAAG,IAAIL,OAAO,EAAE;IAElD,KAAK,EAAE;IAEP,IAAI,CAACM,WAAW,GAAG,IAAI;IAEvB,IAAI,CAACC,IAAI,GAAG,WAAW;IAEvB,IAAI,CAACH,EAAE,GAAGA,EAAE;IACZ,IAAI,CAACC,EAAE,GAAGA,EAAE;EAEb;EAEAG,QAAQ,CAAEC,CAAC,EAAmC;IAAA,IAAjCC,cAAc,uEAAG,IAAIV,OAAO,EAAE;IAE1C,MAAMW,KAAK,GAAGD,cAAc;IAE5B,IAAKD,CAAC,KAAK,CAAC,EAAG;MAEdE,KAAK,CAACC,IAAI,CAAE,IAAI,CAACP,EAAE,CAAE;IAEtB,CAAC,MAAM;MAENM,KAAK,CAACC,IAAI,CAAE,IAAI,CAACP,EAAE,CAAE,CAACQ,GAAG,CAAE,IAAI,CAACT,EAAE,CAAE;MACpCO,KAAK,CAACG,cAAc,CAAEL,CAAC,CAAE,CAACM,GAAG,CAAE,IAAI,CAACX,EAAE,CAAE;IAEzC;IAEA,OAAOO,KAAK;EAEb;;EAEA;EACAK,UAAU,CAAEC,CAAC,EAAEP,cAAc,EAAG;IAE/B,OAAO,IAAI,CAACF,QAAQ,CAAES,CAAC,EAAEP,cAAc,CAAE;EAE1C;EAEAQ,UAAU,CAAET,CAAC,EAAEC,cAAc,EAAG;IAE/B,MAAMS,OAAO,GAAGT,cAAc,IAAI,IAAIV,OAAO,EAAE;IAE/CmB,OAAO,CAACP,IAAI,CAAE,IAAI,CAACP,EAAE,CAAE,CAACQ,GAAG,CAAE,IAAI,CAACT,EAAE,CAAE,CAACgB,SAAS,EAAE;IAElD,OAAOD,OAAO;EAEf;EAEAP,IAAI,CAAES,MAAM,EAAG;IAEd,KAAK,CAACT,IAAI,CAAES,MAAM,CAAE;IAEpB,IAAI,CAACjB,EAAE,CAACQ,IAAI,CAAES,MAAM,CAACjB,EAAE,CAAE;IACzB,IAAI,CAACC,EAAE,CAACO,IAAI,CAAES,MAAM,CAAChB,EAAE,CAAE;IAEzB,OAAO,IAAI;EAEZ;EAEAiB,MAAM,GAAG;IAER,MAAMC,IAAI,GAAG,KAAK,CAACD,MAAM,EAAE;IAE3BC,IAAI,CAACnB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACoB,OAAO,EAAE;IAC3BD,IAAI,CAAClB,EAAE,GAAG,IAAI,CAACA,EAAE,CAACmB,OAAO,EAAE;IAE3B,OAAOD,IAAI;EAEZ;EAEAE,QAAQ,CAAEC,IAAI,EAAG;IAEhB,KAAK,CAACD,QAAQ,CAAEC,IAAI,CAAE;IAEtB,IAAI,CAACtB,EAAE,CAACuB,SAAS,CAAED,IAAI,CAACtB,EAAE,CAAE;IAC5B,IAAI,CAACC,EAAE,CAACsB,SAAS,CAAED,IAAI,CAACrB,EAAE,CAAE;IAE5B,OAAO,IAAI;EAEZ;AAED;AAEA,SAASH,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}