{"ast":null,"code":"import { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\nconst _vector = /*@__PURE__*/new Vector3();\nconst _camera = /*@__PURE__*/new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n  constructor(camera) {\n    const geometry = new BufferGeometry();\n    const material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: true,\n      toneMapped: false\n    });\n    const vertices = [];\n    const colors = [];\n    const pointMap = {};\n\n    // near\n\n    addLine('n1', 'n2');\n    addLine('n2', 'n4');\n    addLine('n4', 'n3');\n    addLine('n3', 'n1');\n\n    // far\n\n    addLine('f1', 'f2');\n    addLine('f2', 'f4');\n    addLine('f4', 'f3');\n    addLine('f3', 'f1');\n\n    // sides\n\n    addLine('n1', 'f1');\n    addLine('n2', 'f2');\n    addLine('n3', 'f3');\n    addLine('n4', 'f4');\n\n    // cone\n\n    addLine('p', 'n1');\n    addLine('p', 'n2');\n    addLine('p', 'n3');\n    addLine('p', 'n4');\n\n    // up\n\n    addLine('u1', 'u2');\n    addLine('u2', 'u3');\n    addLine('u3', 'u1');\n\n    // target\n\n    addLine('c', 't');\n    addLine('p', 'c');\n\n    // cross\n\n    addLine('cn1', 'cn2');\n    addLine('cn3', 'cn4');\n    addLine('cf1', 'cf2');\n    addLine('cf3', 'cf4');\n    function addLine(a, b) {\n      addPoint(a);\n      addPoint(b);\n    }\n    function addPoint(id) {\n      vertices.push(0, 0, 0);\n      colors.push(0, 0, 0);\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    super(geometry, material);\n    this.type = 'CameraHelper';\n    this.camera = camera;\n    if (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n\n    // colors\n\n    const colorFrustum = new Color(0xffaa00);\n    const colorCone = new Color(0xff0000);\n    const colorUp = new Color(0x00aaff);\n    const colorTarget = new Color(0xffffff);\n    const colorCross = new Color(0x333333);\n    this.setColors(colorFrustum, colorCone, colorUp, colorTarget, colorCross);\n  }\n  setColors(frustum, cone, up, target, cross) {\n    const geometry = this.geometry;\n    const colorAttribute = geometry.getAttribute('color');\n\n    // near\n\n    colorAttribute.setXYZ(0, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(1, frustum.r, frustum.g, frustum.b); // n1, n2\n    colorAttribute.setXYZ(2, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(3, frustum.r, frustum.g, frustum.b); // n2, n4\n    colorAttribute.setXYZ(4, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(5, frustum.r, frustum.g, frustum.b); // n4, n3\n    colorAttribute.setXYZ(6, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(7, frustum.r, frustum.g, frustum.b); // n3, n1\n\n    // far\n\n    colorAttribute.setXYZ(8, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(9, frustum.r, frustum.g, frustum.b); // f1, f2\n    colorAttribute.setXYZ(10, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(11, frustum.r, frustum.g, frustum.b); // f2, f4\n    colorAttribute.setXYZ(12, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(13, frustum.r, frustum.g, frustum.b); // f4, f3\n    colorAttribute.setXYZ(14, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(15, frustum.r, frustum.g, frustum.b); // f3, f1\n\n    // sides\n\n    colorAttribute.setXYZ(16, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(17, frustum.r, frustum.g, frustum.b); // n1, f1\n    colorAttribute.setXYZ(18, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(19, frustum.r, frustum.g, frustum.b); // n2, f2\n    colorAttribute.setXYZ(20, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(21, frustum.r, frustum.g, frustum.b); // n3, f3\n    colorAttribute.setXYZ(22, frustum.r, frustum.g, frustum.b);\n    colorAttribute.setXYZ(23, frustum.r, frustum.g, frustum.b); // n4, f4\n\n    // cone\n\n    colorAttribute.setXYZ(24, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(25, cone.r, cone.g, cone.b); // p, n1\n    colorAttribute.setXYZ(26, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(27, cone.r, cone.g, cone.b); // p, n2\n    colorAttribute.setXYZ(28, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(29, cone.r, cone.g, cone.b); // p, n3\n    colorAttribute.setXYZ(30, cone.r, cone.g, cone.b);\n    colorAttribute.setXYZ(31, cone.r, cone.g, cone.b); // p, n4\n\n    // up\n\n    colorAttribute.setXYZ(32, up.r, up.g, up.b);\n    colorAttribute.setXYZ(33, up.r, up.g, up.b); // u1, u2\n    colorAttribute.setXYZ(34, up.r, up.g, up.b);\n    colorAttribute.setXYZ(35, up.r, up.g, up.b); // u2, u3\n    colorAttribute.setXYZ(36, up.r, up.g, up.b);\n    colorAttribute.setXYZ(37, up.r, up.g, up.b); // u3, u1\n\n    // target\n\n    colorAttribute.setXYZ(38, target.r, target.g, target.b);\n    colorAttribute.setXYZ(39, target.r, target.g, target.b); // c, t\n    colorAttribute.setXYZ(40, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(41, cross.r, cross.g, cross.b); // p, c\n\n    // cross\n\n    colorAttribute.setXYZ(42, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(43, cross.r, cross.g, cross.b); // cn1, cn2\n    colorAttribute.setXYZ(44, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(45, cross.r, cross.g, cross.b); // cn3, cn4\n\n    colorAttribute.setXYZ(46, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(47, cross.r, cross.g, cross.b); // cf1, cf2\n    colorAttribute.setXYZ(48, cross.r, cross.g, cross.b);\n    colorAttribute.setXYZ(49, cross.r, cross.g, cross.b); // cf3, cf4\n\n    colorAttribute.needsUpdate = true;\n  }\n  update() {\n    const geometry = this.geometry;\n    const pointMap = this.pointMap;\n    const w = 1,\n      h = 1;\n\n    // we need just camera projection matrix inverse\n    // world matrix must be identity\n\n    _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse);\n\n    // center / target\n\n    setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n    setPoint('t', pointMap, geometry, _camera, 0, 0, 1);\n\n    // near\n\n    setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n    setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n    setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n    setPoint('n4', pointMap, geometry, _camera, w, h, -1);\n\n    // far\n\n    setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n    setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n    setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n    setPoint('f4', pointMap, geometry, _camera, w, h, 1);\n\n    // up\n\n    setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n    setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n    setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1);\n\n    // cross\n\n    setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n    setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n    setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n    setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n    setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n    setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n    setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n    setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n    geometry.getAttribute('position').needsUpdate = true;\n  }\n  dispose() {\n    this.geometry.dispose();\n    this.material.dispose();\n  }\n}\nfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n  _vector.set(x, y, z).unproject(camera);\n  const points = pointMap[point];\n  if (points !== undefined) {\n    const position = geometry.getAttribute('position');\n    for (let i = 0, l = points.length; i < l; i++) {\n      position.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n    }\n  }\n}\nexport { CameraHelper };","map":{"version":3,"names":["Camera","Vector3","LineSegments","Color","LineBasicMaterial","BufferGeometry","Float32BufferAttribute","_vector","_camera","CameraHelper","constructor","camera","geometry","material","color","vertexColors","toneMapped","vertices","colors","pointMap","addLine","a","b","addPoint","id","push","undefined","length","setAttribute","type","updateProjectionMatrix","matrix","matrixWorld","matrixAutoUpdate","update","colorFrustum","colorCone","colorUp","colorTarget","colorCross","setColors","frustum","cone","up","target","cross","colorAttribute","getAttribute","setXYZ","r","g","needsUpdate","w","h","projectionMatrixInverse","copy","setPoint","dispose","point","x","y","z","set","unproject","points","position","i","l"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/helpers/CameraHelper.js"],"sourcesContent":["import { Camera } from '../cameras/Camera.js';\nimport { Vector3 } from '../math/Vector3.js';\nimport { LineSegments } from '../objects/LineSegments.js';\nimport { Color } from '../math/Color.js';\nimport { LineBasicMaterial } from '../materials/LineBasicMaterial.js';\nimport { BufferGeometry } from '../core/BufferGeometry.js';\nimport { Float32BufferAttribute } from '../core/BufferAttribute.js';\n\nconst _vector = /*@__PURE__*/ new Vector3();\nconst _camera = /*@__PURE__*/ new Camera();\n\n/**\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttps://github.com/evanw/lightgl.js/blob/master/tests/shadowmap.html\n */\n\nclass CameraHelper extends LineSegments {\n\n\tconstructor( camera ) {\n\n\t\tconst geometry = new BufferGeometry();\n\t\tconst material = new LineBasicMaterial( { color: 0xffffff, vertexColors: true, toneMapped: false } );\n\n\t\tconst vertices = [];\n\t\tconst colors = [];\n\n\t\tconst pointMap = {};\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2' );\n\t\taddLine( 'n2', 'n4' );\n\t\taddLine( 'n4', 'n3' );\n\t\taddLine( 'n3', 'n1' );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2' );\n\t\taddLine( 'f2', 'f4' );\n\t\taddLine( 'f4', 'f3' );\n\t\taddLine( 'f3', 'f1' );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1' );\n\t\taddLine( 'n2', 'f2' );\n\t\taddLine( 'n3', 'f3' );\n\t\taddLine( 'n4', 'f4' );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1' );\n\t\taddLine( 'p', 'n2' );\n\t\taddLine( 'p', 'n3' );\n\t\taddLine( 'p', 'n4' );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2' );\n\t\taddLine( 'u2', 'u3' );\n\t\taddLine( 'u3', 'u1' );\n\n\t\t// target\n\n\t\taddLine( 'c', 't' );\n\t\taddLine( 'p', 'c' );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2' );\n\t\taddLine( 'cn3', 'cn4' );\n\n\t\taddLine( 'cf1', 'cf2' );\n\t\taddLine( 'cf3', 'cf4' );\n\n\t\tfunction addLine( a, b ) {\n\n\t\t\taddPoint( a );\n\t\t\taddPoint( b );\n\n\t\t}\n\n\t\tfunction addPoint( id ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( 0, 0, 0 );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tsuper( geometry, material );\n\n\t\tthis.type = 'CameraHelper';\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t\t// colors\n\n\t\tconst colorFrustum = new Color( 0xffaa00 );\n\t\tconst colorCone = new Color( 0xff0000 );\n\t\tconst colorUp = new Color( 0x00aaff );\n\t\tconst colorTarget = new Color( 0xffffff );\n\t\tconst colorCross = new Color( 0x333333 );\n\n\t\tthis.setColors( colorFrustum, colorCone, colorUp, colorTarget, colorCross );\n\n\t}\n\n\tsetColors( frustum, cone, up, target, cross ) {\n\n\t\tconst geometry = this.geometry;\n\n\t\tconst colorAttribute = geometry.getAttribute( 'color' );\n\n\t\t// near\n\n\t\tcolorAttribute.setXYZ( 0, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 1, frustum.r, frustum.g, frustum.b ); // n1, n2\n\t\tcolorAttribute.setXYZ( 2, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 3, frustum.r, frustum.g, frustum.b ); // n2, n4\n\t\tcolorAttribute.setXYZ( 4, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 5, frustum.r, frustum.g, frustum.b ); // n4, n3\n\t\tcolorAttribute.setXYZ( 6, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 7, frustum.r, frustum.g, frustum.b ); // n3, n1\n\n\t\t// far\n\n\t\tcolorAttribute.setXYZ( 8, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 9, frustum.r, frustum.g, frustum.b ); // f1, f2\n\t\tcolorAttribute.setXYZ( 10, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 11, frustum.r, frustum.g, frustum.b ); // f2, f4\n\t\tcolorAttribute.setXYZ( 12, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 13, frustum.r, frustum.g, frustum.b ); // f4, f3\n\t\tcolorAttribute.setXYZ( 14, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 15, frustum.r, frustum.g, frustum.b ); // f3, f1\n\n\t\t// sides\n\n\t\tcolorAttribute.setXYZ( 16, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 17, frustum.r, frustum.g, frustum.b ); // n1, f1\n\t\tcolorAttribute.setXYZ( 18, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 19, frustum.r, frustum.g, frustum.b ); // n2, f2\n\t\tcolorAttribute.setXYZ( 20, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 21, frustum.r, frustum.g, frustum.b ); // n3, f3\n\t\tcolorAttribute.setXYZ( 22, frustum.r, frustum.g, frustum.b ); colorAttribute.setXYZ( 23, frustum.r, frustum.g, frustum.b ); // n4, f4\n\n\t\t// cone\n\n\t\tcolorAttribute.setXYZ( 24, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 25, cone.r, cone.g, cone.b ); // p, n1\n\t\tcolorAttribute.setXYZ( 26, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 27, cone.r, cone.g, cone.b ); // p, n2\n\t\tcolorAttribute.setXYZ( 28, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 29, cone.r, cone.g, cone.b ); // p, n3\n\t\tcolorAttribute.setXYZ( 30, cone.r, cone.g, cone.b ); colorAttribute.setXYZ( 31, cone.r, cone.g, cone.b ); // p, n4\n\n\t\t// up\n\n\t\tcolorAttribute.setXYZ( 32, up.r, up.g, up.b ); colorAttribute.setXYZ( 33, up.r, up.g, up.b ); // u1, u2\n\t\tcolorAttribute.setXYZ( 34, up.r, up.g, up.b ); colorAttribute.setXYZ( 35, up.r, up.g, up.b ); // u2, u3\n\t\tcolorAttribute.setXYZ( 36, up.r, up.g, up.b ); colorAttribute.setXYZ( 37, up.r, up.g, up.b ); // u3, u1\n\n\t\t// target\n\n\t\tcolorAttribute.setXYZ( 38, target.r, target.g, target.b ); colorAttribute.setXYZ( 39, target.r, target.g, target.b ); // c, t\n\t\tcolorAttribute.setXYZ( 40, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 41, cross.r, cross.g, cross.b ); // p, c\n\n\t\t// cross\n\n\t\tcolorAttribute.setXYZ( 42, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 43, cross.r, cross.g, cross.b ); // cn1, cn2\n\t\tcolorAttribute.setXYZ( 44, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 45, cross.r, cross.g, cross.b ); // cn3, cn4\n\n\t\tcolorAttribute.setXYZ( 46, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 47, cross.r, cross.g, cross.b ); // cf1, cf2\n\t\tcolorAttribute.setXYZ( 48, cross.r, cross.g, cross.b ); colorAttribute.setXYZ( 49, cross.r, cross.g, cross.b ); // cf3, cf4\n\n\t\tcolorAttribute.needsUpdate = true;\n\n\t}\n\n\tupdate() {\n\n\t\tconst geometry = this.geometry;\n\t\tconst pointMap = this.pointMap;\n\n\t\tconst w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t}\n\n}\n\n\nfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t_vector.set( x, y, z ).unproject( camera );\n\n\tconst points = pointMap[ point ];\n\n\tif ( points !== undefined ) {\n\n\t\tconst position = geometry.getAttribute( 'position' );\n\n\t\tfor ( let i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tposition.setXYZ( points[ i ], _vector.x, _vector.y, _vector.z );\n\n\t\t}\n\n\t}\n\n}\n\nexport { CameraHelper };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}