{"ast":null,"code":"let _id = 0;\nclass WebGLShaderCache {\n  constructor() {\n    this.shaderCache = new Map();\n    this.materialCache = new Map();\n  }\n  update(material) {\n    const vertexShader = material.vertexShader;\n    const fragmentShader = material.fragmentShader;\n    const vertexShaderStage = this._getShaderStage(vertexShader);\n    const fragmentShaderStage = this._getShaderStage(fragmentShader);\n    const materialShaders = this._getShaderCacheForMaterial(material);\n    if (materialShaders.has(vertexShaderStage) === false) {\n      materialShaders.add(vertexShaderStage);\n      vertexShaderStage.usedTimes++;\n    }\n    if (materialShaders.has(fragmentShaderStage) === false) {\n      materialShaders.add(fragmentShaderStage);\n      fragmentShaderStage.usedTimes++;\n    }\n    return this;\n  }\n  remove(material) {\n    const materialShaders = this.materialCache.get(material);\n    for (const shaderStage of materialShaders) {\n      shaderStage.usedTimes--;\n      if (shaderStage.usedTimes === 0) this.shaderCache.delete(shaderStage.code);\n    }\n    this.materialCache.delete(material);\n    return this;\n  }\n  getVertexShaderID(material) {\n    return this._getShaderStage(material.vertexShader).id;\n  }\n  getFragmentShaderID(material) {\n    return this._getShaderStage(material.fragmentShader).id;\n  }\n  dispose() {\n    this.shaderCache.clear();\n    this.materialCache.clear();\n  }\n  _getShaderCacheForMaterial(material) {\n    const cache = this.materialCache;\n    let set = cache.get(material);\n    if (set === undefined) {\n      set = new Set();\n      cache.set(material, set);\n    }\n    return set;\n  }\n  _getShaderStage(code) {\n    const cache = this.shaderCache;\n    let stage = cache.get(code);\n    if (stage === undefined) {\n      stage = new WebGLShaderStage(code);\n      cache.set(code, stage);\n    }\n    return stage;\n  }\n}\nclass WebGLShaderStage {\n  constructor(code) {\n    this.id = _id++;\n    this.code = code;\n    this.usedTimes = 0;\n  }\n}\nexport { WebGLShaderCache };","map":{"version":3,"names":["_id","WebGLShaderCache","constructor","shaderCache","Map","materialCache","update","material","vertexShader","fragmentShader","vertexShaderStage","_getShaderStage","fragmentShaderStage","materialShaders","_getShaderCacheForMaterial","has","add","usedTimes","remove","get","shaderStage","delete","code","getVertexShaderID","id","getFragmentShaderID","dispose","clear","cache","set","undefined","Set","stage","WebGLShaderStage"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/renderers/webgl/WebGLShaderCache.js"],"sourcesContent":["let _id = 0;\n\nclass WebGLShaderCache {\n\n\tconstructor() {\n\n\t\tthis.shaderCache = new Map();\n\t\tthis.materialCache = new Map();\n\n\t}\n\n\tupdate( material ) {\n\n\t\tconst vertexShader = material.vertexShader;\n\t\tconst fragmentShader = material.fragmentShader;\n\n\t\tconst vertexShaderStage = this._getShaderStage( vertexShader );\n\t\tconst fragmentShaderStage = this._getShaderStage( fragmentShader );\n\n\t\tconst materialShaders = this._getShaderCacheForMaterial( material );\n\n\t\tif ( materialShaders.has( vertexShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( vertexShaderStage );\n\t\t\tvertexShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\tif ( materialShaders.has( fragmentShaderStage ) === false ) {\n\n\t\t\tmaterialShaders.add( fragmentShaderStage );\n\t\t\tfragmentShaderStage.usedTimes ++;\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n\tremove( material ) {\n\n\t\tconst materialShaders = this.materialCache.get( material );\n\n\t\tfor ( const shaderStage of materialShaders ) {\n\n\t\t\tshaderStage.usedTimes --;\n\n\t\t\tif ( shaderStage.usedTimes === 0 ) this.shaderCache.delete( shaderStage.code );\n\n\t\t}\n\n\t\tthis.materialCache.delete( material );\n\n\t\treturn this;\n\n\t}\n\n\tgetVertexShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.vertexShader ).id;\n\n\t}\n\n\tgetFragmentShaderID( material ) {\n\n\t\treturn this._getShaderStage( material.fragmentShader ).id;\n\n\t}\n\n\tdispose() {\n\n\t\tthis.shaderCache.clear();\n\t\tthis.materialCache.clear();\n\n\t}\n\n\t_getShaderCacheForMaterial( material ) {\n\n\t\tconst cache = this.materialCache;\n\t\tlet set = cache.get( material );\n\n\t\tif ( set === undefined ) {\n\n\t\t\tset = new Set();\n\t\t\tcache.set( material, set );\n\n\t\t}\n\n\t\treturn set;\n\n\t}\n\n\t_getShaderStage( code ) {\n\n\t\tconst cache = this.shaderCache;\n\t\tlet stage = cache.get( code );\n\n\t\tif ( stage === undefined ) {\n\n\t\t\tstage = new WebGLShaderStage( code );\n\t\t\tcache.set( code, stage );\n\n\t\t}\n\n\t\treturn stage;\n\n\t}\n\n}\n\nclass WebGLShaderStage {\n\n\tconstructor( code ) {\n\n\t\tthis.id = _id ++;\n\n\t\tthis.code = code;\n\t\tthis.usedTimes = 0;\n\n\t}\n\n}\n\nexport { WebGLShaderCache };\n"],"mappings":"AAAA,IAAIA,GAAG,GAAG,CAAC;AAEX,MAAMC,gBAAgB,CAAC;EAEtBC,WAAW,GAAG;IAEb,IAAI,CAACC,WAAW,GAAG,IAAIC,GAAG,EAAE;IAC5B,IAAI,CAACC,aAAa,GAAG,IAAID,GAAG,EAAE;EAE/B;EAEAE,MAAM,CAAEC,QAAQ,EAAG;IAElB,MAAMC,YAAY,GAAGD,QAAQ,CAACC,YAAY;IAC1C,MAAMC,cAAc,GAAGF,QAAQ,CAACE,cAAc;IAE9C,MAAMC,iBAAiB,GAAG,IAAI,CAACC,eAAe,CAAEH,YAAY,CAAE;IAC9D,MAAMI,mBAAmB,GAAG,IAAI,CAACD,eAAe,CAAEF,cAAc,CAAE;IAElE,MAAMI,eAAe,GAAG,IAAI,CAACC,0BAA0B,CAAEP,QAAQ,CAAE;IAEnE,IAAKM,eAAe,CAACE,GAAG,CAAEL,iBAAiB,CAAE,KAAK,KAAK,EAAG;MAEzDG,eAAe,CAACG,GAAG,CAAEN,iBAAiB,CAAE;MACxCA,iBAAiB,CAACO,SAAS,EAAG;IAE/B;IAEA,IAAKJ,eAAe,CAACE,GAAG,CAAEH,mBAAmB,CAAE,KAAK,KAAK,EAAG;MAE3DC,eAAe,CAACG,GAAG,CAAEJ,mBAAmB,CAAE;MAC1CA,mBAAmB,CAACK,SAAS,EAAG;IAEjC;IAEA,OAAO,IAAI;EAEZ;EAEAC,MAAM,CAAEX,QAAQ,EAAG;IAElB,MAAMM,eAAe,GAAG,IAAI,CAACR,aAAa,CAACc,GAAG,CAAEZ,QAAQ,CAAE;IAE1D,KAAM,MAAMa,WAAW,IAAIP,eAAe,EAAG;MAE5CO,WAAW,CAACH,SAAS,EAAG;MAExB,IAAKG,WAAW,CAACH,SAAS,KAAK,CAAC,EAAG,IAAI,CAACd,WAAW,CAACkB,MAAM,CAAED,WAAW,CAACE,IAAI,CAAE;IAE/E;IAEA,IAAI,CAACjB,aAAa,CAACgB,MAAM,CAAEd,QAAQ,CAAE;IAErC,OAAO,IAAI;EAEZ;EAEAgB,iBAAiB,CAAEhB,QAAQ,EAAG;IAE7B,OAAO,IAAI,CAACI,eAAe,CAAEJ,QAAQ,CAACC,YAAY,CAAE,CAACgB,EAAE;EAExD;EAEAC,mBAAmB,CAAElB,QAAQ,EAAG;IAE/B,OAAO,IAAI,CAACI,eAAe,CAAEJ,QAAQ,CAACE,cAAc,CAAE,CAACe,EAAE;EAE1D;EAEAE,OAAO,GAAG;IAET,IAAI,CAACvB,WAAW,CAACwB,KAAK,EAAE;IACxB,IAAI,CAACtB,aAAa,CAACsB,KAAK,EAAE;EAE3B;EAEAb,0BAA0B,CAAEP,QAAQ,EAAG;IAEtC,MAAMqB,KAAK,GAAG,IAAI,CAACvB,aAAa;IAChC,IAAIwB,GAAG,GAAGD,KAAK,CAACT,GAAG,CAAEZ,QAAQ,CAAE;IAE/B,IAAKsB,GAAG,KAAKC,SAAS,EAAG;MAExBD,GAAG,GAAG,IAAIE,GAAG,EAAE;MACfH,KAAK,CAACC,GAAG,CAAEtB,QAAQ,EAAEsB,GAAG,CAAE;IAE3B;IAEA,OAAOA,GAAG;EAEX;EAEAlB,eAAe,CAAEW,IAAI,EAAG;IAEvB,MAAMM,KAAK,GAAG,IAAI,CAACzB,WAAW;IAC9B,IAAI6B,KAAK,GAAGJ,KAAK,CAACT,GAAG,CAAEG,IAAI,CAAE;IAE7B,IAAKU,KAAK,KAAKF,SAAS,EAAG;MAE1BE,KAAK,GAAG,IAAIC,gBAAgB,CAAEX,IAAI,CAAE;MACpCM,KAAK,CAACC,GAAG,CAAEP,IAAI,EAAEU,KAAK,CAAE;IAEzB;IAEA,OAAOA,KAAK;EAEb;AAED;AAEA,MAAMC,gBAAgB,CAAC;EAEtB/B,WAAW,CAAEoB,IAAI,EAAG;IAEnB,IAAI,CAACE,EAAE,GAAGxB,GAAG,EAAG;IAEhB,IAAI,CAACsB,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACL,SAAS,GAAG,CAAC;EAEnB;AAED;AAEA,SAAShB,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}