{"ast":null,"code":"import TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\nclass MathNode extends TempNode {\n  // 1 input\n\n  static RADIANS = 'radians';\n  static DEGREES = 'degrees';\n  static EXP = 'exp';\n  static EXP2 = 'exp2';\n  static LOG = 'log';\n  static LOG2 = 'log2';\n  static SQRT = 'sqrt';\n  static INVERSE_SQRT = 'inversesqrt';\n  static FLOOR = 'floor';\n  static CEIL = 'ceil';\n  static NORMALIZE = 'normalize';\n  static FRACT = 'fract';\n  static SIN = 'sin';\n  static COS = 'cos';\n  static TAN = 'tan';\n  static ASIN = 'asin';\n  static ACOS = 'acos';\n  static ATAN = 'atan';\n  static ABS = 'abs';\n  static SIGN = 'sign';\n  static LENGTH = 'length';\n  static NEGATE = 'negate';\n  static INVERT = 'invert';\n  static DFDX = 'dFdx';\n  static DFDY = 'dFdy';\n  static ROUND = 'round';\n  static RECIPROCAL = 'reciprocal';\n\n  // 2 inputs\n\n  static ATAN2 = 'atan2';\n  static MIN = 'min';\n  static MAX = 'max';\n  static MOD = 'mod';\n  static STEP = 'step';\n  static REFLECT = 'reflect';\n  static DISTANCE = 'distance';\n  static DOT = 'dot';\n  static CROSS = 'cross';\n  static POW = 'pow';\n  static TRANSFORM_DIRECTION = 'transformDirection';\n\n  // 3 inputs\n\n  static MIX = 'mix';\n  static CLAMP = 'clamp';\n  static REFRACT = 'refract';\n  static SMOOTHSTEP = 'smoothstep';\n  static FACEFORWARD = 'faceforward';\n  constructor(method, aNode) {\n    let bNode = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    let cNode = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n    super();\n    this.method = method;\n    this.aNode = aNode;\n    this.bNode = bNode;\n    this.cNode = cNode;\n  }\n  getInputType(builder) {\n    const aType = this.aNode.getNodeType(builder);\n    const bType = this.bNode ? this.bNode.getNodeType(builder) : null;\n    const cType = this.cNode ? this.cNode.getNodeType(builder) : null;\n    const aLen = builder.isMatrix(aType) ? 0 : builder.getTypeLength(aType);\n    const bLen = builder.isMatrix(bType) ? 0 : builder.getTypeLength(bType);\n    const cLen = builder.isMatrix(cType) ? 0 : builder.getTypeLength(cType);\n    if (aLen > bLen && aLen > cLen) {\n      return aType;\n    } else if (bLen > cLen) {\n      return bType;\n    } else if (cLen > aLen) {\n      return cType;\n    }\n    return aType;\n  }\n  getNodeType(builder) {\n    const method = this.method;\n    if (method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT) {\n      return 'float';\n    } else if (method === MathNode.CROSS) {\n      return 'vec3';\n    } else {\n      return this.getInputType(builder);\n    }\n  }\n  generate(builder, output) {\n    const method = this.method;\n    const type = this.getNodeType(builder);\n    const inputType = this.getInputType(builder);\n    const a = this.aNode;\n    const b = this.bNode;\n    const c = this.cNode;\n    const isWebGL = builder.renderer.isWebGLRenderer === true;\n    if (method === MathNode.TRANSFORM_DIRECTION) {\n      // dir can be either a direction vector or a normal vector\n      // upper-left 3x3 of matrix is assumed to be orthogonal\n\n      let tA = a;\n      let tB = b;\n      if (builder.isMatrix(tA.getNodeType(builder))) {\n        tB = new ExpressionNode(`${builder.getType('vec4')}( ${tB.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      } else {\n        tA = new ExpressionNode(`${builder.getType('vec4')}( ${tA.build(builder, 'vec3')}, 0.0 )`, 'vec4');\n      }\n      const mulNode = new SplitNode(new OperatorNode('*', tA, tB), 'xyz');\n      return new MathNode(MathNode.NORMALIZE, mulNode).build(builder);\n    } else if (method === MathNode.NEGATE) {\n      return builder.format('( -' + a.build(builder, inputType) + ' )', type, output);\n    } else if (method === MathNode.INVERT) {\n      return builder.format('( 1.0 - ' + a.build(builder, inputType) + ' )', type, output);\n    } else if (method === MathNode.RECIPROCAL) {\n      return builder.format('( 1.0 / ' + a.build(builder, inputType) + ' )', type, output);\n    } else {\n      const params = [];\n      if (method === MathNode.CROSS) {\n        params.push(a.build(builder, type), b.build(builder, type));\n      } else if (method === MathNode.STEP) {\n        params.push(a.build(builder, builder.getTypeLength(a.getNodeType(builder)) === 1 ? 'float' : inputType), b.build(builder, inputType));\n      } else if (isWebGL && (method === MathNode.MIN || method === MathNode.MAX) || method === MathNode.MOD) {\n        params.push(a.build(builder, inputType), b.build(builder, builder.getTypeLength(b.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else if (method === MathNode.REFRACT) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, 'float'));\n      } else if (method === MathNode.MIX) {\n        params.push(a.build(builder, inputType), b.build(builder, inputType), c.build(builder, builder.getTypeLength(c.getNodeType(builder)) === 1 ? 'float' : inputType));\n      } else {\n        params.push(a.build(builder, inputType));\n        if (c !== null) {\n          params.push(b.build(builder, inputType), c.build(builder, inputType));\n        } else if (b !== null) {\n          params.push(b.build(builder, inputType));\n        }\n      }\n      return builder.format(`${builder.getMethod(method)}( ${params.join(', ')} )`, type, output);\n    }\n  }\n  serialize(data) {\n    super.serialize(data);\n    data.method = this.method;\n  }\n  deserialize(data) {\n    super.deserialize(data);\n    this.method = data.method;\n  }\n}\nexport default MathNode;","map":{"version":3,"names":["TempNode","ExpressionNode","SplitNode","OperatorNode","MathNode","RADIANS","DEGREES","EXP","EXP2","LOG","LOG2","SQRT","INVERSE_SQRT","FLOOR","CEIL","NORMALIZE","FRACT","SIN","COS","TAN","ASIN","ACOS","ATAN","ABS","SIGN","LENGTH","NEGATE","INVERT","DFDX","DFDY","ROUND","RECIPROCAL","ATAN2","MIN","MAX","MOD","STEP","REFLECT","DISTANCE","DOT","CROSS","POW","TRANSFORM_DIRECTION","MIX","CLAMP","REFRACT","SMOOTHSTEP","FACEFORWARD","constructor","method","aNode","bNode","cNode","getInputType","builder","aType","getNodeType","bType","cType","aLen","isMatrix","getTypeLength","bLen","cLen","generate","output","type","inputType","a","b","c","isWebGL","renderer","isWebGLRenderer","tA","tB","getType","build","mulNode","format","params","push","getMethod","join","serialize","data","deserialize"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/examples/jsm/nodes/math/MathNode.js"],"sourcesContent":["import TempNode from '../core/TempNode.js';\nimport ExpressionNode from '../core/ExpressionNode.js';\nimport SplitNode from '../utils/SplitNode.js';\nimport OperatorNode from './OperatorNode.js';\n\nclass MathNode extends TempNode {\n\n\t// 1 input\n\n\tstatic RADIANS = 'radians';\n\tstatic DEGREES = 'degrees';\n\tstatic EXP = 'exp';\n\tstatic EXP2 = 'exp2';\n\tstatic LOG = 'log';\n\tstatic LOG2 = 'log2';\n\tstatic SQRT = 'sqrt';\n\tstatic INVERSE_SQRT = 'inversesqrt';\n\tstatic FLOOR = 'floor';\n\tstatic CEIL = 'ceil';\n\tstatic NORMALIZE = 'normalize';\n\tstatic FRACT = 'fract';\n\tstatic SIN = 'sin';\n\tstatic COS = 'cos';\n\tstatic TAN = 'tan';\n\tstatic ASIN = 'asin';\n\tstatic ACOS = 'acos';\n\tstatic ATAN = 'atan';\n\tstatic ABS = 'abs';\n\tstatic SIGN = 'sign';\n\tstatic LENGTH = 'length';\n\tstatic NEGATE = 'negate';\n\tstatic INVERT = 'invert';\n\tstatic DFDX = 'dFdx';\n\tstatic DFDY = 'dFdy';\n\tstatic ROUND = 'round';\n\tstatic RECIPROCAL = 'reciprocal';\n\n\t// 2 inputs\n\n\tstatic ATAN2 = 'atan2';\n\tstatic MIN = 'min';\n\tstatic MAX = 'max';\n\tstatic MOD = 'mod';\n\tstatic STEP = 'step';\n\tstatic REFLECT = 'reflect';\n\tstatic DISTANCE = 'distance';\n\tstatic DOT = 'dot';\n\tstatic CROSS = 'cross';\n\tstatic POW = 'pow';\n\tstatic TRANSFORM_DIRECTION = 'transformDirection';\n\n\t// 3 inputs\n\n\tstatic MIX = 'mix';\n\tstatic CLAMP = 'clamp';\n\tstatic REFRACT = 'refract';\n\tstatic SMOOTHSTEP = 'smoothstep';\n\tstatic FACEFORWARD = 'faceforward';\n\n\tconstructor( method, aNode, bNode = null, cNode = null ) {\n\n\t\tsuper();\n\n\t\tthis.method = method;\n\n\t\tthis.aNode = aNode;\n\t\tthis.bNode = bNode;\n\t\tthis.cNode = cNode;\n\n\t}\n\n\tgetInputType( builder ) {\n\n\t\tconst aType = this.aNode.getNodeType( builder );\n\t\tconst bType = this.bNode ? this.bNode.getNodeType( builder ) : null;\n\t\tconst cType = this.cNode ? this.cNode.getNodeType( builder ) : null;\n\n\t\tconst aLen = builder.isMatrix( aType ) ? 0 : builder.getTypeLength( aType );\n\t\tconst bLen = builder.isMatrix( bType ) ? 0 : builder.getTypeLength( bType );\n\t\tconst cLen = builder.isMatrix( cType ) ? 0 : builder.getTypeLength( cType );\n\n\t\tif ( aLen > bLen && aLen > cLen ) {\n\n\t\t\treturn aType;\n\n\t\t} else if ( bLen > cLen ) {\n\n\t\t\treturn bType;\n\n\t\t} else if ( cLen > aLen ) {\n\n\t\t\treturn cType;\n\n\t\t}\n\n\t\treturn aType;\n\n\t}\n\n\tgetNodeType( builder ) {\n\n\t\tconst method = this.method;\n\n\t\tif ( method === MathNode.LENGTH || method === MathNode.DISTANCE || method === MathNode.DOT ) {\n\n\t\t\treturn 'float';\n\n\t\t} else if ( method === MathNode.CROSS ) {\n\n\t\t\treturn 'vec3';\n\n\t\t} else {\n\n\t\t\treturn this.getInputType( builder );\n\n\t\t}\n\n\t}\n\n\tgenerate( builder, output ) {\n\n\t\tconst method = this.method;\n\n\t\tconst type = this.getNodeType( builder );\n\t\tconst inputType = this.getInputType( builder );\n\n\t\tconst a = this.aNode;\n\t\tconst b = this.bNode;\n\t\tconst c = this.cNode;\n\n\t\tconst isWebGL = builder.renderer.isWebGLRenderer === true;\n\n\t\tif ( method === MathNode.TRANSFORM_DIRECTION ) {\n\n\t\t\t// dir can be either a direction vector or a normal vector\n\t\t\t// upper-left 3x3 of matrix is assumed to be orthogonal\n\n\t\t\tlet tA = a;\n\t\t\tlet tB = b;\n\n\t\t\tif ( builder.isMatrix( tA.getNodeType( builder ) ) ) {\n\n\t\t\t\ttB = new ExpressionNode( `${ builder.getType( 'vec4' ) }( ${ tB.build( builder, 'vec3' ) }, 0.0 )`, 'vec4' );\n\n\t\t\t} else {\n\n\t\t\t\ttA = new ExpressionNode( `${ builder.getType( 'vec4' ) }( ${ tA.build( builder, 'vec3' ) }, 0.0 )`, 'vec4' );\n\n\t\t\t}\n\n\t\t\tconst mulNode = new SplitNode( new OperatorNode( '*', tA, tB ), 'xyz' );\n\n\t\t\treturn new MathNode( MathNode.NORMALIZE, mulNode ).build( builder );\n\n\t\t} else if ( method === MathNode.NEGATE ) {\n\n\t\t\treturn builder.format( '( -' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else if ( method === MathNode.INVERT ) {\n\n\t\t\treturn builder.format( '( 1.0 - ' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else if ( method === MathNode.RECIPROCAL ) {\n\n\t\t\treturn builder.format( '( 1.0 / ' + a.build( builder, inputType ) + ' )', type, output );\n\n\t\t} else {\n\n\t\t\tconst params = [];\n\n\t\t\tif ( method === MathNode.CROSS ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, type ),\n\t\t\t\t\tb.build( builder, type )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.STEP ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, builder.getTypeLength( a.getNodeType( builder ) ) === 1 ? 'float' : inputType ),\n\t\t\t\t\tb.build( builder, inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( ( isWebGL && ( method === MathNode.MIN || method === MathNode.MAX ) ) || method === MathNode.MOD ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, builder.getTypeLength( b.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.REFRACT ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, 'float' )\n\t\t\t\t);\n\n\t\t\t} else if ( method === MathNode.MIX ) {\n\n\t\t\t\tparams.push(\n\t\t\t\t\ta.build( builder, inputType ),\n\t\t\t\t\tb.build( builder, inputType ),\n\t\t\t\t\tc.build( builder, builder.getTypeLength( c.getNodeType( builder ) ) === 1 ? 'float' : inputType )\n\t\t\t\t);\n\n\t\t\t} else {\n\n\t\t\t\tparams.push( a.build( builder, inputType ) );\n\n\t\t\t\tif ( c !== null ) {\n\n\t\t\t\t\tparams.push( b.build( builder, inputType ), c.build( builder, inputType ) );\n\n\t\t\t\t} else if ( b !== null ) {\n\n\t\t\t\t\tparams.push( b.build( builder, inputType ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn builder.format( `${ builder.getMethod( method ) }( ${params.join( ', ' )} )`, type, output );\n\n\t\t}\n\n\t}\n\n\tserialize( data ) {\n\n\t\tsuper.serialize( data );\n\n\t\tdata.method = this.method;\n\n\t}\n\n\tdeserialize( data ) {\n\n\t\tsuper.deserialize( data );\n\n\t\tthis.method = data.method;\n\n\t}\n\n}\n\nexport default MathNode;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}