{"ast":null,"code":"import { Vector3 } from '../math/Vector3.js';\nimport { Quaternion } from '../math/Quaternion.js';\nimport { Audio } from './Audio.js';\nconst _position = /*@__PURE__*/new Vector3();\nconst _quaternion = /*@__PURE__*/new Quaternion();\nconst _scale = /*@__PURE__*/new Vector3();\nconst _orientation = /*@__PURE__*/new Vector3();\nclass PositionalAudio extends Audio {\n  constructor(listener) {\n    super(listener);\n    this.panner = this.context.createPanner();\n    this.panner.panningModel = 'HRTF';\n    this.panner.connect(this.gain);\n  }\n  disconnect() {\n    super.disconnect();\n    this.panner.disconnect(this.gain);\n  }\n  getOutput() {\n    return this.panner;\n  }\n  getRefDistance() {\n    return this.panner.refDistance;\n  }\n  setRefDistance(value) {\n    this.panner.refDistance = value;\n    return this;\n  }\n  getRolloffFactor() {\n    return this.panner.rolloffFactor;\n  }\n  setRolloffFactor(value) {\n    this.panner.rolloffFactor = value;\n    return this;\n  }\n  getDistanceModel() {\n    return this.panner.distanceModel;\n  }\n  setDistanceModel(value) {\n    this.panner.distanceModel = value;\n    return this;\n  }\n  getMaxDistance() {\n    return this.panner.maxDistance;\n  }\n  setMaxDistance(value) {\n    this.panner.maxDistance = value;\n    return this;\n  }\n  setDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n    this.panner.coneInnerAngle = coneInnerAngle;\n    this.panner.coneOuterAngle = coneOuterAngle;\n    this.panner.coneOuterGain = coneOuterGain;\n    return this;\n  }\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (this.hasPlaybackControl === true && this.isPlaying === false) return;\n    this.matrixWorld.decompose(_position, _quaternion, _scale);\n    _orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n    const panner = this.panner;\n    if (panner.positionX) {\n      // code path for Chrome and Firefox (see #14393)\n\n      const endTime = this.context.currentTime + this.listener.timeDelta;\n      panner.positionX.linearRampToValueAtTime(_position.x, endTime);\n      panner.positionY.linearRampToValueAtTime(_position.y, endTime);\n      panner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n      panner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n      panner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n      panner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n    } else {\n      panner.setPosition(_position.x, _position.y, _position.z);\n      panner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n    }\n  }\n}\nexport { PositionalAudio };","map":{"version":3,"names":["Vector3","Quaternion","Audio","_position","_quaternion","_scale","_orientation","PositionalAudio","constructor","listener","panner","context","createPanner","panningModel","connect","gain","disconnect","getOutput","getRefDistance","refDistance","setRefDistance","value","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","updateMatrixWorld","force","hasPlaybackControl","isPlaying","matrixWorld","decompose","set","applyQuaternion","positionX","endTime","currentTime","timeDelta","linearRampToValueAtTime","x","positionY","y","positionZ","z","orientationX","orientationY","orientationZ","setPosition","setOrientation"],"sources":["C:/Users/dro1l/source/repos/StaffWork/staffwork.client/node_modules/three/src/audio/PositionalAudio.js"],"sourcesContent":["import { Vector3 } from '../math/Vector3.js';\nimport { Quaternion } from '../math/Quaternion.js';\nimport { Audio } from './Audio.js';\n\nconst _position = /*@__PURE__*/ new Vector3();\nconst _quaternion = /*@__PURE__*/ new Quaternion();\nconst _scale = /*@__PURE__*/ new Vector3();\nconst _orientation = /*@__PURE__*/ new Vector3();\n\nclass PositionalAudio extends Audio {\n\n\tconstructor( listener ) {\n\n\t\tsuper( listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tdisconnect() {\n\n\t\tsuper.disconnect();\n\n\t\tthis.panner.disconnect( this.gain );\n\n\t}\n\n\tgetOutput() {\n\n\t\treturn this.panner;\n\n\t}\n\n\tgetRefDistance() {\n\n\t\treturn this.panner.refDistance;\n\n\t}\n\n\tsetRefDistance( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetRolloffFactor() {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t}\n\n\tsetRolloffFactor( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetDistanceModel() {\n\n\t\treturn this.panner.distanceModel;\n\n\t}\n\n\tsetDistanceModel( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t\treturn this;\n\n\t}\n\n\tgetMaxDistance() {\n\n\t\treturn this.panner.maxDistance;\n\n\t}\n\n\tsetMaxDistance( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t\treturn this;\n\n\t}\n\n\tsetDirectionalCone( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\treturn this;\n\n\t}\n\n\tupdateMatrixWorld( force ) {\n\n\t\tsuper.updateMatrixWorld( force );\n\n\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) return;\n\n\t\tthis.matrixWorld.decompose( _position, _quaternion, _scale );\n\n\t\t_orientation.set( 0, 0, 1 ).applyQuaternion( _quaternion );\n\n\t\tconst panner = this.panner;\n\n\t\tif ( panner.positionX ) {\n\n\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\tpanner.positionX.linearRampToValueAtTime( _position.x, endTime );\n\t\t\tpanner.positionY.linearRampToValueAtTime( _position.y, endTime );\n\t\t\tpanner.positionZ.linearRampToValueAtTime( _position.z, endTime );\n\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation.z, endTime );\n\n\t\t} else {\n\n\t\t\tpanner.setPosition( _position.x, _position.y, _position.z );\n\t\t\tpanner.setOrientation( _orientation.x, _orientation.y, _orientation.z );\n\n\t\t}\n\n\t}\n\n}\n\nexport { PositionalAudio };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}